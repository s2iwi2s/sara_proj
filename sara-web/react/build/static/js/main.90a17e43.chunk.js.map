{"version":3,"sources":["security/AuthenticationService.js","api/ErrorComponent.jsx","api/Utils.js","forms/common/NestedMenuComponent.js","forms/common/MenuComponent.js","forms/common/HeaderComponent.jsx","forms/common/FooterComponent.jsx","api/endUser/EndUserService.jsx","forms/endUser/EndUserListComponent.jsx","forms/common/TextFormControl.js","forms/endUser/EndUserDetailHtml.js","api/address/AddressService.jsx","forms/address/AddressListComponent.jsx","forms/endUser/EndUserDetailComponent.jsx","forms/address/AddressDetailComponent.jsx","security/AuthenticatedRoute.jsx","security/LoginComponent.jsx","security/LogoutComponent.jsx","api/codeGroups/CodeGroupsService.jsx","forms/codeGroups/CodeGroupsListComponent.jsx","forms/codeGroups/CodeGroupsDetailComponent.jsx","forms/Dashboard.jsx","AppRouting.jsx","App.js","serviceWorker.js","index.js"],"names":["myInterceptor","ErrorComponent","render","className","React","Component","urlListPattern","entity","urlDeletePattern","urlDetailsPattern","urlSavePattern","handleErrorResponse","error","comp","errStr","JSON","stringify","console","status","message","name","stack","initialize","isUserLoggedIn","jwtTokenHeader","getJwtTokenHeader","setupAxiosInterceptors","getBasicAuthHeader","username","password","auth","executeJwtAuthenticationService","theurl","axios","post","registerJwtSucessfulLogin","jwtToken","log","sessionStorage","setItem","getJwtToken","getLoginUserName","getItem","logout","interceptors","request","eject","removeItem","authHeader","use","a","config","headers","authorization","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","NestedMenuComponent","classes","useState","open","setOpen","List","component","aria-labelledby","subheader","ListSubheader","id","ListItem","button","ListItemIcon","ListItemText","primary","onClick","Collapse","in","timeout","unmountOnExit","disablePadding","MenuComponent","props","anchorEl","setAnchorEl","AuthenticationService","Button","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","onClose","MenuItem","to","Divider","light","key","HeaderComponent","gotoHome","history","push","alt","src","faker","image","business","company","companyName","withRouter","FooterComponent","getList","searchValue","page","pageSize","Utils","get","delete","save","data","EndUserListComponent","state","list","paging","rowsPerPage","totalElements","currentPage","componentDidMount","retrieve","EndUserService","then","response","setState","pagingList","content","size","pageable","pageNumber","sort","direction","edit","handleKeyDown","e","target","value","preventDefault","changeState","handleChangePage","newPage","handleChangeRowsPerPage","Typography","variant","color","FormControl","Input","placeholder","onChange","onKeyDown","endAdornment","TablePagination","count","onChangePage","onChangeRowsPerPage","Table","TableHead","TableRow","TableCell","TableBody","map","row","firstName","lastName","align","TextFormControl","fullWidth","margin","type","TextField","label","EndUserDetailHtml","userName","doChangeState","children","doSave","doEditAddress","doCancel","getListByEndUser","endUserId","getByEndUser","AddressListComponent","endUserHistory","hasEndUser","AddressService","renderPagination","hsize","address1","address2","city","country","zipCode","billTo","shipTo","EndUserDetailComponent","getBlankDetails","doRetrieve","match","params","thestate","listService","address","addressId","userId","doCancelAddress","AddressDetailComponent","endUser","routeUrl","changeSelectState","renderOptions","optionsList","description","cancel","AuthenticatedRoute","LoginComponent","changeHandler","loginClicked","token","hasLoginFailed","alertClass","catch","LogoutComponent","CodeGroupsListComponent","CodeGroupsService","code","bool","num","CodeGroupsDetailComponent","Dashboard","process","height","fashion","commerce","productName","random","words","href","role","people","transport","sports","AppRouting","path","exact","App","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90a17e43.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { AUTH_URL_BASE, AUTH_USER, JWT_TOKEN } from '../api/Utils.js'\r\nlet myInterceptor\r\nclass AuthenticationService extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.initialize();\r\n    }\r\n    initialize = () => {\r\n        if (this.isUserLoggedIn()) {\r\n            let jwtTokenHeader = this.getJwtTokenHeader()\r\n            this.setupAxiosInterceptors(jwtTokenHeader);\r\n        }\r\n    }\r\n    // executeBasicAuthenticationService = (username, password) => {\r\n    //     const theurl = `${URL_BASE}/basicauth`\r\n    //     return axios.get(theurl, Utils.getBasicAuthHeader(username, password));\r\n    // }\r\n\r\n    getBasicAuthHeader = (username, password) => {\r\n        return {\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            }\r\n        };\r\n    }\r\n\r\n    executeJwtAuthenticationService = (username, password) => {\r\n        const theurl = `${AUTH_URL_BASE}`\r\n        //console.log(`[AuthenticationService.executeJwtAuthenticationService] theurl=${theurl}`);\r\n        return axios.post(theurl, { username, password });\r\n    }\r\n\r\n    // registerBasicAuthSucessfulLogin = (username, password) => {\r\n    //     //console.log('[AuthenticationService.registerSucessfulLogin] init');\r\n    //     sessionStorage.setItem(AUTH_USER, username);\r\n\r\n    //     let basicAuthHeader = 'Basic ' + window.btoa(username + ':' + password);\r\n    //     this.setupAxiosInterceptors(basicAuthHeader);\r\n    // }\r\n\r\n    registerJwtSucessfulLogin = (username, jwtToken) => {\r\n        console.log('[AuthenticationService.registerJwtSucessfulLogin] init');\r\n        sessionStorage.setItem(AUTH_USER, username);\r\n        sessionStorage.setItem(JWT_TOKEN, jwtToken);\r\n\r\n        let jwtTokenHeader = this.getJwtTokenHeader()\r\n        this.setupAxiosInterceptors(jwtTokenHeader);\r\n    }\r\n\r\n    getJwtTokenHeader = () => {\r\n        let jwtToken = this.getJwtToken();\r\n        let jwtTokenHeader = `Bearer ${jwtToken}`;\r\n        return jwtTokenHeader;\r\n    }\r\n\r\n    getLoginUserName = () => {\r\n        let user = sessionStorage.getItem(AUTH_USER);\r\n        return user;\r\n    }\r\n\r\n    getJwtToken = () => {\r\n        let jwtToken = sessionStorage.getItem(JWT_TOKEN);\r\n        return jwtToken;\r\n    }\r\n\r\n    logout = () => {\r\n        axios.interceptors.request.eject(myInterceptor);\r\n        sessionStorage.removeItem(AUTH_USER);\r\n        sessionStorage.removeItem(JWT_TOKEN);\r\n    }\r\n\r\n    isUserLoggedIn = () => {\r\n        let user = this.getLoginUserName();\r\n        return (user != null);\r\n    }\r\n\r\n    setupAxiosInterceptors = (authHeader) => {\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] init..');\r\n        console.log(`[AuthenticationService.setupAxiosInterceptors] authHeader: ${authHeader}`);\r\n        myInterceptor = axios.interceptors.request.use(\r\n            async config => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = authHeader;\r\n                }\r\n                return config;\r\n            }\r\n        );\r\n\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] done!');\r\n    }\r\n}\r\nexport default new AuthenticationService();","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"container\">Oooops!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorComponent;","\r\n// export const URL_BASE = 'http://localhost:8081';\r\nexport const URL_BASE_DEV = 'http://localhost:5000';\r\nexport const URL_BASE = process.env.NODE_ENV === 'development' ? URL_BASE_DEV : '';\r\nexport const AUTH_URL_BASE = URL_BASE + '/auth';\r\nexport const API_URL_BASE = URL_BASE + '/api/';\r\n\r\n\r\nexport const URL_LIST = \"/l\";\r\nexport const URL_DELETE = \"/d\";\r\nexport const URL_DETAILS = \"/g\";\r\nexport const URL_SAVE = \"/s\";\r\n\r\nexport const AUTH_USER = 'auth/setUser';\r\nexport const JWT_TOKEN = 'auth/setToken';\r\n\r\nexport const UPDATE_ERROR = 'Error: Unable to update. Please contact system administrator.';\r\nexport const REQUIRED_DESCRIPTION = 'Description is required';\r\nexport const REQUIRED_5_DESCRIPTION = 'Description should be atleast 5 characters';\r\nexport const REQUIRED_TARGET_DATE = 'Target date is required';\r\n\r\nclass Utils {\r\n    urlListPattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_LIST;\r\n    }\r\n    urlDeletePattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_DELETE;\r\n    }\r\n    urlDetailsPattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_DETAILS;\r\n    }\r\n    urlSavePattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_SAVE;\r\n    }\r\n    handleErrorResponse = (error, comp) => {\r\n        const errStr = JSON.stringify(error);\r\n        console.error(`Utils[][${comp}][ERROR] ${errStr}`)\r\n        if (error.status) {\r\n            //{\"timestamp\":\"2020-08-24T23:57:30.853+00:00\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"Unauthorized\",\"path\":\"/users/test/todos\"}\r\n            console.error(`[Utils][${comp}][ERROR] ${error.status}: ${error.message}`)\r\n        } else {\r\n            console.error(`[Utils][${comp}][ERROR] ${error.name}: ${error.message}`)\r\n            console.error(`[Utils][${comp}][ERROR] stack ${error.stack}`)\r\n        }\r\n\r\n        //const errorMessage = `${error.name}: ${error.message}`;\r\n        //this.handleState('', errorMessage);\r\n        //console.error(error);\r\n    }\r\n}\r\n\r\nexport default new Utils();","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n root: {\r\n  width: '100%',\r\n  maxWidth: 360,\r\n  backgroundColor: theme.palette.background.paper,\r\n },\r\n nested: {\r\n  paddingLeft: theme.spacing(4),\r\n },\r\n}));\r\n\r\nexport default function NestedMenuComponent() {\r\n const classes = useStyles();\r\n const [open, setOpen] = React.useState(true);\r\n\r\n const handleClick = () => {\r\n  setOpen(!open);\r\n };\r\n\r\n return (\r\n  <List className=\"bg-dark text-light\"\r\n   component=\"nav\"\r\n   aria-labelledby=\"nested-list-subheader\"\r\n   subheader={\r\n    <ListSubheader component=\"div\" id=\"nested-list-subheader\" className=\"bg-dark text-light\">\r\n     Menu\r\n    </ListSubheader>\r\n   }\r\n   className=\"bg-dark text-light\"\r\n  >\r\n   <ListItem button>\r\n    <ListItemIcon>\r\n     <SendIcon />\r\n    </ListItemIcon>\r\n    <ListItemText primary=\"Sent mail\" />\r\n   </ListItem>\r\n   <ListItem button>\r\n    <ListItemIcon>\r\n     <DraftsIcon />\r\n    </ListItemIcon>\r\n    <ListItemText primary=\"Drafts\" />\r\n   </ListItem>\r\n   <ListItem button onClick={handleClick}>\r\n    <ListItemIcon>\r\n     <InboxIcon />\r\n    </ListItemIcon>\r\n    <ListItemText primary=\"Inbox\" />\r\n    {open ? <ExpandLess /> : <ExpandMore />}\r\n   </ListItem>\r\n   <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n    <List component=\"div\" disablePadding>\r\n     <ListItem button className={classes.nested}>\r\n      <ListItemIcon>\r\n       <StarBorder />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Starred\" />\r\n     </ListItem>\r\n    </List>\r\n   </Collapse>\r\n  </List>\r\n );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider, ListItem, MenuList } from '@material-ui/core';\r\nimport AuthenticationService from '../../security/AuthenticationService'\r\nimport NestedMenuComponent from './NestedMenuComponent';\r\n\r\nexport default function MenuComponent(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <DehazeIcon className=\"text-light\" />\r\n      </Button>\r\n\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <NestedMenuComponent />\r\n        {\r\n          isUserLoggedIn && <>\r\n            <MenuItem className=\"bg-dark\">\r\n              <Link className=\"text-light\" to=\"/end-user-list\">Users</Link>\r\n            </MenuItem>\r\n            <MenuItem className=\"bg-dark\"><Link className=\"text-light\" to=\"/address-list\">Address</Link></MenuItem>\r\n            <MenuItem className=\"bg-dark\" ><Link className=\"text-light\" to=\"/code-groups-list\">Code Groups</Link></MenuItem>\r\n            <Divider light />\r\n          </>\r\n        }\r\n        {!isUserLoggedIn && <MenuItem key=\"loginId\" className=\"bg-dark\"><Link to=\"/login\" className=\"text-light\">Login</Link></MenuItem>}\r\n        {isUserLoggedIn && <MenuItem key=\"logoutId\" className=\"bg-dark \"><Link to=\"/logout\" className=\"text-light\" onClick={AuthenticationService.logout} >Logout</Link></MenuItem>}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n// import AuthenticationService from '../../security/AuthenticationService'\r\nimport MenuComponent from './MenuComponent'\r\nimport faker from 'faker'\r\nimport NestedMenuComponent from './NestedMenuComponent';\r\n\r\nclass HeaderComponent extends React.Component {\r\n    gotoHome = () => {\r\n        this.props.history.push(`/home`);\r\n    }\r\n    render = () => {\r\n        // let userName = AuthenticationService.getLoginUserName();\r\n        // const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        return (\r\n            <header className=\"bg-dark\">\r\n                <nav className=\"container navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <MenuComponent />\r\n                    <Link className=\"nav-link\" to=\"/\"><img alt=\"\" className=\"rounded-circle\" src={faker.image.business(60, 60)} /></Link>\r\n                    <Link className=\"nav-link text-light\" to=\"/\"><b>{faker.company.companyName()}</b></Link>\r\n\r\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end fg-light\">\r\n                        {/* {isUserLoggedIn && <li key=\"welcomeId\"><Link className=\"text-light pr-5\" to=\"/\">Welcome <b>{faker.name.firstName() + \" \" + faker.name.lastName()} </b></Link></li>}\r\n                        {!isUserLoggedIn && <li key=\"loginId\"><Link className=\"nav-link text-light\" to=\"/login\">Login</Link></li>}\r\n                        {isUserLoggedIn && <li key=\"logoutId\"><Link className=\"nav-link text-light\" to=\"/logout\" onClick={AuthenticationService.logout} >Logout</Link></li>} */}\r\n                    </ul>\r\n\r\n\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    // <header className=\"bg-dark\">\r\n    //     <nav class=\"container navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    //         <a class=\"navbar-brand\" href=\"#\"><img src=\"http://placeimg.com/60/60/business\" /></a>\r\n    //         <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    //             <span class=\"navbar-toggler-icon\"></span>\r\n    //         </button>\r\n\r\n    //         <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    //             <ul class=\"navbar-nav mr-auto\">\r\n    //                 <li class=\"nav-item active\">\r\n    //                     <a class=\"nav-link\" href=\"#\" onClick={() => this.gotoHome()}>Home <span class=\"sr-only\">(current)</span></a>\r\n    //                 </li>\r\n    //             </ul>\r\n    //             <ul className=\"navbar-nav navbar-collapse justify-content-end\">\r\n    //                 {!isUserLoggedIn && <li key=\"loginId\"><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\r\n    //                 {isUserLoggedIn && <li key=\"logoutId\"><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout} >Logout</Link></li>}\r\n    //             </ul>\r\n    //             <ul class=\"navbar-nav mr-auto justify-content-end\">\r\n    //                 <li class=\"nav-item dropdown \">\r\n    //                     <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n    //                         <Icon>view_list</Icon>\r\n    //                     </a>\r\n    //                     <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n    //                         <Link className=\"dropdown-item\" to=\"/end-user-list\">Users</Link>\r\n    //                         <Link className=\"dropdown-item\" to=\"/address-list\">Address</Link>\r\n    //                         <Link className=\"dropdown-item\" to=\"/code-groups-list\">Code Groups</Link>\r\n    //                         <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n    //                         <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n    //                         <div class=\"dropdown-divider\"></div>\r\n    //                         <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n    //                     </div>\r\n    //                 </li>\r\n    //             </ul>\r\n    //         </div>\r\n    //     </nav>\r\n    // </header>\r\n}\r\n\r\nexport default withRouter(HeaderComponent);\r\n","import React from 'react';\r\n\r\nclass FooterComponent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <footer className=\"footer bg-dark text-center\">\r\n                <span className=\"text-muted\">All Rights Reserved 1977 @stoi</span>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\nexport const ENTITY = \"endUser\";\nclass EndUserService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new EndUserService();\n\n\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableRow, TableCell, Button, TableBody, TablePagination, FormControl, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport EndUserService from '../../api/endUser/EndUserService';\n\nclass EndUserListComponent extends React.Component {\n  state = {\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  };\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n  retrieve = () => {\n    EndUserService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n      .then(response => {\n        console.log(`[EndUserListComponent.retrieve ] EndUserService.getList response=>`, response)\n        this.setState({\n          list: response.data.pagingList.content,\n          searchValue: response.data.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            totalElements: response.data.pagingList.totalElements,\n            currentPage: response.data.pagingList.pageable.pageNumber,\n            sort: 'title',\n            direction: 'ASC'\n          }\n        })\n      })\n  }\n  edit = (id) => {\n    console.log(`[EndUserListComponent.edit] id=${id}`)\n    this.props.history.push(`/end-user-detail/${id}`);\n  }\n  delete = (id) => {\n    console.log(`[EndUserListComponent.delete] id=${id}`)\n    EndUserService.delete(id)\n      .then(response => {\n        console.log(`[EndUserListComponent.delete] response==>`, response)\n        this.retrieve();\n      })\n  }\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.retrieve();\n    }\n  }\n\n  changeState = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  render = () => {\n    return (\n      <div className=\"container\">\n        <Typography variant=\"h4\">Users</Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(-1)}>NEW</Button>\n        <div className=\"text-right\">\n          <FormControl variant=\"filled\">\n            <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n              onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n              endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\n            />\n          </FormControl>\n        </div>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>First Name</TableCell>\n              <TableCell>Last Name</TableCell>\n\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.list.map(row => (\n              <TableRow key={row.id}>\n                <TableCell>{row.firstName}</TableCell>\n                <TableCell>{row.lastName}</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(row.id)}>Edit</Button>&nbsp;\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => this.delete(row.id)}>Delete</Button></TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </div >\n    );\n  }\n}\n\nexport default EndUserListComponent;\n\n\n","\r\nimport React from 'react';\r\nimport { FormControl, TextField } from '@material-ui/core';\r\n\r\nexport default function TextFormControl(props) {\r\n\r\n  return (\r\n    <FormControl fullWidth margin=\"normal\" >\r\n      { props.type === 'hidden' &&\r\n        <input\r\n          type={props.type}\r\n          name={props.name} value={props.value} />\r\n      }\r\n      {props.type !== 'hidden' &&\r\n        <>\r\n          {/* <InputLabel htmlFor={props.name + 'id'}>{props.label}</InputLabel>\r\n          <TextField labelId={props.name + 'id'} placeholder={\"Enter \" + props.label} */}\r\n          <TextField label={props.label} placeholder={\"Enter \" + props.label}\r\n            type={props.type ? props.type : \"text\"}\r\n            name={props.name} value={props.value}\r\n            onChange={(e) => props.changeState(e)} />\r\n        </>\r\n      }\r\n    </FormControl >\r\n  );\r\n}\r\n\r\n\r\n// export default class TextFormControl extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n//   render = () => {\r\n//     if (this.props.type == 'hidden') {\r\n//       return (\r\n//         <TextField\r\n//           type={this.props.type}\r\n//           name={this.props.name} value={this.props.value} />\r\n//       );\r\n//     }\r\n//     return (\r\n//       <FormControl fullWidth margin=\"normal\" >\r\n//         <TextField label={this.props.label} placeholder={\"Enter \" + this.props.label}\r\n//           type={this.props.type ? this.props.type : \"text\"}\r\n//           name={this.props.name} value={this.props.value}\r\n//           onChange={(e) => this.props.changeState(e)} />\r\n//       </FormControl>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextFormControl from '../common/TextFormControl';\r\nimport { Button } from '@material-ui/core';\r\nconst EndUserDetailHtml = props => {\r\n      return (\r\n            <div className=\"container\">\r\n                  <Typography variant=\"h4\">User Detail</Typography>\r\n                  <form>\r\n                        <TextFormControl label=\"User Name\"\r\n                              name=\"userName\" value={props.userName}\r\n                              changeState={props.doChangeState} />\r\n\r\n                        <TextFormControl label=\"Password\" type=\"password\"\r\n                              name=\"password\" value={props.password}\r\n                              changeState={props.doChangeState} />\r\n\r\n                        <TextFormControl label=\"First Name\"\r\n                              name=\"firstName\" value={props.firstName}\r\n                              changeState={props.doChangeState} />\r\n\r\n                        <TextFormControl label=\"Last Name\"\r\n                              name=\"lastName\" value={props.lastName}\r\n                              changeState={props.doChangeState} />\r\n\r\n                        {props.children}\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => props.doSave()}>Save</Button>&nbsp;\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => props.doEditAddress(-1, props.id)}>Add Address</Button>&nbsp;\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => props.doCancel()}>Cancel</Button>\r\n                  </form>\r\n            </div >\r\n      );\r\n};\r\n\r\nexport default EndUserDetailHtml;","import axios from \"axios\";\nimport Utils, { API_URL_BASE } from '../Utils'\n\nexport const ENTITY = \"address\";\nclass AddressService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n getListByEndUser = (endUserId, searchValue) => {\n  const theurl = `${API_URL_BASE}address/by/END_USER/${endUserId}?searchValue=${searchValue}`\n  return axios.get(theurl);\n }\n getByEndUser = (endUserId) => {\n  const theurl = `${API_URL_BASE}address/endUser/${endUserId}`\n  return axios.get(theurl);\n }\n}\n\nexport default new AddressService();\n\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableRow, TableCell, Button, TableBody, TablePagination, FormControl, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport AddressService from '../../api/address/AddressService';\n\nclass AddressListComponent extends React.Component {\n  state = {\n    searchValue: '',\n    list: [],\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  };\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    //this.props.endUserId\n    console.log('this.props.endUserHistory=' + this.props.endUserHistory);\n    if (this.hasEndUser()) {\n      AddressService.getListByEndUser(this.props.endUserId, this.state.searchValue)\n        .then(response => {\n          console.log(`[AddressListComponent AddressService.getListByEndUser] response=>`, response)\n          this.setState({\n            searchValue: response.data.searchValue,\n            list: response.data.list\n          })\n        })\n    } else {\n      AddressService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n        .then(response => {\n          console.log(`[AddressListComponent AddressService.getList] response=>`, response)\n          this.setState({\n            list: response.data.pagingList.content,\n            searchValue: response.data.searchValue,\n            paging: {\n              rowsPerPage: response.data.pagingList.size,\n              totalElements: response.data.pagingList.totalElements,\n              currentPage: response.data.pagingList.pageable.pageNumber,\n              sort: 'address1',\n              direction: 'ASC'\n            }\n          })\n        })\n    }\n  }\n  edit = (id) => {\n    if (this.hasEndUser()) {\n      this.props.endUserHistory.push(`/address-detail/${id}/${this.props.endUserId}`);\n    } else {\n      this.props.history.push(`/address-detail/${id}`);\n    }\n\n  }\n  delete = (id) => {\n    console.log(`[AddressComponent.delete] id=${id}`)\n    AddressService.delete(id)\n      .then(response => {\n        console.log(`[AddressComponent.delete] response==>`, response)\n        this.retrieve();\n      })\n  }\n\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  hasEndUser = () => {\n    return this.props.endUserId;\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      console.log(`[MyCaseListComponent.handleKeyDown] searchValue=${this.state.searchValue}`)\n      console.log(`2 [MyCaseListComponent.handleKeyDown] ${e.target.value}, state=>`, this.state)\n      this.retrieve();\n    }\n  }\n\n  renderPagination = () => {\n    if (this.hasEndUser()) {\n      return (<></>);\n    }\n    return (\n      <TablePagination\n        component=\"div\"\n        count={this.state.paging.totalElements}\n        page={this.state.paging.currentPage}\n        onChangePage={this.handleChangePage}\n        rowsPerPage={this.state.paging.rowsPerPage}\n        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n      />\n    )\n  }\n\n  render = () => {\n    let hsize = 'h4';\n    if (this.hasEndUser()) {\n      hsize = 'h5';\n    }\n    return (\n      <div className=\"container\">\n\n        <Typography variant={hsize}>Address</Typography>\n        <div className=\"text-right\">\n          <FormControl variant=\"filled\">\n            <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n              onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n              endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\n            />\n          </FormControl>\n        </div>\n        {this.renderPagination()}\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Address</TableCell>\n              <TableCell>Is Billing?</TableCell>\n              <TableCell>Is Shipping?</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {\n              this.state.list.map(row => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>\n                    <div>{row.address1}</div>\n                    <div>{row.address2}</div>\n                    <div>{row.city}, {row.state} {row.country} {row.zipCode}</div>\n                  </TableCell>\n                  <TableCell>{row.billTo}</TableCell>\n                  <TableCell>{row.shipTo}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(row.id)}>Edit</Button>&nbsp;\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.delete(row.id)}>Delete</Button>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n        {this.renderPagination()}\n      </div >\n    );\n  }\n}\n\nexport default AddressListComponent;\n\n\n","import React from 'react';\n\nimport EndUserService from '../../api/endUser/EndUserService';\nimport EndUserDetailHtml from './EndUserDetailHtml';\nimport AddressListComponent from '../address/AddressListComponent';\n\nexport default class EndUserDetailComponent extends React.Component {\n  state = {\n    \"id\": \"\",\n    \"userName\": '',\n    \"firstName\": '',\n    \"lastName\": \"\",\n    \"address\": []\n  };\n\n\n  getBlankDetails = () => {\n    return {\n      \"id\": \"\",\n      \"userName\": '',\n      \"firstName\": '',\n      \"lastName\": \"\",\n      \"address\": []\n    }\n  }\n\n  componentDidMount = () => {\n    this.doRetrieve();\n  }\n\n  doRetrieve = () => {\n    console.log(`[EndUserDetailComponent.doRetrieve] id==>${this.props.match.params.id}`)\n    EndUserService.get(this.props.match.params.id)\n      .then(response => {\n        console.log(`[EndUserDetailComponent.doRetrieve] response==>`, response)\n        let thestate = this.getBlankDetails();\n        if (this.props.match.params.id != -1) {\n          thestate = response.data.entity;\n        }\n        thestate.listService = response.data.listService\n        this.setState(thestate)\n      });\n  }\n\n  doSave = () => {\n    console.log(`[EndUserDetailComponent.save] id==>${this.props.match.params.id}`)\n    EndUserService.save({\n      id: this.state.id,\n      userName: this.state.userName,\n      password: this.state.password,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      address: this.state.address\n    }).then(response => {\n      console.log(`[EndUserDetailComponent.save] response==>`, response)\n      this.props.history.push(`/end-user-list`);\n    });\n  }\n\n  doChangeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n\n  doCancel = () => {\n    this.props.history.push(`/end-user-list`);\n  }\n  doEditAddress = (addressId, userId) => {\n    this.props.history.push(`/address-detail/${addressId}/${userId}`);\n  }\n\n  render = () => {\n    return (\n      <EndUserDetailHtml userName={this.state.userName}\n        id={this.state.id}\n        password={this.state.password}\n        firstName={this.state.firstName}\n        lastName={this.state.lastName}\n        address={this.state.address}\n        doChangeState={this.doChangeState}\n        doSave={this.doSave}\n        doCancel={this.doCancel}\n        doEditAddress={this.doEditAddress}\n      >\n        <AddressListComponent\n          endUserId={this.props.match.params.id}\n          doCancelAddress={this.doCancelAddress}\n          endUserHistory={this.props.history}\n        />\n      </EndUserDetailHtml>\n\n    );\n  }\n}\n\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { MenuItem, Button, FormControl } from '@material-ui/core';\n\nimport AddressService from '../../api/address/AddressService';\nimport TextFormControl from '../common/TextFormControl';\n\nexport default class AddressDetailComponent extends React.Component {\n  state = {\n    \"id\": '',\n    \"endUserId\": '',\n    \"endUser\": { id: \"\", firstName: \"\", lastName: \"\" },\n    \"name\": \"\",\n    \"address1\": \"\",\n    \"address2\": \"\",\n    \"city\": \"\",\n    \"state\": \"\",\n    \"country\": \"\",\n    \"zipCode\": \"\",\n    \"billTo\": \"\",\n    \"shipTo\": \"\"\n  };\n\n  getBlankDetails = () => {\n    return {\n      \"id\": '',\n      \"endUserId\": '',\n      \"endUser\": { id: \"\", firstName: \"\", lastName: \"\" },\n      \"name\": \"\",\n      \"address1\": \"\",\n      \"address2\": \"\",\n      \"city\": \"\",\n      \"state\": \"\",\n      \"country\": \"\",\n      \"zipCode\": \"\",\n      \"billTo\": \"\",\n      \"shipTo\": \"\"\n    }\n  }\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    console.log(`[AddressDetailComponent.retrieve] id=${this.props.match.params.id}, endUserId=${this.props.match.params.endUserId}`);\n    let thestate = this.getBlankDetails();\n    if (this.props.match.params.id == -1 && this.props.match.params.endUserId) {\n      AddressService.getByEndUser(this.props.match.params.endUserId)\n        .then(response => {\n          console.log(`[AddressDetailComponent.retrieve] response=>`, response);\n          thestate = response.data.entity;\n          console.log(`[AddressDetailComponent.retrieve] thestate.endUser=>`, thestate.endUser);\n          thestate.endUserId = thestate.endUser.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    } else {\n      AddressService.get(this.props.match.params.id)\n        .then(response => {\n          thestate = response.data.entity;\n          thestate.endUserId = thestate.endUser.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    }\n  }\n\n  save = () => {\n    AddressService.save({\n      endUser: {\n        id: this.state.endUserId\n      },\n      name: this.state.name,\n      address1: this.state.address1,\n      address2: this.state.address2,\n      city: this.state.city,\n      state: this.state.state,\n      country: this.state.country,\n      zipCode: this.state.zipCode,\n      billTo: this.state.billTo,\n      shipTo: this.state.shipTo,\n\n      id: this.state.id\n    }).then(response => {\n      let routeUrl = `/address-list`;\n      let endUserId = this.props.match.params.endUserId\n      if (endUserId) {\n        routeUrl = `/end-user-detail/${endUserId}`\n      }\n      this.props.history.push(routeUrl);\n    })\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  changeSelectState = (e) => {\n    this.setState({\n      [e.target.name]: { \"id\": e.target.value }\n    })\n  }\n\n  renderOptions = (optionsList) => {\n    return (optionsList.map(row => (\n      <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\n    )))\n  }\n\n  cancel = () => {\n    console.log(`[AddressDetailComponent.cancel] endUserId=${this.props.match.params.endUserId}`);\n    if (this.props.match.params.endUserId) {\n      this.props.history.push(`/end-user-detail/${this.props.match.params.endUserId}`)\n    } else {\n      this.props.history.push(`/address-list`)\n    }\n  }\n\n\n  render = () => {\n    return (\n      <div className=\"container\">\n        <Typography variant=\"h4\">Address Detail</Typography>\n        <form>\n          <FormControl fullWidth margin=\"normal\">\n            <span>End User: {this.state.endUser.lastName}, {this.state.endUser.firstName}</span>\n            <input name=\"endUserId\" type=\"hidden\" value={this.state.endUserId} />\n          </FormControl>\n\n          <TextFormControl label=\"Name\"\n            name=\"name\" value={this.state.name}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 1\"\n            name=\"address1\" value={this.state.address1}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 2\"\n            name=\"address2\" value={this.state.address2}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"City\"\n            name=\"city\" value={this.state.city}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"State\"\n            name=\"state\" value={this.state.state}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Country\"\n            name=\"country\" value={this.state.country}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Zip Code\"\n            name=\"zipCode\" value={this.state.zipCode}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Billing?\"\n            name=\"billTo\" value={this.state.billTo}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Shipping?\"\n            name=\"shipTo\" value={this.state.shipTo}\n            changeState={this.changeState} />\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.save()}>Save</Button>&nbsp;\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.cancel()}>Cancel</Button>\n        </form>\n\n      </div >\n    );\n  }\n}\n\n\n","import React from 'react';\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nclass AuthenticatedRoute extends React.Component {\r\n    render = () => {\r\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        //console.log(`[AuthenticatedRoute]: isUserLoggedIn ${isUserLoggedIn}`);\r\n        if (isUserLoggedIn) {\r\n            return <Route {...this.props} />;\r\n        } else {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n    }\r\n}\r\nexport default AuthenticatedRoute;","import { FormControl, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass LoginComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: 'test',\r\n            hasLoginFailed: false,\r\n            message: '',\r\n            alertClass: ''\r\n        }\r\n    }\r\n\r\n    changeHandler = event => {\r\n        console.log(`name: ${event.target.name}, value: ${event.target.value}`);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    loginClicked = event => {\r\n        console.log('state: ', this.state);\r\n        // if(this.state.username==='test' && this.state.password==='test') {\r\n        //     AuthenticationService.registerSucessfulLogin(this.state.username, this.state.password);\r\n        //     console.log('success');\r\n        //     this.setState({\r\n        //         hasLoginFailed : false,\r\n        //         showSuccessMsg: true\r\n        //     });\r\n        //     this.props.history.push(`/welcome/${this.state.username}`);\r\n        // }else{\r\n        //     this.setState({\r\n        //         hasLoginFailed : true,\r\n        //         showSuccessMsg: false\r\n        //     });\r\n        // }\r\n        //event.preventDefault();\r\n        AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password)\r\n            //executeBasicAuthenticationService(this.state.username, this.state.password)\r\n            .then(response => {\r\n                console.log('[LoginComponent.loginClicked]: response', response);\r\n                AuthenticationService.registerJwtSucessfulLogin(this.state.username, response.data.token)\r\n                //registerBasicAuthSucessfulLogin(this.state.username, this.state.password);\r\n                this.setState({\r\n                    hasLoginFailed: false,\r\n                    message: 'Login Successful!',\r\n                    alertClass: 'alert-success'\r\n                });\r\n                this.props.history.push(`/`);\r\n            }\r\n            ).catch(error => {\r\n                console.log(`[LoginComponent.loginClicked]: error=${JSON.stringify(error)}`);\r\n                this.setState({\r\n                    alertClass: 'alert-danger',\r\n                    message: `Invalid ID or password. Please try again.`,\r\n                    hasLoginFailed: true\r\n                });\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <form className=\"form-signin\">\r\n                    <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n\r\n                    {this.state.message != null && <div className={'text-center alert ' + this.state.alertClass}>{this.state.message}</div>}\r\n                    <FormControl fullWidth margin=\"normal\">\r\n                        <TextField label=\"Username\" placeholder=\"Enter Username\"\r\n                            name=\"username\" value={this.state.username}\r\n                            onChange={(e) => this.changeHandler(e)} />\r\n                    </FormControl>\r\n\r\n                    <FormControl fullWidth margin=\"normal\">\r\n                        <TextField type=\"password\" label=\"Password\" placeholder=\"Enter Password\"\r\n                            name=\"password\" value={this.state.password}\r\n                            onChange={(e) => this.changeHandler(e)} />\r\n                    </FormControl>\r\n\r\n                    <button type=\"button\" className=\"btn btn-lg btn-primary btn-block\" onClick={this.loginClicked}>Sign in</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginComponent;","import React from 'react';\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\n\r\nclass LogoutComponent extends React.Component {\r\n    render = () => {\r\n        AuthenticationService.logout();\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>You are logged out</h1>\r\n                <div className=\"container\">\r\n                    Thank you. Come again!\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogoutComponent;","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\n\nexport const ENTITY = \"codeGroups\";\n\nclass CodeGroupsService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new CodeGroupsService();\n\n\r\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableRow, TableCell, Button, TableBody, TablePagination, FormControl, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CodeGroupsService from '../../api/codeGroups/CodeGroupsService';\n\nclass CodeGroupsListComponent extends React.Component {\n  state = {\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  }\n  componentDidMount = () => {\n    this.retrieve();\n  }\n  retrieve = () => {\n    CodeGroupsService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          list: response.data.pagingList.content,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            totalElements: response.data.pagingList.totalElements,\n            currentPage: response.data.pagingList.pageable.pageNumber\n          }\n        })\n      })\n  }\n  edit = (id) => {\n    console.log(`[CodeGroupsComponent.edit] id=${id}`)\n    this.props.history.push(`/code-groups-detail/${id}`);\n  }\n  delete = (id) => {\n    console.log(`[CodeGroupsComponent.delete] id=${id}`)\n    CodeGroupsService.delete(id)\n      .then(response => {\n        console.log(`[CodeGroupsComponent.delete] response==>`, response)\n        this.retrieve();\n      })\n  }\n\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      console.log(`[CodeGroupsListComponent.handleKeyDown] searchValue=${this.state.searchValue}`)\n      console.log(`2 [CodeGroupsListComponent.handleKeyDown] ${e.target.value}, state=>`, this.state)\n      this.retrieve();\n    }\n  }\n\n  render = () => {\n    return (\n      <div className=\"container\">\n        <Typography variant=\"h4\">CodeGroups List</Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(-1)}>NEW</Button>\n        <div className=\"text-right\">\n          <FormControl variant=\"filled\">\n            <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n              onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n              endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\n            />\n          </FormControl>\n        </div>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Code</TableCell>\n              <TableCell>Value</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Bool</TableCell>\n              <TableCell>Num</TableCell>\n\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.list.map(row => (\n              <TableRow key={row.id}>\n                <TableCell>{row.code}</TableCell>\n                <TableCell>{row.value}</TableCell>\n                <TableCell>{row.description}</TableCell>\n                <TableCell>{row.bool}</TableCell>\n                <TableCell>{row.num}</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(row.id)}>Edit</Button>&nbsp;\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => this.delete(row.id)}>Delete</Button></TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </div >\n    );\n  }\n}\n\nexport default CodeGroupsListComponent;\n\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { MenuItem, Button } from '@material-ui/core';\n\nimport TextFormControl from '../common/TextFormControl';\nimport CodeGroupsService from '../../api/codeGroups/CodeGroupsService';\n\nexport default class CodeGroupsDetailComponent extends React.Component {\n  state = {\n    \"id\": '',\n    \"title\": \"\",\n    \"status\": { \"id\": '' },\n    \"caseType1\": { \"id\": '' },\n    \"caseType2\": { \"id\": '' },\n    \"caseType3\": { \"id\": '' },\n    \"statusCode\": { \"id\": '' },\n    \"comments\": \"\",\n\n    \"listService\": {\n      \"statusList\": [],\n      \"caseType1List\": [],\n      \"caseType2List\": [],\n      \"caseType3List\": [],\n      \"statusCodeList\": []\n    }\n  };\n\n\n  getBlankDetails = () => {\n    return {\n      \"id\": '',\n      \"title\": \"\",\n      \"status\": { \"id\": '' },\n      \"caseType1\": { \"id\": '' },\n      \"caseType2\": { \"id\": '' },\n      \"caseType3\": { \"id\": '' },\n      \"statusCode\": { \"id\": '' },\n      \"comments\": \"\",\n\n      \"listService\": {\n        \"statusList\": [],\n        \"caseType1List\": [],\n        \"caseType2List\": [],\n        \"caseType3List\": [],\n        \"statusCodeList\": []\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    console.log(`[CodeGroupsDetailComponent.retrieve] id==>${this.props.match.params.id}`)\n    CodeGroupsService.get(this.props.match.params.id)\n      .then(response => {\n        console.log(`[CodeGroupsDetailComponent.retrieve] response==>`, response)\n        let thestate = this.getBlankDetails();\n        if (this.props.match.params.id != -1) {\n          thestate = response.data.entity;\n        }\n        thestate.listService = response.data.listService\n        this.setState(thestate)\n      })\n  }\n\n  save = () => {\n    console.log(`[CodeGroupsDetailComponent.save] id==>${this.props.match.params.id}`)\n    CodeGroupsService.save({\n      code: this.state.code,\n      value: this.state.value,\n      description: this.state.description,\n      bool: this.state.bool,\n      num: this.state.num,\n\n      id: this.state.id\n    }).then(response => {\n      console.log(`[CodeGroupsDetailComponent.save] response==>`, response)\n\n      this.props.history.push(`/code-groups-list`);\n    })\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  changeSelectState = (e) => {\n    this.setState({\n      [e.target.name]: { \"id\": e.target.value }\n    })\n  }\n\n  renderOptions = (optionsList) => {\n    return (optionsList.map(row => (\n      <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\n    )))\n  }\n\n  render = () => {\n    return (\n      <div className=\"container\">\n        <Typography variant=\"h4\">CodeGroups Detail</Typography>\n        <form>\n          <TextFormControl label=\"Code\"\n            name=\"code\" value={this.state.code}\n            changeState={this.changeState} />\n          <TextFormControl label=\"Value\"\n            name=\"value\" value={this.state.value}\n            changeState={this.changeState} />\n          <TextFormControl label=\"Description\"\n            name=\"description\" value={this.state.description}\n            changeState={this.changeState} />\n          <TextFormControl label=\"Bool\"\n            name=\"bool\" value={this.state.bool}\n            changeState={this.changeState} />\n          <TextFormControl label=\"Num\"\n            name=\"num\" value={this.state.num}\n            changeState={this.changeState} />\n\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.save()}>Save</Button>&nbsp;\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.props.history.push(`/code-groups-list`)}>Cancel</Button>\n        </form>\n\n      </div >\n    );\n  }\n}\n\n\n","import React from 'react';\r\nimport faker from 'faker'\r\nimport { URL_BASE } from '../api/Utils'\r\n\r\nimport AuthenticationService from '../security/AuthenticationService'\r\n\r\nconst Dashboard = props => {\r\n  console.log(`process.env.NODE_ENV= ${process.env.NODE_ENV}`)\r\n  console.log(`URL_BASE= ${URL_BASE}`)\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n  return (\r\n    <div className=\"container marketing pt-4\">\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n          <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"140\" height=\"140\" src={faker.image.fashion(140, 140)} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><a className=\"btn btn-secondary\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"140\" height=\"140\" src={faker.image.business(140, 140)} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><a className=\"btn btn-secondary\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"140\" height=\"140\" src={faker.image.people(140, 140)} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><a className=\"btn btn-secondary\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n      </div>\r\n      {isUserLoggedIn &&\r\n        <>\r\n          <hr className=\"featurette-divider\" />\r\n\r\n          <div className=\"row featurette\">\r\n            <div className=\"col-md-7\">\r\n              <h2 className=\"featurette-heading\">First featurette heading. <span className=\"text-muted\">It’ll blow your mind.</span></h2>\r\n              <p className=\"lead\">{faker.random.words(50)}</p>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"500\" height=\"500\" src={faker.image.business(500, 500)} />\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"featurette-divider\" />\r\n\r\n          <div className=\"row featurette\">\r\n            <div className=\"col-md-7 order-md-2\">\r\n              <h2 className=\"featurette-heading\">Oh yeah, it’s that good. <span className=\"text-muted\">See for yourself.</span></h2>\r\n              <p className=\"lead\">{faker.random.words(20)}</p>\r\n            </div>\r\n            <div className=\"col-md-5 order-md-1\">\r\n              <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"500\" height=\"500\" src={faker.image.transport(500, 500)} />\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"featurette-divider\" />\r\n\r\n          <div className=\"row featurette\">\r\n            <div className=\"col-md-7\">\r\n              <h2 className=\"featurette-heading\">And lastly, this one. <span className=\"text-muted\">Checkmate.</span></h2>\r\n              <p className=\"lead\">{faker.random.words(30)}</p>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"500\" height=\"500\" src={faker.image.sports(500, 500)} />\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"featurette-divider\" />\r\n        </>}\r\n    </div >\r\n  )\r\n}\r\nexport default Dashboard;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ErrorComponent from './api/ErrorComponent'\r\nimport HeaderComponent from './forms/common/HeaderComponent'\r\nimport FooterComponent from './forms/common/FooterComponent'\r\nimport EndUserListComponent from './forms/endUser/EndUserListComponent';\r\nimport EndUserDetailComponent from './forms/endUser/EndUserDetailComponent';\r\nimport AddressListComponent from './forms/address/AddressListComponent';\r\nimport AddressDetailComponent from './forms/address/AddressDetailComponent';\r\n\r\nimport AuthenticatedRoute from './security/AuthenticatedRoute'\r\nimport LoginComponent from './security/LoginComponent'\r\nimport LogoutComponent from './security/LogoutComponent'\r\nimport CodeGroupsListComponent from './forms/codeGroups/CodeGroupsListComponent';\r\nimport CodeGroupsDetailComponent from './forms/codeGroups/CodeGroupsDetailComponent';\r\nimport Dashboard from './forms/Dashboard';\r\n\r\nclass AppRouting extends React.Component {\r\n render = () => {\r\n  return (\r\n   <div className=\"AppRouting\">\r\n    <Router>\r\n     <>\r\n      <HeaderComponent />\r\n      <div className=\"container pt-3\">\r\n       <Switch>\r\n        <Route path=\"/\" exact component={Dashboard} />\r\n        <Route path=\"/index.html\" exact component={Dashboard} />\r\n        <Route path=\"/login\" component={LoginComponent} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/logout\" component={LogoutComponent} />\r\n        <AuthenticatedRoute path=\"/end-user-list\" exact component={EndUserListComponent} />\r\n        <AuthenticatedRoute path=\"/end-user-detail/:id\" exact component={EndUserDetailComponent} />\r\n        <AuthenticatedRoute path=\"/address-list\" exact component={AddressListComponent} />\r\n        <AuthenticatedRoute path=\"/address-detail/:id\" exact component={AddressDetailComponent} />\r\n        <AuthenticatedRoute path=\"/address-detail/:id/:endUserId\" exact component={AddressDetailComponent} />\r\n        <AuthenticatedRoute path=\"/code-groups-list\" exact component={CodeGroupsListComponent} />\r\n        <AuthenticatedRoute path=\"/code-groups-detail/:id\" exact component={CodeGroupsDetailComponent} />\r\n        <Route component={ErrorComponent} />\r\n       </Switch>\r\n      </div>\r\n      <FooterComponent />\r\n     </>\r\n    </Router>\r\n   </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default AppRouting;","import React from 'react';\nimport './App.css';\nimport AppRouting from './AppRouting'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouting />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}