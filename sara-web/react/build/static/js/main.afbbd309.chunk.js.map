{"version":3,"sources":["security/AuthenticationService.js","api/ErrorComponent.jsx","api/Utils.js","forms/common/MenuComponent.js","forms/common/HeaderComponent.jsx","forms/common/FooterComponent.jsx","api/endUser/EndUserService.jsx","forms/endUser/EndUserListComponent.jsx","forms/common/TextFormControl.js","forms/endUser/EndUserDetailHtml.js","api/address/AddressService.jsx","forms/address/AddressListComponent.jsx","forms/endUser/EndUserDetailComponent.jsx","forms/address/AddressDetailComponent.jsx","security/LoginComponent.jsx","security/LogoutComponent.jsx","api/codeGroups/CodeGroupsService.jsx","forms/codeGroups/CodeGroupsListComponent.jsx","forms/codeGroups/CodeGroupsDetailComponent.jsx","forms/Dashboard.jsx","AppRouting.jsx","App.js","serviceWorker.js","index.js"],"names":["myInterceptor","ErrorComponent","render","className","React","Component","urlListPattern","entity","urlDeletePattern","urlDetailsPattern","urlSavePattern","handleErrorResponse","error","comp","errStr","JSON","stringify","console","status","message","name","stack","initialize","isUserLoggedIn","jwtTokenHeader","getJwtTokenHeader","setupAxiosInterceptors","getBasicAuthHeader","username","password","auth","executeJwtAuthenticationService","theurl","axios","post","registerJwtSucessfulLogin","jwtToken","log","sessionStorage","setItem","getJwtToken","getLoginUserName","getItem","logout","interceptors","request","eject","removeItem","authHeader","use","a","config","headers","authorization","MenuComponent","useState","anchorEl","setAnchorEl","AuthenticationService","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","Divider","light","key","HeaderComponent","gotoHome","props","history","push","alt","src","faker","image","business","company","companyName","withRouter","FooterComponent","getList","searchValue","page","pageSize","Utils","get","delete","save","data","EndUserListComponent","componentDidMount","retrieve","EndUserService","state","paging","currentPage","rowsPerPage","then","response","setState","list","pagingList","content","size","totalElements","pageable","pageNumber","sort","direction","edit","handleKeyDown","e","target","value","preventDefault","changeState","handleChangePage","newPage","handleChangeRowsPerPage","Typography","variant","color","FormControl","Input","placeholder","onChange","onKeyDown","endAdornment","TablePagination","component","count","onChangePage","onChangeRowsPerPage","Table","TableHead","TableRow","TableCell","TableBody","map","row","firstName","lastName","align","TextFormControl","fullWidth","margin","type","TextField","label","EndUserDetailHtml","userName","doChangeState","children","doSave","doEditAddress","doCancel","getListByEndUser","endUserId","getByEndUser","AddressListComponent","endUserHistory","hasEndUser","AddressService","renderPagination","hsize","address1","address2","city","country","zipCode","billTo","shipTo","EndUserDetailComponent","getBlankDetails","doRetrieve","match","params","thestate","listService","address","addressId","userId","doCancelAddress","AddressDetailComponent","endUser","routeUrl","changeSelectState","renderOptions","optionsList","description","cancel","LoginComponent","changeHandler","loginClicked","token","hasLoginFailed","alertClass","catch","LogoutComponent","CodeGroupsListComponent","CodeGroupsService","code","bool","num","CodeGroupsDetailComponent","Dashboard","width","height","fashion","commerce","productName","random","words","href","role","people","transport","sports","AppRouting","path","exact","App","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.afbbd309.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\";\r\nimport { AUTH_URL_BASE, AUTH_USER, JWT_TOKEN } from '../api/Utils.js'\r\nlet myInterceptor\r\nclass AuthenticationService extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.initialize();\r\n    }\r\n    initialize = () => {\r\n        if (this.isUserLoggedIn()) {\r\n            let jwtTokenHeader = this.getJwtTokenHeader()\r\n            this.setupAxiosInterceptors(jwtTokenHeader);\r\n        }\r\n    }\r\n    // executeBasicAuthenticationService = (username, password) => {\r\n    //     const theurl = `${URL_BASE}/basicauth`\r\n    //     return axios.get(theurl, Utils.getBasicAuthHeader(username, password));\r\n    // }\r\n\r\n    getBasicAuthHeader = (username, password) => {\r\n        return {\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            }\r\n        };\r\n    }\r\n\r\n    executeJwtAuthenticationService = (username, password) => {\r\n        const theurl = `${AUTH_URL_BASE}`\r\n        //console.log(`[AuthenticationService.executeJwtAuthenticationService] theurl=${theurl}`);\r\n        return axios.post(theurl, { username, password });\r\n    }\r\n\r\n    // registerBasicAuthSucessfulLogin = (username, password) => {\r\n    //     //console.log('[AuthenticationService.registerSucessfulLogin] init');\r\n    //     sessionStorage.setItem(AUTH_USER, username);\r\n\r\n    //     let basicAuthHeader = 'Basic ' + window.btoa(username + ':' + password);\r\n    //     this.setupAxiosInterceptors(basicAuthHeader);\r\n    // }\r\n\r\n    registerJwtSucessfulLogin = (username, jwtToken) => {\r\n        console.log('[AuthenticationService.registerJwtSucessfulLogin] init');\r\n        sessionStorage.setItem(AUTH_USER, username);\r\n        sessionStorage.setItem(JWT_TOKEN, jwtToken);\r\n\r\n        let jwtTokenHeader = this.getJwtTokenHeader()\r\n        this.setupAxiosInterceptors(jwtTokenHeader);\r\n    }\r\n\r\n    getJwtTokenHeader = () => {\r\n        let jwtToken = this.getJwtToken();\r\n        let jwtTokenHeader = `Bearer ${jwtToken}`;\r\n        return jwtTokenHeader;\r\n    }\r\n\r\n    getLoginUserName = () => {\r\n        let user = sessionStorage.getItem(AUTH_USER);\r\n        return user;\r\n    }\r\n\r\n    getJwtToken = () => {\r\n        let jwtToken = sessionStorage.getItem(JWT_TOKEN);\r\n        return jwtToken;\r\n    }\r\n\r\n    logout = () => {\r\n        axios.interceptors.request.eject(myInterceptor);\r\n        sessionStorage.removeItem(AUTH_USER);\r\n        sessionStorage.removeItem(JWT_TOKEN);\r\n    }\r\n\r\n    isUserLoggedIn = () => {\r\n        let user = this.getLoginUserName();\r\n        return (user != null);\r\n    }\r\n\r\n    setupAxiosInterceptors = (authHeader) => {\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] init..');\r\n        console.log(`[AuthenticationService.setupAxiosInterceptors] authHeader: ${authHeader}`);\r\n        myInterceptor = axios.interceptors.request.use(\r\n            async config => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = authHeader;\r\n                }\r\n                return config;\r\n            }\r\n        );\r\n\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] done!');\r\n    }\r\n}\r\nexport default new AuthenticationService();","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"container\">Oooops!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorComponent;","\r\n// export const URL_BASE = 'http://localhost:8081';\r\n// export const URL_BASE = 'http://localhost:5000';\r\nexport const URL_BASE = '';\r\nexport const AUTH_URL_BASE = URL_BASE + '/auth';\r\nexport const API_URL_BASE = URL_BASE + '/api/';\r\n\r\n\r\nexport const URL_LIST = \"/l\";\r\nexport const URL_DELETE = \"/d\";\r\nexport const URL_DETAILS = \"/g\";\r\nexport const URL_SAVE = \"/s\";\r\n\r\nexport const AUTH_USER = 'auth/setUser';\r\nexport const JWT_TOKEN = 'auth/setToken';\r\n\r\nexport const UPDATE_ERROR = 'Error: Unable to update. Please contact system administrator.';\r\nexport const REQUIRED_DESCRIPTION = 'Description is required';\r\nexport const REQUIRED_5_DESCRIPTION = 'Description should be atleast 5 characters';\r\nexport const REQUIRED_TARGET_DATE = 'Target date is required';\r\n\r\nclass Utils {\r\n    urlListPattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_LIST;\r\n    }\r\n    urlDeletePattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_DELETE;\r\n    }\r\n    urlDetailsPattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_DETAILS;\r\n    }\r\n    urlSavePattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_SAVE;\r\n    }\r\n    handleErrorResponse = (error, comp) => {\r\n        const errStr = JSON.stringify(error);\r\n        console.error(`Utils[][${comp}][ERROR] ${errStr}`)\r\n        if (error.status) {\r\n            //{\"timestamp\":\"2020-08-24T23:57:30.853+00:00\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"Unauthorized\",\"path\":\"/users/test/todos\"}\r\n            console.error(`[Utils][${comp}][ERROR] ${error.status}: ${error.message}`)\r\n        } else {\r\n            console.error(`[Utils][${comp}][ERROR] ${error.name}: ${error.message}`)\r\n            console.error(`[Utils][${comp}][ERROR] stack ${error.stack}`)\r\n        }\r\n\r\n        //const errorMessage = `${error.name}: ${error.message}`;\r\n        //this.handleState('', errorMessage);\r\n        //console.error(error);\r\n    }\r\n}\r\n\r\nexport default new Utils();","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider } from '@material-ui/core';\r\nimport AuthenticationService from '../../security/AuthenticationService'\r\n\r\nexport default function MenuComponent() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <DehazeIcon className=\"text-light\" />\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {\r\n          isUserLoggedIn && <>\r\n            <MenuItem className=\"bg-dark\"><Link className=\"text-light\" to=\"/end-user-list\">Users</Link></MenuItem>\r\n            <MenuItem className=\"bg-dark\"><Link className=\"text-light\" to=\"/address-list\">Address</Link></MenuItem>\r\n            <MenuItem className=\"bg-dark\"><Link className=\"text-light\" to=\"/code-groups-list\">Code Groups</Link></MenuItem>\r\n            <Divider light />\r\n          </>\r\n        }\r\n        {!isUserLoggedIn && <MenuItem key=\"loginId\" className=\"bg-dark\"><Link to=\"/login\" className=\"text-light\">Login</Link></MenuItem>}\r\n        {isUserLoggedIn && <MenuItem key=\"logoutId\" className=\"bg-dark \"><Link to=\"/logout\" className=\"text-light\" onClick={AuthenticationService.logout} >Logout</Link></MenuItem>}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n// import AuthenticationService from '../../security/AuthenticationService'\r\nimport MenuComponent from './MenuComponent'\r\nimport faker from 'faker'\r\n\r\nclass HeaderComponent extends React.Component {\r\n    gotoHome = () => {\r\n        this.props.history.push(`/home`);\r\n    }\r\n    render = () => {\r\n        // let userName = AuthenticationService.getLoginUserName();\r\n        // const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        return (\r\n            <header className=\"bg-dark\">\r\n                <nav className=\"container navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <MenuComponent />\r\n                    <Link className=\"nav-link\" to=\"/\"><img alt=\"\" className=\"rounded-circle\" src={faker.image.business(60, 60)} /></Link>\r\n                    <Link className=\"nav-link text-light\" to=\"/\"><b>{faker.company.companyName()}</b></Link>\r\n\r\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end fg-light\">\r\n                        {/* {isUserLoggedIn && <li key=\"welcomeId\"><Link className=\"text-light pr-5\" to=\"/\">Welcome <b>{faker.name.firstName() + \" \" + faker.name.lastName()} </b></Link></li>}\r\n                        {!isUserLoggedIn && <li key=\"loginId\"><Link className=\"nav-link text-light\" to=\"/login\">Login</Link></li>}\r\n                        {isUserLoggedIn && <li key=\"logoutId\"><Link className=\"nav-link text-light\" to=\"/logout\" onClick={AuthenticationService.logout} >Logout</Link></li>} */}\r\n                    </ul>\r\n\r\n\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    // <header className=\"bg-dark\">\r\n    //     <nav class=\"container navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    //         <a class=\"navbar-brand\" href=\"#\"><img src=\"http://placeimg.com/60/60/business\" /></a>\r\n    //         <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    //             <span class=\"navbar-toggler-icon\"></span>\r\n    //         </button>\r\n\r\n    //         <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    //             <ul class=\"navbar-nav mr-auto\">\r\n    //                 <li class=\"nav-item active\">\r\n    //                     <a class=\"nav-link\" href=\"#\" onClick={() => this.gotoHome()}>Home <span class=\"sr-only\">(current)</span></a>\r\n    //                 </li>\r\n    //             </ul>\r\n    //             <ul className=\"navbar-nav navbar-collapse justify-content-end\">\r\n    //                 {!isUserLoggedIn && <li key=\"loginId\"><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\r\n    //                 {isUserLoggedIn && <li key=\"logoutId\"><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout} >Logout</Link></li>}\r\n    //             </ul>\r\n    //             <ul class=\"navbar-nav mr-auto justify-content-end\">\r\n    //                 <li class=\"nav-item dropdown \">\r\n    //                     <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n    //                         <Icon>view_list</Icon>\r\n    //                     </a>\r\n    //                     <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n    //                         <Link className=\"dropdown-item\" to=\"/end-user-list\">Users</Link>\r\n    //                         <Link className=\"dropdown-item\" to=\"/address-list\">Address</Link>\r\n    //                         <Link className=\"dropdown-item\" to=\"/code-groups-list\">Code Groups</Link>\r\n    //                         <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n    //                         <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n    //                         <div class=\"dropdown-divider\"></div>\r\n    //                         <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n    //                     </div>\r\n    //                 </li>\r\n    //             </ul>\r\n    //         </div>\r\n    //     </nav>\r\n    // </header>\r\n}\r\n\r\nexport default withRouter(HeaderComponent);\r\n","import React from 'react';\r\n\r\nclass FooterComponent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <footer className=\"footer bg-dark text-center\">\r\n                <span className=\"text-muted\">All Rights Reserved 1977 @stoi</span>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\nexport const ENTITY = \"endUser\";\nclass EndUserService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new EndUserService();\n\n\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableRow, TableCell, Button, TableBody, TablePagination, FormControl, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport EndUserService from '../../api/endUser/EndUserService';\n\nclass EndUserListComponent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      list: [],\n      searchValue: '',\n      paging: {\n        rowsPerPage: 25,\n        totalElements: 0,\n        currentPage: 0\n      }\n    }\n  }\n  componentDidMount = () => {\n    this.retrieve();\n  }\n  retrieve = () => {\n    EndUserService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n      .then(response => {\n        console.log(`[EndUserListComponent.retrieve ] EndUserService.getList response=>`, response)\n        this.setState({\n          list: response.data.pagingList.content,\n          searchValue: response.data.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            totalElements: response.data.pagingList.totalElements,\n            currentPage: response.data.pagingList.pageable.pageNumber,\n            sort: 'title',\n            direction: 'ASC'\n          }\n        })\n      })\n  }\n  edit = (id) => {\n    console.log(`[EndUserListComponent.edit] id=${id}`)\n    this.props.history.push(`/end-user-detail/${id}`);\n  }\n  delete = (id) => {\n    console.log(`[EndUserListComponent.delete] id=${id}`)\n    EndUserService.delete(id)\n      .then(response => {\n        console.log(`[EndUserListComponent.delete] response==>`, response)\n        this.retrieve();\n      })\n  }\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.retrieve();\n    }\n  }\n\n  changeState = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  render = () => {\n    return (\n      <div className=\"container\">\n        <Typography variant=\"h4\">Users</Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(-1)}>NEW</Button>\n        <div className=\"text-right\">\n          <FormControl variant=\"filled\">\n            <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n              onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n              endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\n            />\n          </FormControl>\n        </div>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>First Name</TableCell>\n              <TableCell>Last Name</TableCell>\n\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.list.map(row => (\n              <TableRow key={row.id}>\n                <TableCell>{row.firstName}</TableCell>\n                <TableCell>{row.lastName}</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(row.id)}>Edit</Button>&nbsp;\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => this.delete(row.id)}>Delete</Button></TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </div >\n    );\n  }\n}\n\nexport default EndUserListComponent;\n\n\n","\r\nimport React from 'react';\r\nimport { FormControl, TextField } from '@material-ui/core';\r\nconst TextFormControl = props => {\r\n\r\n  return (\r\n    <FormControl fullWidth margin=\"normal\" >\r\n      { props.type === 'hidden' &&\r\n        <input\r\n          type={props.type}\r\n          name={props.name} value={props.value} />\r\n      }\r\n      {props.type !== 'hidden' &&\r\n        <>\r\n          {/* <InputLabel htmlFor={props.name + 'id'}>{props.label}</InputLabel>\r\n          <TextField labelId={props.name + 'id'} placeholder={\"Enter \" + props.label} */}\r\n          <TextField label={props.label} placeholder={\"Enter \" + props.label}\r\n            type={props.type ? props.type : \"text\"}\r\n            name={props.name} value={props.value}\r\n            onChange={(e) => props.changeState(e)} />\r\n        </>\r\n      }\r\n    </FormControl >\r\n  );\r\n}\r\nexport default TextFormControl;\r\n\r\n// export default class TextFormControl extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n//   render = () => {\r\n//     if (this.props.type == 'hidden') {\r\n//       return (\r\n//         <TextField\r\n//           type={this.props.type}\r\n//           name={this.props.name} value={this.props.value} />\r\n//       );\r\n//     }\r\n//     return (\r\n//       <FormControl fullWidth margin=\"normal\" >\r\n//         <TextField label={this.props.label} placeholder={\"Enter \" + this.props.label}\r\n//           type={this.props.type ? this.props.type : \"text\"}\r\n//           name={this.props.name} value={this.props.value}\r\n//           onChange={(e) => this.props.changeState(e)} />\r\n//       </FormControl>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextFormControl from '../common/TextFormControl';\r\nimport { Button } from '@material-ui/core';\r\nconst EndUserDetailHtml = props => {\r\n      return (\r\n            <div className=\"container\">\r\n                  <Typography variant=\"h4\">User Detail</Typography>\r\n                  <form>\r\n                        <TextFormControl label=\"User Name\"\r\n                              name=\"userName\" value={props.userName}\r\n                              changeState={props.doChangeState} />\r\n\r\n                        <TextFormControl label=\"Password\" type=\"password\"\r\n                              name=\"password\" value={props.password}\r\n                              changeState={props.doChangeState} />\r\n\r\n                        <TextFormControl label=\"First Name\"\r\n                              name=\"firstName\" value={props.firstName}\r\n                              changeState={props.doChangeState} />\r\n\r\n                        <TextFormControl label=\"Last Name\"\r\n                              name=\"lastName\" value={props.lastName}\r\n                              changeState={props.doChangeState} />\r\n\r\n                        {props.children}\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => props.doSave()}>Save</Button>&nbsp;\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => props.doEditAddress(-1, props.id)}>Add Address</Button>&nbsp;\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => props.doCancel()}>Cancel</Button>\r\n                  </form>\r\n            </div >\r\n      );\r\n};\r\n\r\nexport default EndUserDetailHtml;","import axios from \"axios\";\nimport Utils, { API_URL_BASE } from '../Utils'\n\nexport const ENTITY = \"address\";\nclass AddressService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n getListByEndUser = (endUserId, searchValue) => {\n  const theurl = `${API_URL_BASE}address/by/END_USER/${endUserId}?searchValue=${searchValue}`\n  return axios.get(theurl);\n }\n getByEndUser = (endUserId) => {\n  const theurl = `${API_URL_BASE}address/endUser/${endUserId}`\n  return axios.get(theurl);\n }\n}\n\nexport default new AddressService();\n\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableRow, TableCell, Button, TableBody, TablePagination, FormControl, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport AddressService from '../../api/address/AddressService';\n\nclass AddressListComponent extends React.Component {\n  state = {\n    searchValue: '',\n    list: [],\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  }\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    //this.props.endUserId\n    console.log('this.props.endUserHistory=' + this.props.endUserHistory);\n    if (this.hasEndUser()) {\n      AddressService.getListByEndUser(this.props.endUserId, this.state.searchValue)\n        .then(response => {\n          console.log(`[AddressListComponent AddressService.getListByEndUser] response=>`, response)\n          this.setState({\n            searchValue: response.data.searchValue,\n            list: response.data.list\n          })\n        })\n    } else {\n      AddressService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n        .then(response => {\n          console.log(`[AddressListComponent AddressService.getList] response=>`, response)\n          this.setState({\n            list: response.data.pagingList.content,\n            searchValue: response.data.searchValue,\n            paging: {\n              rowsPerPage: response.data.pagingList.size,\n              totalElements: response.data.pagingList.totalElements,\n              currentPage: response.data.pagingList.pageable.pageNumber,\n              sort: 'address1',\n              direction: 'ASC'\n            }\n          })\n        })\n    }\n  }\n  edit = (id) => {\n    if (this.hasEndUser()) {\n      this.props.endUserHistory.push(`/address-detail/${id}/${this.props.endUserId}`);\n    } else {\n      this.props.history.push(`/address-detail/${id}`);\n    }\n\n  }\n  delete = (id) => {\n    console.log(`[AddressComponent.delete] id=${id}`)\n    AddressService.delete(id)\n      .then(response => {\n        console.log(`[AddressComponent.delete] response==>`, response)\n        this.retrieve();\n      })\n  }\n\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  hasEndUser = () => {\n    return this.props.endUserId;\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      console.log(`[MyCaseListComponent.handleKeyDown] searchValue=${this.state.searchValue}`)\n      console.log(`2 [MyCaseListComponent.handleKeyDown] ${e.target.value}, state=>`, this.state)\n      this.retrieve();\n    }\n  }\n\n  renderPagination = () => {\n    if (this.hasEndUser()) {\n      return (<></>);\n    }\n    return (\n      <TablePagination\n        component=\"div\"\n        count={this.state.paging.totalElements}\n        page={this.state.paging.currentPage}\n        onChangePage={this.handleChangePage}\n        rowsPerPage={this.state.paging.rowsPerPage}\n        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n      />\n    )\n  }\n\n  render = () => {\n    let hsize = 'h4';\n    if (this.hasEndUser()) {\n      hsize = 'h5';\n    }\n    return (\n      <div className=\"container\">\n\n        <Typography variant={hsize}>Address</Typography>\n        <div className=\"text-right\">\n          <FormControl variant=\"filled\">\n            <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n              onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n              endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\n            />\n          </FormControl>\n        </div>\n        {this.renderPagination()}\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Address</TableCell>\n              <TableCell>Is Billing?</TableCell>\n              <TableCell>Is Shipping?</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {\n              this.state.list.map(row => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>\n                    <div>{row.address1}</div>\n                    <div>{row.address2}</div>\n                    <div>{row.city}, {row.state} {row.country} {row.zipCode}</div>\n                  </TableCell>\n                  <TableCell>{row.billTo}</TableCell>\n                  <TableCell>{row.shipTo}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(row.id)}>Edit</Button>&nbsp;\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.delete(row.id)}>Delete</Button>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n        {this.renderPagination()}\n      </div >\n    );\n  }\n}\n\nexport default AddressListComponent;\n\n\n","import React from 'react';\n\nimport EndUserService from '../../api/endUser/EndUserService';\nimport EndUserDetailHtml from './EndUserDetailHtml';\nimport AddressListComponent from '../address/AddressListComponent';\n\nexport default class EndUserDetailComponent extends React.Component {\n  state = {\n    \"id\": \"\",\n    \"userName\": '',\n    \"firstName\": '',\n    \"lastName\": \"\",\n    \"address\": []\n  }\n\n\n  getBlankDetails = () => {\n    return {\n      \"id\": \"\",\n      \"userName\": '',\n      \"firstName\": '',\n      \"lastName\": \"\",\n      \"address\": []\n    }\n  }\n\n  componentDidMount = () => {\n    this.doRetrieve();\n  }\n\n  doRetrieve = () => {\n    console.log(`[EndUserDetailComponent.doRetrieve] id==>${this.props.match.params.id}`)\n    EndUserService.get(this.props.match.params.id)\n      .then(response => {\n        console.log(`[EndUserDetailComponent.doRetrieve] response==>`, response)\n        let thestate = this.getBlankDetails();\n        if (this.props.match.params.id != -1) {\n          thestate = response.data.entity;\n        }\n        thestate.listService = response.data.listService\n        this.setState(thestate)\n      })\n  }\n\n  doSave = () => {\n    console.log(`[EndUserDetailComponent.save] id==>${this.props.match.params.id}`)\n    EndUserService.save({\n      userName: this.state.userName,\n      password: this.state.password,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      address: this.state.address,\n\n      id: this.state.id\n    }).then(response => {\n      console.log(`[EndUserDetailComponent.save] response==>`, response)\n\n      this.props.history.push(`/end-user-list`);\n    })\n  }\n\n  doChangeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  doCancel = () => {\n    this.props.history.push(`/end-user-list`);\n  }\n  doEditAddress = (addressId, userId) => {\n    this.props.history.push(`/address-detail/${addressId}/${userId}`);\n  }\n\n  render = () => {\n    return (\n      <EndUserDetailHtml userName={this.state.userName}\n        id={this.state.id}\n        password={this.state.password}\n        firstName={this.state.firstName}\n        lastName={this.state.lastName}\n        address={this.state.address}\n        doChangeState={this.doChangeState}\n        doSave={this.doSave}\n        doCancel={this.doCancel}\n      >\n        <AddressListComponent\n          endUserId={this.props.match.params.id}\n          doCancelAddress={this.doCancelAddress}\n          endUserHistory={this.props.history}\n        />\n      </EndUserDetailHtml>\n\n    );\n  }\n}\n\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { MenuItem, Button, FormControl } from '@material-ui/core';\n\nimport AddressService from '../../api/address/AddressService';\nimport TextFormControl from '../common/TextFormControl';\n\nexport default class AddressDetailComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = this.getBlankDetails()\n  }\n\n  getBlankDetails = () => {\n    return {\n      \"id\": '',\n      \"endUserId\": '',\n      \"endUser\": { id: \"\", firstName: \"\", lastName: \"\" },\n      \"name\": \"\",\n      \"address1\": \"\",\n      \"address2\": \"\",\n      \"city\": \"\",\n      \"state\": \"\",\n      \"country\": \"\",\n      \"zipCode\": \"\",\n      \"billTo\": \"\",\n      \"shipTo\": \"\"\n    }\n  }\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    console.log(`[AddressDetailComponent.retrieve] id=${this.props.match.params.id}, endUserId=${this.props.match.params.endUserId}`);\n    let thestate = this.getBlankDetails();\n    if (this.props.match.params.id == -1 && this.props.match.params.endUserId) {\n      AddressService.getByEndUser(this.props.match.params.endUserId)\n        .then(response => {\n          console.log(`[AddressDetailComponent.retrieve] response=>`, response);\n          thestate = response.data.entity;\n          console.log(`[AddressDetailComponent.retrieve] thestate.endUser=>`, thestate.endUser);\n          thestate.endUserId = thestate.endUser.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    } else {\n      AddressService.get(this.props.match.params.id)\n        .then(response => {\n          thestate = response.data.entity;\n          thestate.endUserId = thestate.endUser.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    }\n  }\n\n  save = () => {\n    AddressService.save({\n      endUser: {\n        id: this.state.endUserId\n      },\n      name: this.state.name,\n      address1: this.state.address1,\n      address2: this.state.address2,\n      city: this.state.city,\n      state: this.state.state,\n      country: this.state.country,\n      zipCode: this.state.zipCode,\n      billTo: this.state.billTo,\n      shipTo: this.state.shipTo,\n\n      id: this.state.id\n    }).then(response => {\n      let routeUrl = `/address-list`;\n      let endUserId = this.props.match.params.endUserId\n      if (endUserId) {\n        routeUrl = `/end-user-detail/${endUserId}`\n      }\n      this.props.history.push(routeUrl);\n    })\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  changeSelectState = (e) => {\n    this.setState({\n      [e.target.name]: { \"id\": e.target.value }\n    })\n  }\n\n  renderOptions = (optionsList) => {\n    return (optionsList.map(row => (\n      <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\n    )))\n  }\n\n  cancel = () => {\n    console.log(`[AddressDetailComponent.cancel] endUserId=${this.props.match.params.endUserId}`);\n    if (this.props.match.params.endUserId) {\n      this.props.history.push(`/end-user-detail/${this.props.match.params.endUserId}`)\n    } else {\n      this.props.history.push(`/address-list`)\n    }\n  }\n\n\n  render = () => {\n    return (\n      <div className=\"container\">\n        <Typography variant=\"h4\">Address Detail</Typography>\n        <form>\n          <FormControl fullWidth margin=\"normal\">\n            <span>End User: {this.state.endUser.lastName}, {this.state.endUser.firstName}</span>\n            <input name=\"endUserId\" type=\"hidden\" value={this.state.endUserId} />\n          </FormControl>\n\n          <TextFormControl label=\"Name\"\n            name=\"name\" value={this.state.name}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 1\"\n            name=\"address1\" value={this.state.address1}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 2\"\n            name=\"address2\" value={this.state.address2}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"City\"\n            name=\"city\" value={this.state.city}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"State\"\n            name=\"state\" value={this.state.state}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Country\"\n            name=\"country\" value={this.state.country}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Zip Code\"\n            name=\"zipCode\" value={this.state.zipCode}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Billing?\"\n            name=\"billTo\" value={this.state.billTo}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Shipping?\"\n            name=\"shipTo\" value={this.state.shipTo}\n            changeState={this.changeState} />\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.save()}>Save</Button>&nbsp;\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.cancel()}>Cancel</Button>\n        </form>\n\n      </div >\n    );\n  }\n}\n\n\n","import { FormControl, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass LoginComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: 'test',\r\n            hasLoginFailed: false,\r\n            message: '',\r\n            alertClass: ''\r\n        }\r\n    }\r\n\r\n    changeHandler = event => {\r\n        console.log(`name: ${event.target.name}, value: ${event.target.value}`);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    loginClicked = event => {\r\n        console.log('state: ', this.state);\r\n        // if(this.state.username==='test' && this.state.password==='test') {\r\n        //     AuthenticationService.registerSucessfulLogin(this.state.username, this.state.password);\r\n        //     console.log('success');\r\n        //     this.setState({\r\n        //         hasLoginFailed : false,\r\n        //         showSuccessMsg: true\r\n        //     });\r\n        //     this.props.history.push(`/welcome/${this.state.username}`);\r\n        // }else{\r\n        //     this.setState({\r\n        //         hasLoginFailed : true,\r\n        //         showSuccessMsg: false\r\n        //     });\r\n        // }\r\n        //event.preventDefault();\r\n        AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password)\r\n            //executeBasicAuthenticationService(this.state.username, this.state.password)\r\n            .then(response => {\r\n                console.log('[LoginComponent.loginClicked]: response', response);\r\n                AuthenticationService.registerJwtSucessfulLogin(this.state.username, response.data.token)\r\n                //registerBasicAuthSucessfulLogin(this.state.username, this.state.password);\r\n                this.setState({\r\n                    hasLoginFailed: false,\r\n                    message: 'Login Successful!',\r\n                    alertClass: 'alert-success'\r\n                });\r\n                this.props.history.push(`/`);\r\n            }\r\n            ).catch(error => {\r\n                console.log(`[LoginComponent.loginClicked]: error=${JSON.stringify(error)}`);\r\n                this.setState({\r\n                    alertClass: 'alert-danger',\r\n                    message: `Invalid ID or password. Please try again.`,\r\n                    hasLoginFailed: true\r\n                });\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <form className=\"form-signin\">\r\n                    <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n\r\n                    {this.state.message != null && <div className={'text-center alert ' + this.state.alertClass}>{this.state.message}</div>}\r\n                    <FormControl fullWidth margin=\"normal\">\r\n                        <TextField label=\"Username\" placeholder=\"Enter Username\"\r\n                            name=\"username\" value={this.state.username}\r\n                            onChange={(e) => this.changeHandler(e)} />\r\n                    </FormControl>\r\n\r\n                    <FormControl fullWidth margin=\"normal\">\r\n                        <TextField type=\"password\" label=\"Password\" placeholder=\"Enter Password\"\r\n                            name=\"password\" value={this.state.password}\r\n                            onChange={(e) => this.changeHandler(e)} />\r\n                    </FormControl>\r\n\r\n                    <button type=\"button\" className=\"btn btn-lg btn-primary btn-block\" onClick={this.loginClicked}>Sign in</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginComponent;","import React from 'react';\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\n\r\nclass LogoutComponent extends React.Component {\r\n    render = () => {\r\n        AuthenticationService.logout();\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>You are logged out</h1>\r\n                <div className=\"container\">\r\n                    Thank you. Come again!\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogoutComponent;","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\n\nexport const ENTITY = \"codeGroups\";\n\nclass CodeGroupsService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new CodeGroupsService();\n\n\r\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableRow, TableCell, Button, TableBody, TablePagination, FormControl, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CodeGroupsService from '../../api/codeGroups/CodeGroupsService';\n\nclass CodeGroupsListComponent extends React.Component {\n  state = {\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  }\n  componentDidMount = () => {\n    this.retrieve();\n  }\n  retrieve = () => {\n    CodeGroupsService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          list: response.data.pagingList.content,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            totalElements: response.data.pagingList.totalElements,\n            currentPage: response.data.pagingList.pageable.pageNumber\n          }\n        })\n      })\n  }\n  edit = (id) => {\n    console.log(`[CodeGroupsComponent.edit] id=${id}`)\n    this.props.history.push(`/code-groups-detail/${id}`);\n  }\n  delete = (id) => {\n    console.log(`[CodeGroupsComponent.delete] id=${id}`)\n    CodeGroupsService.delete(id)\n      .then(response => {\n        console.log(`[CodeGroupsComponent.delete] response==>`, response)\n        this.retrieve();\n      })\n  }\n\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      console.log(`[CodeGroupsListComponent.handleKeyDown] searchValue=${this.state.searchValue}`)\n      console.log(`2 [CodeGroupsListComponent.handleKeyDown] ${e.target.value}, state=>`, this.state)\n      this.retrieve();\n    }\n  }\n\n  render = () => {\n    return (\n      <div className=\"container\">\n        <Typography variant=\"h4\">CodeGroups List</Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(-1)}>NEW</Button>\n        <div className=\"text-right\">\n          <FormControl variant=\"filled\">\n            <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n              onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n              endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\n            />\n          </FormControl>\n        </div>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Code</TableCell>\n              <TableCell>Value</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Bool</TableCell>\n              <TableCell>Num</TableCell>\n\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.list.map(row => (\n              <TableRow key={row.id}>\n                <TableCell>{row.code}</TableCell>\n                <TableCell>{row.value}</TableCell>\n                <TableCell>{row.description}</TableCell>\n                <TableCell>{row.bool}</TableCell>\n                <TableCell>{row.num}</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(row.id)}>Edit</Button>&nbsp;\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => this.delete(row.id)}>Delete</Button></TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </div >\n    );\n  }\n}\n\nexport default CodeGroupsListComponent;\n\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { MenuItem, Button } from '@material-ui/core';\n\nimport TextFormControl from '../common/TextFormControl';\nimport CodeGroupsService from '../../api/codeGroups/CodeGroupsService';\n\nexport default class CodeGroupsDetailComponent extends React.Component {\n  state = this.getBlankDetails()\n\n  getBlankDetails = () => {\n    return {\n      \"id\": '',\n      \"title\": \"\",\n      \"status\": { \"id\": '' },\n      \"caseType1\": { \"id\": '' },\n      \"caseType2\": { \"id\": '' },\n      \"caseType3\": { \"id\": '' },\n      \"statusCode\": { \"id\": '' },\n      \"comments\": \"\",\n\n      \"listService\": {\n        \"statusList\": [],\n        \"caseType1List\": [],\n        \"caseType2List\": [],\n        \"caseType3List\": [],\n        \"statusCodeList\": []\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    console.log(`[CodeGroupsDetailComponent.retrieve] id==>${this.props.match.params.id}`)\n    CodeGroupsService.get(this.props.match.params.id)\n      .then(response => {\n        console.log(`[CodeGroupsDetailComponent.retrieve] response==>`, response)\n        let thestate = this.getBlankDetails();\n        if (this.props.match.params.id != -1) {\n          thestate = response.data.entity;\n        }\n        thestate.listService = response.data.listService\n        this.setState(thestate)\n      })\n  }\n\n  save = () => {\n    console.log(`[CodeGroupsDetailComponent.save] id==>${this.props.match.params.id}`)\n    CodeGroupsService.save({\n      code: this.state.code,\n      value: this.state.value,\n      description: this.state.description,\n      bool: this.state.bool,\n      num: this.state.num,\n\n      id: this.state.id\n    }).then(response => {\n      console.log(`[CodeGroupsDetailComponent.save] response==>`, response)\n\n      this.props.history.push(`/code-groups-list`);\n    })\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  changeSelectState = (e) => {\n    this.setState({\n      [e.target.name]: { \"id\": e.target.value }\n    })\n  }\n\n  renderOptions = (optionsList) => {\n    return (optionsList.map(row => (\n      <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\n    )))\n  }\n\n  render = () => {\n    return (\n      <div className=\"container\">\n        <Typography variant=\"h4\">CodeGroups Detail</Typography>\n        <form>\n          <TextFormControl label=\"Code\"\n            name=\"code\" value={this.state.code}\n            changeState={this.changeState} />\n          <TextFormControl label=\"Value\"\n            name=\"value\" value={this.state.value}\n            changeState={this.changeState} />\n          <TextFormControl label=\"Description\"\n            name=\"description\" value={this.state.description}\n            changeState={this.changeState} />\n          <TextFormControl label=\"Bool\"\n            name=\"bool\" value={this.state.bool}\n            changeState={this.changeState} />\n          <TextFormControl label=\"Num\"\n            name=\"num\" value={this.state.num}\n            changeState={this.changeState} />\n\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.save()}>Save</Button>&nbsp;\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.props.history.push(`/code-groups-list`)}>Cancel</Button>\n        </form>\n\n      </div >\n    );\n  }\n}\n\n\n","import React from 'react';\r\nimport faker from 'faker'\r\n\r\nimport AuthenticationService from '../security/AuthenticationService'\r\n\r\nconst Dashboard = props => {\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n  return (\r\n    <div className=\"container marketing pt-4\">\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n          <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"140\" height=\"140\" src={faker.image.fashion(140, 140)} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><a className=\"btn btn-secondary\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"140\" height=\"140\" src={faker.image.business(140, 140)} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><a className=\"btn btn-secondary\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"140\" height=\"140\" src={faker.image.people(140, 140)} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><a className=\"btn btn-secondary\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n      </div>\r\n      {isUserLoggedIn &&\r\n        <>\r\n          <hr className=\"featurette-divider\" />\r\n\r\n          <div className=\"row featurette\">\r\n            <div className=\"col-md-7\">\r\n              <h2 className=\"featurette-heading\">First featurette heading. <span className=\"text-muted\">It’ll blow your mind.</span></h2>\r\n              <p className=\"lead\">{faker.random.words(50)}</p>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"500\" height=\"500\" src={faker.image.business(500, 500)} />\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"featurette-divider\" />\r\n\r\n          <div className=\"row featurette\">\r\n            <div className=\"col-md-7 order-md-2\">\r\n              <h2 className=\"featurette-heading\">Oh yeah, it’s that good. <span className=\"text-muted\">See for yourself.</span></h2>\r\n              <p className=\"lead\">{faker.random.words(20)}</p>\r\n            </div>\r\n            <div className=\"col-md-5 order-md-1\">\r\n              <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"500\" height=\"500\" src={faker.image.transport(500, 500)} />\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"featurette-divider\" />\r\n\r\n          <div className=\"row featurette\">\r\n            <div className=\"col-md-7\">\r\n              <h2 className=\"featurette-heading\">And lastly, this one. <span className=\"text-muted\">Checkmate.</span></h2>\r\n              <p className=\"lead\">{faker.random.words(30)}</p>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <img alt=\"\" className=\"bd-placeholder-img rounded-circle\" width=\"500\" height=\"500\" src={faker.image.sports(500, 500)} />\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"featurette-divider\" />\r\n        </>}\r\n    </div >\r\n  )\r\n}\r\nexport default Dashboard;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ErrorComponent from './api/ErrorComponent'\r\nimport HeaderComponent from './forms/common/HeaderComponent'\r\nimport FooterComponent from './forms/common/FooterComponent'\r\nimport EndUserListComponent from './forms/endUser/EndUserListComponent';\r\nimport EndUserDetailComponent from './forms/endUser/EndUserDetailComponent';\r\nimport AddressListComponent from './forms/address/AddressListComponent';\r\nimport AddressDetailComponent from './forms/address/AddressDetailComponent';\r\n\r\nimport LoginComponent from './security/LoginComponent'\r\nimport LogoutComponent from './security/LogoutComponent'\r\nimport CodeGroupsListComponent from './forms/codeGroups/CodeGroupsListComponent';\r\nimport CodeGroupsDetailComponent from './forms/codeGroups/CodeGroupsDetailComponent';\r\nimport Dashboard from './forms/Dashboard';\r\n\r\nclass AppRouting extends React.Component {\r\n render = () => {\r\n  return (\r\n   <div className=\"AppRouting\">\r\n    <Router>\r\n     <>\r\n      <HeaderComponent />\r\n      <div className=\"container pt-3\">\r\n       <Switch>\r\n        <Route path=\"/\" exact component={Dashboard} />\r\n        <Route path=\"/login\" component={LoginComponent} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/logout\" component={LogoutComponent} />\r\n        <Route path=\"/end-user-list\" exact component={EndUserListComponent} />\r\n        <Route path=\"/end-user-detail/:id\" exact component={EndUserDetailComponent} />\r\n        <Route path=\"/address-list\" exact component={AddressListComponent} />\r\n        <Route path=\"/address-detail/:id\" exact component={AddressDetailComponent} />\r\n        <Route path=\"/address-detail/:id/:endUserId\" exact component={AddressDetailComponent} />\r\n        <Route path=\"/code-groups-list\" exact component={CodeGroupsListComponent} />\r\n        <Route path=\"/code-groups-detail/:id\" exact component={CodeGroupsDetailComponent} />\r\n        <Route component={ErrorComponent} />\r\n       </Switch>\r\n      </div>\r\n      <FooterComponent />\r\n     </>\r\n    </Router>\r\n   </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default AppRouting;","import React from 'react';\nimport './App.css';\nimport AppRouting from './AppRouting'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouting />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}