{"version":3,"sources":["providers/GlobalVariableProvider.js","providers/AuthenticationProvider.js","api/CommonSlice.js","api/school/SchoolSlice.js","api/codeGroups/CodeGroupsSlice.js","api/endUser/UsersSlice.js","api/student/StudentSlice.js","api/gradeLevelPayables/GradeLevelSlice.js","api/accountPayablesSettings/AccountPayablesSettingsSlice.js","api/billing/BillingSlice.js","api/store.js","api/ErrorComponent.jsx","forms/common/FooterComponent.jsx","forms/common/PaginationComponent.js","forms/common/CustomTableGrid.js","api/endUser/EndUserService.jsx","forms/common/TitleComponent.jsx","forms/endUser/EndUserListComponent.jsx","forms/endUser/EndUserDetailHtml.js","forms/endUser/EndUserDetailComponent.jsx","api/address/AddressService.jsx","forms/address/AddressListComponent.jsx","forms/common/TextFormControl.js","security/AuthenticationService.js","forms/address/AddressDetailComponent.jsx","security/AuthenticatedRoute.jsx","forms/common/CSS.js","security/SignInHtml.js","security/SignInComponent.js","security/LogoutComponent.jsx","api/codeGroups/CodeGroupsService.js","forms/codeGroups/CodeGroupsListComponent.js","forms/codeGroups/CodeGroupsDetailComponent.jsx","forms/dashboard/Chart.js","forms/dashboard/StackedBarChart.js","forms/dashboard/CustomContentOfTooltip.js","forms/dashboard/Dashboard.jsx","forms/common/MenuListItems.js","forms/common/MiniDrawer.js","forms/common/AppBarComponent.js","forms/student/StudentDetailHtml.js","api/student/StudentService.jsx","forms/student/StudentDetailComponent.js","forms/student/StudentListComponent.jsx","api/school/SchoolService.js","forms/school/SchoolDetailComponent.jsx","forms/school/SchoolListComponent.js","forms/common/SubTitleComponent.jsx","forms/billing/SearchResultsHtmlComponent.js","forms/billing/PayablesHtmlComponent.js","forms/billing/BillingHtmlComponent.js","forms/billing/SavePayablesConfimationHtml.js","forms/billing/BillingComponent.js","api/billing/BillingService.jsx","api/accountPayablesSettings/AccountPayablesSettingsService.jsx","forms/accountPayables/AccountPayablesSettingsListComponent.js","forms/accountPayables/AccountPayablesSettingsDetailComponent.jsx","api/gradeLevelPayables/GradeLevelPayablesService.js","forms/gradeLevelPayables/GradeLevelPayablesListComponent.js","forms/gradeLevelPayables/GradeLevelAccountPayablesSettingsListComponent.js","forms/common/SelectGrid.js","forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent.jsx","forms/common/GlobalAlertMsgDialog.js","AppRouting.jsx","App.js","serviceWorker.js","index.js","api/Utils.js"],"names":["GlobalVariableContext","createContext","useGlobalVariable","context","useContext","Error","GlobalVariableProvider","props","useState","alert","open","severity","msg","globalProps","setGlobalProps","showErrorAlert","showMsgAlert","showInfoAlert","showWarningAlert","showSuccessAlert","closeMsgAlert","value","useMemo","Provider","AuthenticationContext","useAuth","AuthenticationProvider","USER_TEMP","userObj","setUserObj","resetSelectedItemCommon","state","action","blankSelectedItem","selectedItem","setSelectedItemCommon","payload","updateSelectedItemCommon","temp","setPageableCommon","pageable","setPageableEntityCommon","blankPageable","list","setOptionsListCommon","optionsList","INIT_STATUS","INIT","searchValue","paging","rowsPerPage","totalElements","currentPage","totalPage","currentPeriod","periodList","SchoolSlice","createSlice","name","initialState","reducers","resetSelectedItem","setSelectedItem","data","values","initForm","updateSelectedItem","setPageable","setPageableEntity","setOptionsList","actions","selectPageable","school","selectSelectedItem","CodeGroupsSlice","codeGroups","id","schoolList","UsersSlice","setSearchValue","users","defaultPageable","level","studentLevelList","StudentSlice","birthDate","moment","format","students","period","active","levelList","applyToAllList","GradeLevelSlice","console","log","accountPayablesSettings","length","map","i","status","tempList","push","row","indexOf","rowTemp","gradeLevels","paymentPeriod","paymentPeriodList","AccountPayablesSettingsSlice","billingSearchBy","label","searchBy","searchFlag","payablesFlag","studentId","firstName","lastName","description","blankConfirmPayables","entity","payables","payablesByInvoiceNo","BillingSlice","confirmPayables","setConfirmPayables","billing","selectConfirmPayables","configureStore","reducer","SchoolReducer","CodeGroupsReducer","UsersReducer","StudentReducer","GradeLevelReducer","AccountPayablesSettingsReducer","BillingReducer","ErrorComponent","render","className","React","Component","Copyright","Box","mx","pt","Divider","Typography","variant","color","align","href","Date","getFullYear","FooterComponent","mt","PaginationComponent","TablePagination","rowsPerPageOptions","component","page","count","onChangePage","onChangeRowsPerPage","CustomTableGrid","showPaging","showSearch","showAction","register","useForm","counter","setCounter","Grid","container","spacing","item","xs","sm","FormControl","Input","defaultValue","store","onKeyDown","e","key","doSearch","target","preventDefault","doHandleKeyDown","placeholder","inputRef","endAdornment","onClick","doRetrieve","children","TableContainer","Paper","elevation","Table","TableHead","cols","params","headerName","field","IconButton","aria-label","doNew","fontSize","TableBody","TableCell","doEdit","doDelete","doHandleChangePage","doHandleChangeRowsPerPage","ENTITY","TitleComponent","pb","EndUserListComponent","dispatch","useDispatch","currPageable","useSelector","useEffect","retrieve","pageSize","axios","get","Utils","urlListPattern","getList","then","LOAD","pagingList","content","size","pageNumber","catch","error","setError","ERROR_CODE","LIST_ERROR","errorCode","formMethod","serviceName","errMsg","getFormatedErrorMessage","newPage","selected","history","PAGE_URL","USER_DETAIL_URL","delete","urlDeletePattern","deleteItem","EndUserDetailHtml","control","handleSubmit","setStatus","useHistory","entityId","RESET","onSubmit","onSubmitForm","Button","type","startIcon","USER_LIST","TextField","required","fullWidth","autoComplete","autoFocus","InputLabelProps","shrink","userName","password","as","select","MenuItem","options","EndUserDetailComponent","match","urlOptionsPattern","response","listService","RETRIEVE_ERROR","post","urlSavePattern","save","SAVE_ERROR","theurl","urlDetailsPattern","getListByUser","refId","API_URL_BASE","getByRefId","typeId","AddressListComponent","setStore","userHistory","hasUser","AddressService","userId","address1","address2","city","country","zipCode","TextFormControl","margin","onChange","changeState","myInterceptor","AddressDetailComponent","getBlankDetails","componentDidMount","thestate","user","setState","billTo","shipTo","routeUrl","ADDRESS_LIST","changeSelectState","renderOptions","cancel","ADDRESS_TYPE","USER","initialize","isUserLoggedIn","jwtTokenHeader","getJwtTokenHeader","setupAxiosInterceptors","setLoggedUserObject","getLoggedUserObj","getBasicAuthHeader","username","auth","executeJwtAuthenticationService","AUTH_URL_BASE","registerJwtSucessfulLogin","jwtToken","sessionStorage","setItem","AUTH_USER_OBJ","JSON","stringify","AUTH_USER","JWT_TOKEN","getJwtToken","getLoginUserName","getItem","parse","logout","interceptors","request","eject","removeItem","authHeader","use","a","config","headers","authorization","AuthenticatedRoute","AuthenticationService","to","useStyles","makeStyles","theme","backgroundColor","palette","mode","grey","flexGrow","height","overflow","paddingTop","paddingBottom","login_paper","marginTop","display","flexDirection","alignItems","login_avatar","secondary","main","login_form","width","login_submit","avatar_40","avatar_70","SignInHtml","classes","Container","maxWidth","Avatar","message","Alert","formData","onSignon","submit","SignInComponent","setMessage","userDetails","token","LogoutComponent","CodeGroupsListComponent","CODE_GROUPS_DETAIL_URL","DELETE_ERROR","CodeGroupsDetailComponent","CODE_GROUPS_LIST","code","priority","multiline","rows","json","uv","pv","amt","Chart","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","PureComponent","jsfiddleUrl","StackedBarChart","stackId","fill","getIntroOfPage","CustomTooltip","CustomContentOfTooltip","barSize","Dashboard","process","URL_BASE","src","faker","image","fashion","commerce","productName","random","words","people","food","px","py","m","MenuListItems","List","aria-labelledby","ListItem","button","ListItemIcon","BILLING","ListItemText","primary","ACCOUNT_PAYABLES_SETTINGS_LIST","GRADE_LEVEL_PAYABLES_LIST","STUDENT_LIST","SCHOOL_LIST","LOGOUT","LOGIN","useStylesDrawer","drawer","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","MiniDrawer","useTheme","Drawer","clsx","paper","doHandleDrawerClose","direction","AppBarComponent","root","appBar","zIndex","appBarShift","marginLeft","menuButton","marginRight","hide","title","paddingLeft","useStylesAppBar","setDrawerOpen","AppBar","position","Toolbar","edge","schoolLogo","LOGO_URL","noWrap","style","textDecoration","schoolName","userFullName","pl","FormControlLabel","Switch","checked","darkMode","toggleDarkMode","StudentDetailHtml","reset","onRetrieve","BUTTONS","STUDENT_DETAIL_URL","lrn","birthPlace","FormLabel","RadioGroup","Radio","labelPlacement","gender","contactNo","editable","fathersName","mothersName","mothersOccupation","parentCivilStatus","guardianName","StudentDetailComponent","StudentListComponent","SchoolDetailComponent","SCHOOL_DETAIL_URL","schoolYear","logo","address","SchoolListComponent","currPageableSchools","SubTitleComponent","SearchResultsHtmlComponent","CustomTableHead","CustomTableBody","doPayables","doShowPayables","require","StyledTableRow","StyledTableHeadRow","StyledTableHeadCell","PayablesHtmlComponent","total","setTotal","setPayables","PAYABLES_RESET","resetPayables","doUpdateCurPageable","DONE","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","hasNext","doShowSaveBillingDialog","studentPayables","payment","amount","toLocaleString","undefined","paid","balance","onBlur","el","replaceAll","numValue","Number","onPaymentBlur","InputProps","startAdornment","InputAdornment","colSpan","billingByInvoice","gradeLevelPayables","invoiceNo","invoiceDate","payablesMap","BillingHtmlComponent","my","Select","doShowSaveConfirmDialog","SavePayablesConfimationHtml","currConfirmPayables","componentRef","useRef","handlePrint","useReactToPrint","current","ConfirmPage","balanceTotal","paymentTotal","PrintableInvoicePage","ref","border","schoolAddress","Dialog","onClose","closeDialog","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","saveDialog","BillingComponent","vertical","horizontal","snackbar","setSnackbar","doInitFormData","by","doSavePayables","student","doOpenSnackBar","doInitConfirmStore","doCloseSnackbar","confirmStoreTemp","confirmStore","Snackbar","autoHideDuration","anchorOrigin","AccountPayablesSettingsListComponent","applyToAll","ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL","renderCount","AccountPayablesSettingsDetailComponent","GradeLevelPayablesListComponent","GRADE_LEVEL_PAYABLES_DETAIL_URL","GradeLevelAccountPayablesSettingsListComponent","setGradeLevelPayables","doAddItem","SelectGrid","rest","GradeLevelPayablesDetailsComponent","onRetrieveResponseAction","GridActionButtons","filter","FormGroup","Checkbox","handleCheckboxChange","GlobalAlertMsgDialog","handleClose","useStylesRouting","AppRouting","initTheme","themeDarkMode","localStorage","THEME","THEME_STORAGE_NAME","setDarkMode","createMuiTheme","DARK_MODE","LIGHT_MODE","CssBaseline","path","ROOT","exact","INDEX","STUDENT_DETAIL","BILLING_PAYABLES","USER_DETAIL","ADDRESS_DETAIL","USER_ADDRESS_DETAIL","CODE_GROUPS_DETAIL","SCHOOL_DETAIL","ACCOUNT_PAYABLES_SETTINGS_DETAIL","GRADE_LEVEL_PAYABLES_DETAIL","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","PAYABLES","schoolId","URL_BASE_DEV","URL_LIST","URL_DELETE","URL_DETAILS","URL_OPTIONS","URL_SAVE","UPDATE_ERROR","REQUIRED_DESCRIPTION","REQUIRED_5_DESCRIPTION","REQUIRED_TARGET_DATE","DASHBOARD","BILLING_PAYABLES_URL","STUDENT","PARENT","withStyles","fontWeight","head","TableRow","hover","fontStyle","body","StyledTableCell"],"mappings":"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","file":"static/js/main.fd899618.chunk.js","sourcesContent":["import { createContext, useContext, useMemo, useState } from 'react';\r\n\r\nconst GlobalVariableContext = createContext();\r\n\r\nfunction useGlobalVariable() {\r\n    const context = useContext(GlobalVariableContext)\r\n    if (!context) {\r\n        throw new Error(`useGlobalVariable must be used within an GlobalVariableProvider`)\r\n    }\r\n    return context;\r\n}\r\n\r\nfunction GlobalVariableProvider(props) {\r\n    const [globalProps, setGlobalProps] = useState({\r\n        alert: {\r\n            open: false,\r\n            severity: 'info',\r\n            msg: ''\r\n        }\r\n    });\r\n\r\n    const showErrorAlert = (msg) => {\r\n        showMsgAlert(true, msg, 'error')\r\n    }\r\n\r\n    const showInfoAlert = (msg) => {\r\n        showMsgAlert(true, msg, 'info')\r\n    }\r\n\r\n    const showWarningAlert = (msg) => {\r\n        showMsgAlert(true, msg, 'warning')\r\n    }\r\n\r\n    const showSuccessAlert = (msg) => {\r\n        showMsgAlert(true, msg, 'success')\r\n    }\r\n\r\n    const showMsgAlert = (open, msg, severity) => {\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            alert: {\r\n                open: open,\r\n                msg: msg,\r\n                severity: severity\r\n            }\r\n        })\r\n    }\r\n\r\n    const closeMsgAlert = () => {\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            alert: {\r\n                ...globalProps.alert,\r\n                open: false\r\n            }\r\n        })\r\n    }\r\n\r\n    const value = useMemo(() => [globalProps, setGlobalProps, showErrorAlert, showInfoAlert, showWarningAlert, showSuccessAlert, closeMsgAlert],\r\n        [globalProps])\r\n    return <GlobalVariableContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { GlobalVariableProvider, useGlobalVariable }\r\n\r\n","import { USER_TEMP } from '../api/Utils'\r\nimport { createContext, useContext, useMemo, useState } from 'react';\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nfunction useAuth() {\r\n const context = useContext(AuthenticationContext)\r\n if (!context) {\r\n  throw new Error(`useAuth must be used within an AuthenticationProvider`)\r\n }\r\n return context;\r\n}\r\n\r\nfunction AuthenticationProvider(props) {\r\n const [userObj, setUserObj] = useState(USER_TEMP);\r\n\r\n const value = useMemo(() => [userObj, setUserObj], [userObj])\r\n return <AuthenticationContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { AuthenticationProvider, useAuth }\r\n\r\n","\r\nexport const resetSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem\r\n }\r\n}\r\n\r\nexport const setSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem,\r\n  ...action.payload\r\n }\r\n}\r\n\r\nexport const updateSelectedItemCommon = (state, action) => {\r\n let temp = {\r\n  ...state.selectedItem,\r\n  ...action.payload\r\n }\r\n state.selectedItem = temp\r\n}\r\n\r\nexport const setPageableCommon = (state, action) => {\r\n state.pageable = action.payload\r\n}\r\n\r\nexport const setPageableEntityCommon = (state, action, blankPageable) => {\r\n let temp = {\r\n  ...blankPageable\r\n }\r\n temp.list = [action.payload]\r\n state.pageable = temp\r\n}\r\nexport const setSearchValueCommon = (state, action) => {\r\n state.searchValue = action.payload\r\n}\r\n\r\nexport const setOptionsListCommon = (state, action) => {\r\n state.selectedItem = {\r\n  ...state.selectedItem,\r\n  optionsList: { ...action.payload }\r\n }\r\n}\r\n\r\nexport default function CommonSlice() {\r\n\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\nimport { INIT_STATUS } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nexport const blankSelectedItem = {\r\n\tcurrentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tperiodList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.currentPeriod == null) {\r\n\t\tdata.currentPeriod = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const SchoolSlice = createSlice({\r\n\tname: 'school',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, updateSelectedItem, setOptionsList } = SchoolSlice.actions\r\n\r\nexport const selectPageable = state => state.school.pageable\r\nexport const selectSelectedItem = state => state.school.selectedItem\r\nexport const selectSearchValue = state => state.school.searchValue\r\n\r\nexport default SchoolSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\toptionsList: {\r\n\t}\r\n}\r\nexport const CodeGroupsSlice = createSlice({\r\n\tname: 'codeGroups',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity } = CodeGroupsSlice.actions\r\n\r\nexport const selectPageable = state => state.codeGroups.pageable\r\nexport const selectSelectedItem = state => state.codeGroups.selectedItem\r\nexport const selectSearchValue = state => state.codeGroups.searchValue\r\n\r\n\r\nexport default CodeGroupsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tschool: { id: '' },\r\n\toptionsList: {\r\n\t\tschoolList: [],\r\n\t}\r\n}\r\n\r\nexport const UsersSlice = createSlice({\r\n\tname: 'users',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem } = UsersSlice.actions\r\n\r\nexport const selectPageable = state => state.users.pageable\r\nexport const selectSelectedItem = state => state.users.selectedItem\r\nexport const selectSearchValue = state => state.users.searchValue\r\n\r\n\r\nexport default UsersSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\toptionsList: {\r\n\t\tstudentLevelList: []\r\n\t}\r\n}\r\n\r\nexport const StudentSlice = createSlice({\r\n\tname: 'students',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tbirthDate: moment(action.payload.birthDate).format('YYYY-MM-DD'),\r\n\t\t\t\toptionsList: {\r\n\t\t\t\t\tstudentLevelList: []\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, setSearchValue, updateSelectedItem, setOptionsList } = StudentSlice.actions\r\n\r\nexport const selectPageable = state => state.students.pageable\r\nexport const selectSelectedItem = state => state.students.selectedItem\r\nexport const selectSearchValue = state => state.students.searchValue\r\n\r\n\r\nexport default StudentSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setSelectedItemCommon, updateSelectedItemCommon } from '../CommonSlice';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\tperiod: { 'id': '' },\r\n\tactive: true,\r\n\tlist: [],\r\n\toptionsList: {\r\n\t\tlevelList: [],\r\n\t\tperiodList: [],\r\n\t\tapplyToAllList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.period == null) {\r\n\t\tdata.period = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const GradeLevelSlice = createSlice({\r\n\tname: 'gradeLevels',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetOptionsList: (state, action) => {\r\n\t\t\tconsole.log(`[GradeLevelSlice.setOptionsList] action=`, action)\r\n\t\t\tconst optionsList = action.payload\r\n\t\t\tlet list = state.selectedItem.accountPayablesSettings ? state.selectedItem.accountPayablesSettings : []\r\n\t\t\tlet applyToAllList = optionsList.applyToAllList;\r\n\t\t\tif (list.length === 0) {\r\n\t\t\t\tlist = [...applyToAllList]\r\n\t\t\t\tlist.map(i => i.status = 'NEW')\r\n\t\t\t} else {\r\n\t\t\t\tlet temp = [];\r\n\t\t\t\tlet tempList = [];\r\n\r\n\t\t\t\tlist.map(({ id }) => temp.push(id));\r\n\t\t\t\tapplyToAllList.map(row => {\r\n\t\t\t\t\tif (temp.indexOf(row.id) === -1) {\r\n\t\t\t\t\t\tlet rowTemp = {\r\n\t\t\t\t\t\t\t...row,\r\n\t\t\t\t\t\t\tstatus: 'NEW'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttempList.push(rowTemp)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn row\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet tempList2 = [\r\n\t\t\t\t\t...tempList,\r\n\t\t\t\t\t...list\r\n\t\t\t\t];\r\n\t\t\t\tlist = tempList2;\r\n\t\t\t}\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...state.selectedItem,\r\n\t\t\t\tlist: list,\r\n\t\t\t\toptionsList: { ...optionsList }\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\t// updateSelectedItem: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...state.selectedItem,\r\n\t\t// \t\t...action.payload\r\n\t\t// \t}\r\n\t\t// \tstate.selectedItem = temp\r\n\t\t// },\r\n\r\n\t\t// setPageable: (state, action) => {\r\n\t\t// \tstate.pageable = action.payload\r\n\t\t// },\r\n\r\n\t\t// setPageableEntity: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...blankPageable\r\n\t\t// \t}\r\n\t\t// \ttemp.list = [action.payload]\r\n\t\t// \tstate.pageable = temp\r\n\t\t// },\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, resetSelectedItem, setOptionsList, updateSelectedItem, setPageable, setPageableEntity, setSearchValue } = GradeLevelSlice.actions\r\n\r\nexport const selectPageable = state => state.gradeLevels.pageable\r\nexport const selectSelectedItem = state => state.gradeLevels.selectedItem\r\nexport const selectSearchValue = state => state.gradeLevels.searchValue\r\n\r\n\r\nexport default GradeLevelSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tpaymentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tpaymentPeriodList: []\r\n\t}\r\n}\r\nexport const AccountPayablesSettingsSlice = createSlice({\r\n\tname: 'accountPayablesSettings',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setOptionsList } = AccountPayablesSettingsSlice.actions\r\n\r\nexport const selectPageable = state => state.accountPayablesSettings.pageable\r\nexport const selectSelectedItem = state => state.accountPayablesSettings.selectedItem\r\nexport const selectSearchValue = state => state.accountPayablesSettings.searchValue\r\n\r\n\r\nexport default AccountPayablesSettingsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\n\r\nexport const optionsList = {\r\n\tbillingSearchBy: [{\r\n\t\tid: '1',\r\n\t\tvalue: 'STUDENT_ID',\r\n\t\tlabel: 'Student ID'\r\n\t}, {\r\n\t\tid: '2',\r\n\t\tvalue: 'STUDENT_NAME',\r\n\t\tlabel: 'Student Name'\r\n\t}]\r\n}\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tsearchBy: '',\r\n\tsearchFlag: true,\r\n\tpayablesFlag: false,\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t},\r\n\toptionsList: optionsList\r\n}\r\nconst blankSelectedItem = {\r\n\tstudentId: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\tlevel: {\r\n\t\tid: '',\r\n\t\tvalue: '',\r\n\t\tdescription: ''\r\n\t},\r\n\tschool: {\r\n\t\tid: ''\r\n\t}\r\n}\r\n\r\nconst blankConfirmPayables = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tentity: {\r\n\t\tstudentId: '',\r\n\t\tfirstName: '',\r\n\t\tlastName: '',\r\n\t\tlevel: {\r\n\t\t\tid: '',\r\n\t\t\tvalue: '',\r\n\t\t\tdescription: ''\r\n\t\t}\r\n\t},\r\n\tpayables: [],\r\n\tpayablesByInvoiceNo: [],\r\n\topen: false\r\n}\r\n\r\nexport const BillingSlice = createSlice({\r\n\tname: 'billing',\r\n\tinitialState: {\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t},\r\n\t\tconfirmPayables: {\r\n\t\t\t...blankConfirmPayables\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\r\n\t\tsetConfirmPayables: (state, action) => {\r\n\t\t\tstate.confirmPayables = {\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem, setConfirmPayables } = BillingSlice.actions\r\n\r\nexport const selectPageable = state => state.billing.pageable\r\nexport const selectSelectedItem = state => state.billing.selectedItem\r\nexport const selectSearchValue = state => state.billing.searchValue\r\nexport const selectConfirmPayables = state => state.billing.confirmPayables\r\n\r\n\r\nexport default BillingSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport SchoolReducer from './school/SchoolSlice';\r\nimport CodeGroupsReducer from './codeGroups/CodeGroupsSlice';\r\nimport UsersReducer from './endUser/UsersSlice';\r\nimport StudentReducer from './student/StudentSlice';\r\nimport GradeLevelReducer from './gradeLevelPayables/GradeLevelSlice';\r\nimport AccountPayablesSettingsReducer from './accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport BillingReducer from './billing/BillingSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        school: SchoolReducer,\r\n        codeGroups: CodeGroupsReducer,\r\n        users: UsersReducer,\r\n        students: StudentReducer,\r\n        gradeLevels: GradeLevelReducer,\r\n        accountPayablesSettings: AccountPayablesSettingsReducer,\r\n        billing: BillingReducer\r\n    },\r\n});","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"container\">Oooops!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorComponent;","import { Box, Divider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FooterComponent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nfunction Copyright() {\r\n    return (\r\n        <>\r\n            <Box mx=\"auto\" pt={3}><Divider />\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    <Link color=\"inherit\" href=\"https://material-ui.com/\">Your Website</Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nexport default FooterComponent;","import { TablePagination } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst PaginationComponent = (props) => {\r\n return (\r\n  <TablePagination rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n   component=\"div\"\r\n   page={props.paging.currentPage}\r\n   count={props.paging.totalElements}\r\n   rowsPerPage={props.paging.rowsPerPage}\r\n   onChangePage={props.onChangePage}\r\n   onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n  />\r\n )\r\n}\r\nexport default PaginationComponent;","\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Table, TableHead, TableCell, TableBody, FormControl, Input, Grid, IconButton, TableContainer, Paper } from '@material-ui/core';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils'\r\nimport PaginationComponent from './PaginationComponent';\r\n\r\nexport default function CustomTableGrid(props) {\r\n const { showPaging = true, showSearch = true, showAction = true } = props;\r\n\r\n const { register } = useForm();\r\n const [counter, setCounter] = useState(0);\r\n\r\n const doHandleKeyDown = (e) => {\r\n  if (e.key === 'Enter') {\r\n   props.doSearch(e.target.value)\r\n   e.preventDefault();\r\n  }\r\n  setCounter(counter + 1)\r\n }\r\n\r\n return (\r\n  <>\r\n   <Grid container spacing={3}>\r\n    {\r\n     showSearch &&\r\n     <Grid item xs={12} sm={8}>\r\n      <FormControl variant=\"filled\">\r\n       <Input name=\"searchValue\"\r\n        defaultValue={props.store.searchValue}\r\n        onKeyDown={e => doHandleKeyDown(e)}\r\n        placeholder=\"Search\"\r\n        inputRef={register}\r\n        endAdornment={<SearchIcon onClick={() => props.doRetrieve()} />}\r\n       />\r\n       {props.children}\r\n      </FormControl>\r\n     </Grid>\r\n    }\r\n\r\n    {\r\n     showPaging &&\r\n     <Grid item xs={12} sm={4}>\r\n      <PaginationComponent\r\n       paging={props.store.paging}\r\n       onChangePage={props.onChangePage}\r\n       onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n      />\r\n     </Grid>\r\n    }\r\n\r\n   </Grid>\r\n\r\n   <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n    <Table>\r\n     <TableHead>\r\n      <StyledTableHeadRow>\r\n       {props.cols.map(params => (\r\n        <>\r\n         <StyledTableHeadCell key={params.field}>{params.headerName}</StyledTableHeadCell>\r\n        </>\r\n       ))}\r\n       {showAction && <StyledTableHeadCell align=\"right\">\r\n        Action\r\n        <IconButton aria-label=\"add\" onClick={() => props.doNew()}>\r\n         <AddIcon fontSize=\"large\" />\r\n        </IconButton>\r\n       </StyledTableHeadCell>}\r\n\r\n      </StyledTableHeadRow>\r\n     </TableHead>\r\n     <TableBody>\r\n      {props.store.list.map(row => (\r\n       <StyledTableRow key={row.id}>\r\n        {props.cols.map(params => (\r\n         <>\r\n          <TableCell>{params.render ? params.render(row) : row[params.field]}</TableCell>\r\n         </>\r\n        ))}\r\n        {showAction && <TableCell align=\"right\">\r\n         <IconButton aria-label=\"edit\" onClick={() => props.doEdit(row)}>\r\n          <EditIcon fontSize=\"large\" />\r\n         </IconButton>\r\n         <IconButton aria-label=\"delete\" onClick={() => props.doDelete(row.id)}>\r\n          <DeleteIcon fontSize=\"large\" />\r\n         </IconButton>\r\n        </TableCell>}\r\n\r\n       </StyledTableRow>\r\n      ))}\r\n     </TableBody>\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   {props.showPaging && <PaginationComponent\r\n    paging={props.store.paging}\r\n    doHandleChangePage={props.doHandleChangePage}\r\n    doHandleChangeRowsPerPage={props.doHandleChangeRowsPerPage}\r\n   />}\r\n\r\n  </ >\r\n );\r\n}","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"user\";\r\n\r\nconst sort = \"lastName, firstName\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => {\r\n console.log(`[EndUserService.save] data=`, data)\r\n return axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n}\r\n\r\n\r\nconst EndUserService = () => {\r\n const test = () => {\r\n\r\n }\r\n return [test]\r\n}\r\n\r\nexport default EndUserService\r\n\r\n\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst TitleComponent = (props) => {\r\n return (\r\n  <Box pb={1}>\r\n   <Typography variant=\"h4\">\r\n    {props.children}\r\n   </Typography>\r\n  </Box>\r\n )\r\n}\r\n\r\nexport default TitleComponent","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nimport Utils, { PAGE_URL, INIT_STATUS, ERROR_CODE } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/endUser/EndUserService';\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/endUser/UsersSlice';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function EndUserListComponent(props) {\r\n\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.getList'))\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[EndUserDetailComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'firstName',\r\n      headerName: 'First Name',\r\n    },\r\n    {\r\n      field: 'lastName',\r\n      headerName: 'Last Name',\r\n      render: function (row) {\r\n        return row.firstName + ' ' + row.lastName;\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Users</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { Box, Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst EndUserDetailHtml = props => {\r\n      const { control, register, handleSubmit } = useForm();\r\n      const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n      const history = useHistory();\r\n\r\n      useEffect(() => {\r\n            if (status === INIT_STATUS.LOAD) {\r\n                  props.doRetrieve(props.store.entityId);\r\n                  setStatus(INIT_STATUS.RESET)\r\n            }\r\n      }, [props.store])\r\n\r\n      return (\r\n            <>\r\n                  {console.log(`[EndUserDetailHtml.return] props.store==>`, props.store)}\r\n                  <TitleComponent>User Detail</TitleComponent>\r\n\r\n                  <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                        <TextField type=\"hidden\"\r\n                              name=\"id\"\r\n                              inputRef={register}\r\n                              defaultValue={props.store.id}\r\n                        />\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"userName\"\r\n                                          name=\"userName\"\r\n                                          label=\"User Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-userName\"\r\n                                          variant=\"filled\"\r\n                                          autoFocus\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.userName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          id=\"password\"\r\n                                          type=\"password\"\r\n                                          name=\"password\"\r\n                                          label=\"Password\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-password\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.password}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"firstName\"\r\n                                          name=\"firstName\"\r\n                                          label=\"First Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-firstName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.firstName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={612}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"lastName\"\r\n                                          name=\"lastName\"\r\n                                          label=\"Last Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-lastName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.lastName}\r\n                                    />\r\n                              </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                              <Box pt={3}>\r\n                                    {/* <TextField id=\"school\"\r\n                                          select\r\n                                          required\r\n                                          name=\"school.id\"\r\n                                          label=\"School\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-school\"\r\n                                          variant=\"filled\"\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.school.id}\r\n                                          error={!!errors.name}\r\n                                    >\r\n                                          {props.store.optionsList.schoolList.map(row => (\r\n                                                <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                          ))}\r\n                                    </TextField> */}\r\n                                    <Controller\r\n                                          as={\r\n                                                <TextField id=\"school\"\r\n                                                      required\r\n                                                      select\r\n                                                      label=\"School\"\r\n                                                      fullWidth\r\n                                                      autoComplete=\"student-school\"\r\n                                                      variant=\"filled\"\r\n                                                      InputLabelProps={{ shrink: true }}\r\n                                                      inputRef={register}\r\n                                                // error={!!errors.name}\r\n                                                >\r\n                                                      {props.store.optionsList.schoolList.map(row => (\r\n                                                            <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                                      ))}\r\n                                                </TextField>\r\n                                          }\r\n                                          name=\"school.id\"\r\n                                          control={control}\r\n                                          defaultValue={props.store.school.id}\r\n                                          options={props.store.optionsList.studentLevelList}\r\n                                    />\r\n                              </Box>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                  </form>\r\n            </ >\r\n      );\r\n};\r\n\r\nexport default EndUserDetailHtml;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getOptions, save } from '../../api/endUser/EndUserService';\r\nimport EndUserDetailHtml from './EndUserDetailHtml';\r\nimport Utils, { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport { resetSelectedItem, selectSelectedItem, setOptionsList, setPageableEntity } from '../../api/endUser/UsersSlice';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\n\r\nexport default function EndUserDetailComponent(props) {\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    getOptions()\r\n      .then(response => dispatch(setOptionsList(response.data.listService)))\r\n      .catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'EndUserDetailComponent.doRetrieve', 'EndUserService.getOptions'))\r\n  }\r\n\r\n  const onSubmitForm = (data) => save(data)\r\n    .then(response => {\r\n      dispatch(setPageableEntity(response.data.entity))\r\n      props.history.push(PAGE_URL.USER_LIST)\r\n    })\r\n    .catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'EndUserDetailComponent.onSubmitForm', 'EndUserService.save'))\r\n\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[EndUserDetailComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n\r\n    showErrorAlert(errMsg)\r\n  }\r\n  return (\r\n    <EndUserDetailHtml store={selectedItem}\r\n      doRetrieve={doRetrieve}\r\n      onSubmitForm={onSubmitForm} />\r\n\r\n  );\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from '../Utils'\r\n\r\nexport const ENTITY = \"address\";\r\nclass AddressService {\r\n\r\n getList = (searchValue, page, pageSize) => {\r\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=name,address1,city`\r\n  return axios.get(theurl);\r\n }\r\n get = (id) => {\r\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\r\n  return axios.get(theurl);\r\n }\r\n delete = (id) => {\r\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\r\n  return axios.delete(theurl);\r\n }\r\n save = (data) => {\r\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\r\n  return axios.post(theurl, data);\r\n }\r\n getListByUser = (refId, searchValue) => {\r\n  const theurl = `${API_URL_BASE}address/by/${refId}?searchValue=${searchValue}`\r\n  return axios.get(theurl);\r\n }\r\n getByRefId = (refId, typeId) => {\r\n  const theurl = `${API_URL_BASE}address/byRefId/${typeId}/${refId}`//ADDRESS_TYPE\r\n  return axios.get(theurl);\r\n }\r\n}\r\n\r\nexport default new AddressService();\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nimport { INIT_STATUS } from '../../api/Utils'\r\nimport AddressService from '../../api/address/AddressService';\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nexport default function AddressListComponent(props) {\r\n  const [store, setStore] = useState({\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n      rowsPerPage: 25,\r\n      totalElements: 0,\r\n      currentPage: 0\r\n    }\r\n  });\r\n\r\n  const doRetrieve = () => {\r\n    //props.userId\r\n    console.log('props.userHistory=' + props.userHistory);\r\n    if (hasUser()) {\r\n      AddressService.getListByUser(props.userId, store.searchValue)\r\n        .then(response => {\r\n          console.log(`[AddressListComponent AddressService.getListByUser] response=>`, response)\r\n          // let data = {\r\n          //   ...store,\r\n          //   INIT_STATUS: INIT_STATUS.RESET,\r\n          //   searchValue: response.data.searchValue,\r\n          //   list: response.data.list\r\n          // }\r\n          // setStore(data);\r\n        })\r\n    } else {\r\n      AddressService.getList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\r\n        .then(response => {\r\n          console.log(`[AddressListComponent AddressService.getList] response=>`, response)\r\n          // let data = {\r\n          //   ...store,\r\n          //   INIT_STATUS: INIT_STATUS.RESET,\r\n          //   list: response.data.pagingList.content,\r\n          //   searchValue: response.data.searchValue,\r\n          //   paging: {\r\n          //     rowsPerPage: response.data.pagingList.size,\r\n          //     totalElements: response.data.pagingList.totalElements,\r\n          //     currentPage: response.data.pagingList.pageable.pageNumber\r\n          //   }\r\n          // }\r\n          // setStore(data);\r\n        })\r\n    }\r\n  }\r\n  const doEdit = (id) => {\r\n    if (this.hasUser()) {\r\n      props.userHistory.push(`/address-detail/${id}/${props.userId}`);\r\n    } else {\r\n      props.history.push(`/address-detail/${id}`);\r\n    }\r\n\r\n  }\r\n  const doDelete = (id) => {\r\n    console.log(`[AddressComponent.delete] id=${id}`)\r\n    AddressService.delete(id)\r\n      .then(response => {\r\n        console.log(`[AddressComponent.delete] response==>`, response)\r\n        doRetrieve();\r\n      })\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    //store.paging.currentPage = newPage;\r\n    let paging = store.paging;\r\n    paging.currentPage = newPage\r\n    let data = {\r\n      ...store,\r\n    }\r\n    data.paging.currentPage = newPage\r\n    setStore(data);\r\n\r\n    doRetrieve();\r\n  }\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    let paging = {\r\n      ...store.paging\r\n    }\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    let data = {\r\n      ...store,\r\n      paging: paging\r\n    }\r\n    setStore(data);\r\n\r\n    doRetrieve();\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    store.searchValue = searchValue\r\n    doRetrieve();\r\n  }\r\n\r\n  const hasUser = () => {\r\n    return props.userId;\r\n  }\r\n\r\n  const cols = [\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n    },\r\n    {\r\n      headerName: 'Address',\r\n      render: function (row) {\r\n        return <>\r\n          <div>{row.address1}</div>\r\n          <div>{row.address2}</div>\r\n          <div>{row.city}, {row.state} {row.country} {row.zipCode}</div>\r\n        </>\r\n      }\r\n    }, {\r\n      field: 'billTo',\r\n      headerName: 'Bill?',\r\n    }, {\r\n      field: 'shipTo',\r\n      headerName: 'Ship?',\r\n    },\r\n\r\n  ];\r\n  return (\r\n    <>\r\n      <Box pb={3}><Typography variant={hasUser() ? 'h5' : 'h4'}>Address</Typography></Box>\r\n      <CustomTableGrid\r\n        store={store}\r\n        cols={cols}\r\n        showPaging={!hasUser()}\r\n        // list={store.list}\r\n        // searchValue={store.searchValue}\r\n        // paging={store.paging}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      {/* <div className=\"text-right\">\r\n          <FormControl variant=\"filled\">\r\n            <Input name=\"searchValue\" value={store.searchValue} placeholder=\"Search\"\r\n              onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\r\n              endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        {this.renderPagination()}\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell>Name</StyledTableHeadCell>\r\n                <StyledTableHeadCell>Address</StyledTableHeadCell>\r\n                <StyledTableHeadCell>Is Billing?</StyledTableHeadCell>\r\n                <StyledTableHeadCell>Is Shipping?</StyledTableHeadCell>\r\n                <StyledTableHeadCell>Action</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {\r\n                store.list.map(row => (\r\n                  <StyledTableRow key={row.id}>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell>\r\n                      <div>{row.address1}</div>\r\n                      <div>{row.address2}</div>\r\n                      <div>{row.city}, {row.state} {row.country} {row.zipCode}</div>\r\n                    </TableCell>\r\n                    <TableCell>{row.billTo}</TableCell>\r\n                    <TableCell>{row.shipTo}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(row.id)}>Edit</Button>&nbsp;\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.delete(row.id)}>Delete</Button>\r\n                    </TableCell>\r\n                  </StyledTableRow>\r\n                ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n      {/* {this.renderPagination()} */}\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport { FormControl, TextField } from '@material-ui/core';\r\n\r\nexport default function TextFormControl(props) {\r\n\r\n  return (\r\n    <FormControl fullWidth margin=\"normal\" >\r\n      { props.type === 'hidden' &&\r\n        <input\r\n          type={props.type}\r\n          name={props.name} value={props.value} />\r\n      }\r\n      {props.type !== 'hidden' &&\r\n        <>\r\n          {/* <InputLabel htmlFor={props.name + 'id'}>{props.label}</InputLabel>\r\n          <TextField labelId={props.name + 'id'} placeholder={\"Enter \" + props.label} */}\r\n          <TextField label={props.label} placeholder={\"Enter \" + props.label}\r\n            type={props.type ? props.type : \"text\"}\r\n            name={props.name} value={props.value}\r\n            onChange={(e) => props.changeState(e)} />\r\n        </>\r\n      }\r\n    </FormControl >\r\n  );\r\n}\r\n\r\n\r\n// export default class TextFormControl extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n//   render = () => {\r\n//     if (this.props.type == 'hidden') {\r\n//       return (\r\n//         <TextField\r\n//           type={this.props.type}\r\n//           name={this.props.name} value={this.props.value} />\r\n//       );\r\n//     }\r\n//     return (\r\n//       <FormControl fullWidth margin=\"normal\" >\r\n//         <TextField label={this.props.label} placeholder={\"Enter \" + this.props.label}\r\n//           type={this.props.type ? this.props.type : \"text\"}\r\n//           name={this.props.name} value={this.props.value}\r\n//           onChange={(e) => this.props.changeState(e)} />\r\n//       </FormControl>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { AUTH_URL_BASE, AUTH_USER, AUTH_USER_OBJ, JWT_TOKEN, USER_TEMP } from '../api/Utils.js'\r\n\r\n\r\nlet myInterceptor\r\n\r\nclass AuthenticationService extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.initialize();\r\n        console.log('[AuthenticationService.constructor] done')\r\n    }\r\n\r\n    initialize = () => {\r\n        if (this.isUserLoggedIn()) {\r\n            let jwtTokenHeader = this.getJwtTokenHeader()\r\n            this.setupAxiosInterceptors(jwtTokenHeader);\r\n        }\r\n    }\r\n    setLoggedUserObject = () => {\r\n        if (this.isUserLoggedIn()) {\r\n            this.setState({\r\n                userObj: this.getLoggedUserObj()\r\n            });\r\n            console.log('[AuthenticationService.setLoggedUserObject] this.state.userObj=>', this.state.userObj);\r\n        }\r\n    }\r\n\r\n    // executeBasicAuthenticationService = (username, password) => {\r\n    //     const theurl = `${URL_BASE}/basicauth`\r\n    //     return axios.get(theurl, Utils.getBasicAuthHeader(username, password));\r\n    // }\r\n\r\n    getBasicAuthHeader = (username, password) => {\r\n        return {\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            }\r\n        };\r\n    }\r\n\r\n    executeJwtAuthenticationService = (username, password) => {\r\n        const theurl = `${AUTH_URL_BASE}`\r\n        //console.log(`[AuthenticationService.executeJwtAuthenticationService] theurl=${theurl}`);\r\n        return axios.post(theurl, { username, password });\r\n    }\r\n\r\n    // registerBasicAuthSucessfulLogin = (username, password) => {\r\n    //     //console.log('[AuthenticationService.registerSucessfulLogin] init');\r\n    //     sessionStorage.setItem(AUTH_USER, username);\r\n\r\n    //     let basicAuthHeader = 'Basic ' + window.btoa(username + ':' + password);\r\n    //     this.setupAxiosInterceptors(basicAuthHeader);\r\n    // }\r\n\r\n    registerJwtSucessfulLogin = (userObj, jwtToken) => {\r\n        console.log('[AuthenticationService.registerJwtSucessfulLogin] init');\r\n        sessionStorage.setItem(AUTH_USER_OBJ, JSON.stringify(userObj));\r\n        sessionStorage.setItem(AUTH_USER, userObj.userName);\r\n        sessionStorage.setItem(JWT_TOKEN, jwtToken);\r\n\r\n        this.setState({\r\n            userObj: userObj\r\n        });\r\n\r\n        let jwtTokenHeader = this.getJwtTokenHeader()\r\n        this.setupAxiosInterceptors(jwtTokenHeader);\r\n    }\r\n\r\n    getJwtTokenHeader = () => {\r\n        let jwtToken = this.getJwtToken();\r\n        let jwtTokenHeader = `Bearer ${jwtToken}`;\r\n        return jwtTokenHeader;\r\n    }\r\n\r\n    getLoginUserName = () => {\r\n        let user = sessionStorage.getItem(AUTH_USER);\r\n        return user;\r\n    }\r\n\r\n    getLoggedUserObj = () => {\r\n        let user = JSON.parse(sessionStorage.getItem(AUTH_USER_OBJ));\r\n        console.log('[AuthenticationService.getLoggedUserObj] 1 user=>', user);\r\n        if (!user) {\r\n            user = USER_TEMP;\r\n        }\r\n        console.log('[AuthenticationService.getLoggedUserObj] 2 user=>', user);\r\n        return user;\r\n        // return {}\r\n    }\r\n\r\n    getJwtToken = () => {\r\n        let jwtToken = sessionStorage.getItem(JWT_TOKEN);\r\n        return jwtToken;\r\n    }\r\n\r\n    logout = () => {\r\n        axios.interceptors.request.eject(myInterceptor);\r\n        sessionStorage.removeItem(AUTH_USER);\r\n        sessionStorage.removeItem(AUTH_USER_OBJ);\r\n        sessionStorage.removeItem(JWT_TOKEN);\r\n    }\r\n\r\n    isUserLoggedIn = () => {\r\n        let user = this.getLoginUserName();\r\n        return (user != null);\r\n    }\r\n\r\n    setupAxiosInterceptors = (authHeader) => {\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] init..');\r\n        console.log(`[AuthenticationService.setupAxiosInterceptors] authHeader: ${authHeader}`);\r\n        myInterceptor = axios.interceptors.request.use(\r\n            async config => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = authHeader;\r\n                }\r\n                return config;\r\n            }\r\n        );\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] done!');\r\n    }\r\n}\r\nexport default new AuthenticationService();","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { MenuItem, Button, FormControl } from '@material-ui/core';\n\nimport AddressService from '../../api/address/AddressService';\nimport TextFormControl from '../common/TextFormControl';\nimport { ADDRESS_TYPE, PAGE_URL } from '../../api/Utils'\n\nexport default class AddressDetailComponent extends React.Component {\n  state = {\n    \"id\": '',\n    \"userId\": '',\n    \"user\": { id: \"\", firstName: \"\", lastName: \"\" },\n    \"name\": \"\",\n    \"address1\": \"\",\n    \"address2\": \"\",\n    \"city\": \"\",\n    \"state\": \"\",\n    \"country\": \"\",\n    \"zipCode\": \"\",\n    \"billTo\": \"\",\n    \"shipTo\": \"\"\n  };\n\n  getBlankDetails = () => {\n\n    return {\n      \"id\": '',\n      \"userId\": '',\n      \"user\": { id: \"\", firstName: \"\", lastName: \"\" },\n      \"name\": \"\",\n      \"address1\": \"\",\n      \"address2\": \"\",\n      \"city\": \"\",\n      \"state\": \"\",\n      \"country\": \"\",\n      \"zipCode\": \"\",\n      \"billTo\": \"\",\n      \"shipTo\": \"\"\n    }\n  }\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    console.log(`[AddressDetailComponent.retrieve] id=${this.props.match.params.id}, userId=${this.props.match.params.refId}`);\n    let thestate = this.getBlankDetails();\n    if (this.props.match.params.id !== -1 && this.props.match.params.refId) {\n      AddressService.getByRefId(this.props.match.params.refId, this.props.match.params.typeId)\n        .then(response => {\n          console.log(`[AddressDetailComponent.retrieve AddressService.getByRefId] response=>`, response);\n          thestate = response.data.entity;\n          console.log(`[AddressDetailComponent.retrieve AddressService.getByRefId] thestate.user=>`, thestate.user);\n          thestate.userId = thestate.user.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    } else {\n      AddressService.get(this.props.match.params.id)\n        .then(response => {\n          console.log(`[AddressDetailComponent.retrieve AddressService.get] response=>`, response);\n          thestate = response.data.entity;\n          thestate.userId = thestate.user.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    }\n  }\n\n  save = () => {\n    AddressService.save({\n      refId: this.state.userId,\n      name: this.state.name,\n      address1: this.state.address1,\n      address2: this.state.address2,\n      city: this.state.city,\n      state: this.state.state,\n      country: this.state.country,\n      zipCode: this.state.zipCode,\n      billTo: this.state.billTo,\n      shipTo: this.state.shipTo,\n      id: this.state.id\n    }).then(() => {\n      let routeUrl = PAGE_URL.ADDRESS_LIST;\n      let userId = this.props.match.params.refId\n      if (userId) {\n        routeUrl = `${PAGE_URL.USER_DETAIL_URL}${userId}`\n      }\n      this.props.history.push(routeUrl);\n    })\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  changeSelectState = (e) => {\n    this.setState({\n      [e.target.name]: { \"id\": e.target.value }\n    })\n  }\n\n  renderOptions = (optionsList) => {\n    return (optionsList.map(row => (\n      <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\n    )))\n  }\n\n  cancel = () => {\n    console.log(`[AddressDetailComponent.cancel] userId=${this.props.match.params.refId}`);\n    if (this.props.match.params.refId && this.props.match.params.typeId === ADDRESS_TYPE.USER) {\n      this.props.history.push(`${PAGE_URL.USER_DETAIL_URL}/${this.props.match.params.refId}`)\n    } else {\n      this.props.history.push(PAGE_URL.ADDRESS_LIST)\n    }\n  }\n\n\n  render = () => {\n    return (\n      <>\n        <Typography variant=\"h4\">Address Detail</Typography>\n        <form>\n          <FormControl fullWidth margin=\"normal\">\n            <span>End User: {this.state.user.lastName}, {this.state.user.firstName}</span>\n            <input name=\"userId\" type=\"hidden\" value={this.state.userId} />\n          </FormControl>\n\n          <TextFormControl label=\"Name\"\n            name=\"name\" value={this.state.name}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 1\"\n            name=\"address1\" value={this.state.address1}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 2\"\n            name=\"address2\" value={this.state.address2}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"City\"\n            name=\"city\" value={this.state.city}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"State\"\n            name=\"state\" value={this.state.state}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Country\"\n            name=\"country\" value={this.state.country}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Zip Code\"\n            name=\"zipCode\" value={this.state.zipCode}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Billing?\"\n            name=\"billTo\" value={this.state.billTo}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Shipping?\"\n            name=\"shipTo\" value={this.state.shipTo}\n            changeState={this.changeState} />\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.save()}>Save</Button>&nbsp;\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.cancel()}>Cancel</Button>\n        </form>\n\n      </ >\n    );\n  }\n}\n\n\n","import React from 'react';\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nclass AuthenticatedRoute extends React.Component {\r\n    render = () => {\r\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        //console.log(`[AuthenticatedRoute]: isUserLoggedIn ${isUserLoggedIn}`);\r\n        if (isUserLoggedIn) {\r\n            return <Route {...this.props} />;\r\n        } else {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n    }\r\n}\r\nexport default AuthenticatedRoute;","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        backgroundColor:\r\n            theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    login_paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    login_avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    login_form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login_submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n    avatar_40: {\r\n        width: theme.spacing(40),\r\n        height: theme.spacing(40),\r\n    },\r\n    avatar_70: {\r\n        width: theme.spacing(70),\r\n        height: theme.spacing(70),\r\n    }\r\n}));\r\n\r\nclass CSS {\r\n\r\n}\r\n\r\nexport default new CSS();","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useStyles } from '../forms/common/CSS'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst SignInHtml = props => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  function onSubmitForm(formData) {\r\n    props.onSignon(formData.userName, formData.password);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.login_paper}>\r\n        <Avatar className={classes.login_avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n        <form className={classes.login_form} onSubmit={handleSubmit(onSubmitForm)}>\r\n\r\n          <TextField type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userName\"\r\n            label=\"User Name\"\r\n            name=\"userName\"\r\n            autoComplete=\"userName\"\r\n            autoFocus\r\n            inputRef={register}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignInHtml;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport SignInHtml from './SignInHtml.js';\r\nimport { useAuth } from '../providers/AuthenticationProvider';\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\n// import { useForm } from 'react-hook-form';\r\n\r\nexport default function SignInComponent() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [userObj, setUserObj] = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  const onSignon = (userName, password) => {\r\n    setMessage('');\r\n    console.log(`onSubmitPage userName=${userName}, password=${password}`);\r\n\r\n    AuthenticationService.executeJwtAuthenticationService(userName, password)\r\n      //executeBasicAuthenticationService(this.state.username, this.state.password)\r\n      .then(response => {\r\n        console.log('[SignInComponent.onSubmitPage]: response', response);\r\n        AuthenticationService.registerJwtSucessfulLogin(response.data.userDetails, response.data.token)\r\n\r\n        setUserObj(response.data.userDetails);\r\n        console.log('[SignInComponent.onSubmitPage]: userObj', userObj);\r\n\r\n        //registerBasicAuthSucessfulLogin(this.state.username, this.state.password);\r\n        setMessage('Login Successful!');\r\n        history.push(`/`);\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(`[SignInComponent.onSubmitPage]: error=>`, error);\r\n        setMessage('Login in failed. Your User Name and Password do not match.');\r\n      });\r\n  }\r\n  return (\r\n    <SignInHtml message={message} onSignon={onSignon} />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport { useAuth } from '../providers/AuthenticationProvider';\r\nimport { USER_TEMP } from '../api/Utils'\r\n\r\n\r\nexport default function LogoutComponent() {\r\n    const [userObj, setUserObj] = useAuth();\r\n\r\n    useEffect(() => {\r\n        console.log('[SignInComponent.onSubmitPage]: userObj', userObj);\r\n        AuthenticationService.logout();\r\n        setUserObj(USER_TEMP);\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <h1>You are logged out</h1>\r\n            <div className=\"container\">\r\n                Thank you. Come again!\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"codeGroups\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function CodeGroupsService() {\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList } from '../../api/codeGroups/CodeGroupsService';\r\nimport { selectPageable, resetSelectedItem, setPageable, setSelectedItem } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function CodeGroupsListComponent(props) {\r\n\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'CodeGroupsListComponent.retrieve', 'CodeGroupsService.getList'))\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[CodeGroupsListComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}/-1`)\r\n\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => setError(error, ERROR_CODE.DELETE_ERROR, 'CodeGroupsListComponent.doDelete', 'CodeGroupsService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'code',\r\n      headerName: 'Code',\r\n    },\r\n    {\r\n      field: 'value',\r\n      headerName: 'Value',\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n\r\n      <TitleComponent>Code Groups List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nimport { selectSelectedItem, resetSelectedItem, setPageableEntity } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport { save } from '../../api/codeGroups/CodeGroupsService';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function CodeGroupsDetailComponent(props) {\r\n\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setMessage('');\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem, status]);\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[EndUserDetailComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n  const doSave = data => save(data)\r\n    .then(response => {\r\n      dispatch(setPageableEntity(response.data.entity))\r\n      history.push(PAGE_URL.CODE_GROUPS_LIST)\r\n    })\r\n    .catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'))\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[CodeGroupsDetailComponent.render] selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Code Groups Detail</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id=\"code\"\r\n              name=\"code\"\r\n              label=\"Code\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-code\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.code}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={5}>\r\n            <TextField\r\n              required\r\n              id=\"value\"\r\n              name=\"value\"\r\n              label=\"Value\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-value\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.value}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"priority\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-priority\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-description\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n            <Grid item xs={12} sm={12}>&nbsp;</Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                multiline\r\n                rows={4}\r\n                id=\"json\"\r\n                name=\"json\"\r\n                label=\"JSON\"\r\n                fullWidth\r\n                autoComplete=\"code-groups-json\"\r\n                variant=\"filled\"\r\n                InputLabelProps={{ shrink: true }}\r\n                inputRef={register}\r\n                defaultValue={selectedItem.json}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Chart extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\r\n\r\n  render() {\r\n    return (\r\n      <LineChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\nexport default class StackedBarChart extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/90v76x08/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 20, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n    <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\n\r\nconst getIntroOfPage = (label) => {\r\n if (label === 'Page A') {\r\n  return \"Page A is about men's clothing\";\r\n } if (label === 'Page B') {\r\n  return \"Page B is about women's dress\";\r\n } if (label === 'Page C') {\r\n  return \"Page C is about women's bag\";\r\n } if (label === 'Page D') {\r\n  return 'Page D is about household goods';\r\n } if (label === 'Page E') {\r\n  return 'Page E is about food';\r\n } if (label === 'Page F') {\r\n  return 'Page F is about baby food';\r\n }\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n if (active) {\r\n  return (\r\n   <div className=\"custom-tooltip\">\r\n    <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n    <p className=\"intro\">{getIntroOfPage(label)}</p>\r\n    <p className=\"desc\">Anything you want can be displayed here.</p>\r\n   </div>\r\n  );\r\n }\r\n\r\n return null;\r\n};\r\n\r\nexport default class CustomContentOfTooltip extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/vxq4ep63/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 5, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip content={<CustomTooltip />} />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" barSize={20} fill=\"#8884d8\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React from 'react';\r\nimport faker from 'faker'\r\nimport { URL_BASE } from '../../api/Utils'\r\nimport { useStyles } from '../common/CSS'\r\n\r\nimport AuthenticationService from '../../security/AuthenticationService'\r\nimport { Avatar, Box, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport Chart from './Chart';\r\nimport StackedBarChart from './StackedBarChart';\r\nimport CustomContentOfTooltip from './CustomContentOfTooltip';\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  console.log(`process.env.NODE_ENV= ${process.env.NODE_ENV}`)\r\n  console.log(`URL_BASE= ${URL_BASE}`)\r\n\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n  return (\r\n    <>{\r\n      !isUserLoggedIn &&\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.fashion(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.people(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.food(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n      </Grid>\r\n    }\r\n\r\n      {\r\n        isUserLoggedIn &&\r\n        <>\r\n          <Box component={Paper} elevation={3} variant=\"elevation\" px={3} py={3} m=\"auto\">\r\n            <Typography variant=\"h4\">Chart samples click <a href=\"https://recharts.org/en-US/examples\">here</a></Typography>\r\n            <Grid container spacing={5}>\r\n              <Grid item xs={12} sm={4}>\r\n                <Chart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <StackedBarChart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <CustomContentOfTooltip />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </>\r\n      }\r\n    </ >\r\n  )\r\n}","import React from 'react';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../../security/AuthenticationService';\r\nimport { PAGE_URL } from '../../api/Utils'\r\nimport { Divider } from '@material-ui/core';\r\n\r\n\r\nexport default function MenuListItems() {\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    // subheader={\r\n    //  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n    //   Menu\r\n    //  </ListSubheader>\r\n    // }\r\n    >\r\n      {\r\n        isUserLoggedIn && <>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AccountBalanceWalletIcon onClick={() => history.push(PAGE_URL.BILLING)} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Billing\" onClick={() => history.push(PAGE_URL.BILLING)} />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Payables Settings\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIndIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Level Payables\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.STUDENT_LIST)}>\r\n            <ListItemIcon>\r\n              <LocalLibraryIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Student\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.SCHOOL_LIST)} >\r\n            <ListItemIcon>\r\n              <SchoolIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"School\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.USER_LIST)} >\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)}>\r\n            <ListItemIcon>\r\n              <CodeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Code Groups\" />\r\n          </ListItem>\r\n\r\n        </>\r\n      }\r\n\r\n      {isUserLoggedIn &&\r\n        <>\r\n          <Divider />\r\n          <ListItem button onClick={() => history.push(PAGE_URL.LOGOUT)} >\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </>\r\n      }\r\n\r\n      {!isUserLoggedIn &&\r\n        <ListItem button onClick={() => history.push(PAGE_URL.LOGIN)} >\r\n          <ListItemIcon>\r\n            <VpnKeyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Login\" />\r\n        </ListItem>}\r\n\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuListItems from './MenuListItems';\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStylesDrawer = makeStyles((theme) => ({\r\n drawer: {\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: 'nowrap',\r\n },\r\n drawerOpen: {\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n },\r\n drawerClose: {\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: theme.spacing(7) + 1,\r\n  [theme.breakpoints.up('sm')]: {\r\n   width: theme.spacing(9) + 1,\r\n  },\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n const classes = useStylesDrawer();\r\n const theme = useTheme();\r\n\r\n return (\r\n  <Drawer\r\n   variant=\"permanent\"\r\n   className={clsx(classes.drawer, {\r\n    [classes.drawerOpen]: props.drawerOpen,\r\n    [classes.drawerClose]: !props.drawerOpen,\r\n   })}\r\n   classes={{\r\n    paper: clsx({\r\n     [classes.drawerOpen]: props.drawerOpen,\r\n     [classes.drawerClose]: !props.drawerOpen,\r\n    }),\r\n   }}\r\n  >\r\n   <div className={classes.toolbar}>\r\n    <IconButton onClick={props.doHandleDrawerClose}>\r\n     {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n    </IconButton>\r\n   </div>\r\n   <Divider />\r\n   <MenuListItems />\r\n  </Drawer>\r\n );\r\n}\r\n","\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { AppBar, IconButton, Toolbar, Typography, Avatar, Box, FormControlLabel, Switch, makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nimport { PAGE_URL, URL_BASE } from '../../api/Utils'\r\nimport { useAuth } from '../../providers/AuthenticationProvider';\r\nimport MiniDrawer from './MiniDrawer';\r\n\r\nexport default function AppBarComponent(props) {\r\n const [userObj] = useAuth();\r\n\r\n const drawerWidth = 240;\r\n const useStylesAppBar = makeStyles((theme) => ({\r\n  root: {\r\n   display: 'flex',\r\n  },\r\n  appBar: {\r\n   zIndex: theme.zIndex.drawer + 1,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n   }),\r\n  },\r\n  appBarShift: {\r\n   marginLeft: drawerWidth,\r\n   width: `calc(100% - ${drawerWidth}px)`,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n   }),\r\n  },\r\n  menuButton: {\r\n   marginRight: 36,\r\n  },\r\n  hide: {\r\n   display: 'none',\r\n  },\r\n  title: {\r\n   flexGrow: 1,\r\n   display: 'none',\r\n   [theme.breakpoints.up('sm')]: {\r\n    display: 'block',\r\n    paddingLeft: theme.spacing(1)\r\n   },\r\n   //backgroundColor: fade(theme.palette.common.white, 0.25),\r\n  },\r\n }));\r\n // const [userObj, setUserObj] = useState({\r\n //  userName: '',\r\n //  userFullName: 'Guest',\r\n //  schoolName: '',\r\n //  schoolLogo: ''\r\n // });\r\n\r\n const classes = useStylesAppBar();\r\n // const userName = AuthenticationService.getLoginUserName();\r\n // const isLogin = AuthenticationService.isUserLoggedIn();\r\n\r\n // printme(userObj);\r\n\r\n const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n const doHandleDrawerOpen = () => {\r\n  setDrawerOpen(true);\r\n  console.log(`[AppBarComponent.doHandleDrawerOpen] drawerOpen=>${drawerOpen}`)\r\n }\r\n const doHandleDrawerClose = () => {\r\n  setDrawerOpen(false);\r\n  console.log(`[AppBarComponent.doHandleDrawerClose] doHandleDrawerClose=>${drawerOpen}`)\r\n }\r\n return (\r\n  < div className={classes.root} >\r\n   {console.log('[AppBarComponent.return] userObj=>', userObj)}\r\n   <AppBar\r\n    position=\"fixed\"\r\n    className={clsx(classes.appBar, {\r\n     [classes.appBarShift]: drawerOpen,\r\n    })}>\r\n    <Toolbar>\r\n     <IconButton\r\n      color=\"inherit\"\r\n      aria-label=\"open drawer\"\r\n      onClick={doHandleDrawerOpen}\r\n      edge=\"start\"\r\n      className={clsx(classes.menuButton, {\r\n       [classes.hide]: drawerOpen,\r\n      })}\r\n     >\r\n      <MenuIcon />\r\n     </IconButton>\r\n\r\n     {userObj && userObj.schoolLogo && <Avatar src={(URL_BASE + PAGE_URL.LOGO_URL + userObj.schoolLogo)} />}\r\n     {(!userObj || !userObj.schoolLogo) && <SchoolIcon />}\r\n\r\n     <Typography className={classes.title} variant=\"h6\" noWrap>\r\n      <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n       {userObj && <b>{userObj.schoolName}</b>}\r\n      </Link>\r\n     </Typography>\r\n     {userObj && <div>Welcome <b>{userObj.userFullName}</b></div>}\r\n\r\n     <Box pl={5}>\r\n      <FormControlLabel control={<Switch checked={props.darkMode} onChange={props.toggleDarkMode} />} />\r\n     </Box>\r\n    </Toolbar>\r\n   </AppBar>\r\n   <MiniDrawer drawerOpen={drawerOpen} doHandleDrawerClose={doHandleDrawerClose} />\r\n  </div >\r\n );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Divider, FormControlLabel, FormLabel, Grid, MenuItem, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst StudentDetailHtml = props => {\r\n\r\n  const { control, register, handleSubmit, reset } = useForm();\r\n  const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setCounter(counter + 1);\r\n    console.log(`[StudentDetailHtml.useEffect] status=>${status}, counter=${counter}`);\r\n    if (status === INIT_STATUS.LOAD) {\r\n      props.onRetrieve();\r\n      setStatus(INIT_STATUS.RESET)\r\n    }\r\n    reset(props.store)\r\n  }, [props.store])\r\n\r\n  const BUTTONS = () => {\r\n    return (\r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.STUDENT_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.STUDENT_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <TitleComponent>Student Detail</TitleComponent>\r\n      {/* {counter > 0 && <Alert severity=\"error\">Counter={counter}, Init Status: {props.store.initStatus}</Alert>} */}\r\n      {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n        <BUTTONS />\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={props.store.id}\r\n        />\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"lrn\"\r\n              name=\"lrn\"\r\n              label=\"LRN\"\r\n              fullWidth\r\n              autoComplete=\"lrn\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lrn}\r\n            />\r\n          </Grid><Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"studentId\"\r\n              name=\"studentId\"\r\n              label=\"Student Id\"\r\n              fullWidth\r\n              autoComplete=\"studentId\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.studentId}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.firstName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              autoComplete=\"family-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lastName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"level\"\r\n                  required\r\n                  select\r\n                  name=\"level.id\"\r\n                  label=\"Grade Level\"\r\n                  fullWidth\r\n                  autoComplete=\"student level\"\r\n                  variant=\"filled\"\r\n                  inputRef={register}\r\n                >\r\n                  {props.store.optionsList.studentLevelList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"level.id\"\r\n              control={control}\r\n              defaultValue={props.store.level.id}\r\n              options={props.store.optionsList.studentLevelList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthDate\"\r\n              name=\"birthDate\"\r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              fullWidth\r\n              autoComplete=\"birth-date\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.birthDate}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthPlace\"\r\n              name=\"birthPlace\"\r\n              label=\"Birth Place\"\r\n              fullWidth\r\n              autoComplete=\"birth-place\"\r\n              InputLabelProps={{ shrink: true }}\r\n              variant=\"filled\"\r\n              inputRef={register}\r\n              defaultValue={props.store.birthPlace}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <FormLabel component=\"gender\"\r\n              variant=\"filled\">Gender</FormLabel>\r\n            <Controller\r\n              as={\r\n                <RadioGroup row\r\n                  label=\"Gender\"\r\n                  aria-label=\"gender\"\r\n                  variant=\"filled\">\r\n                  <FormControlLabel\r\n                    value=\"Male\"\r\n                    control={<Radio\r\n                      variant=\"filled\" />}\r\n                    label=\"Male\"\r\n                    labelPlacement=\"end\"\r\n                    defaultValue={props.store.gender}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                    labelPlacement=\"end\"\r\n                    variant=\"filled\" defaultValue={props.store.gender}\r\n                  />\r\n                </RadioGroup>\r\n              }\r\n              name=\"gender\"\r\n              fullWidth\r\n              defaultValue={props.store.gender}\r\n              inputRef={register}\r\n              variant=\"filled\"\r\n              control={control}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"contactNo\"\r\n              name=\"contactNo\"\r\n              label=\"Contact No\"\r\n              fullWidth\r\n              autoComplete=\"contactNo\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.contactNo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" >Address:</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n\r\n            <TextField\r\n              id=\"address.address1\"\r\n              name=\"address1\"\r\n              label=\"Address line 1\"\r\n              fullWidth\r\n              autoComplete=\"shipping address1\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address1}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"address.address2\"\r\n              name=\"address2\"\r\n              label=\"Address line 2\"\r\n              fullWidth\r\n              autoComplete=\"shipping address2\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address2}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.city\"\r\n              name=\"city\"\r\n              label=\"City\"\r\n              fullWidth\r\n              autoComplete=\"shipping address city\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.city}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.zip\"\r\n              name=\"zipCode\"\r\n              label=\"Zip / Postal code\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-code\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.zipCode}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField editable={false}\r\n              required\r\n              id=\"address.country\"\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-country\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.country}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}><Typography variant=\"h6\" >Parent/Guardian:</Typography></Grid>\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"fathersName\"\r\n              name=\"fathersName\"\r\n              label=\"Father's Name\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"fathersOccupation\"\r\n              name=\"fathersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"mothersName\"\r\n              name=\"mothersName\"\r\n              label=\"Mother's Name\"\r\n              fullWidth\r\n              autoComplete=\"mothersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"mothersOccupation\"\r\n              name=\"mothersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"mothersOccupation\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersOccupation}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"parentCivilStatus\"\r\n              name=\"parentCivilStatus\"\r\n              label=\"Parent CivilStatus\"\r\n              fullWidth\r\n              autoComplete=\"parentCivilStatus\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.parentCivilStatus}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} />\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"guardianName\"\r\n              name=\"guardianName\"\r\n              label=\"Guardian Name\"\r\n              fullWidth\r\n              autoComplete=\"guardianName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.guardianName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <BUTTONS />\r\n\r\n      </form>\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\nexport default StudentDetailHtml;","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"student\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlDetailsPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport  const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport  const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function StudentService  () {\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Utils, { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport StudentDetailHtml from './StudentDetailHtml.js';\r\nimport { save, getOptions } from '../../api/student/StudentService'\r\nimport { selectSelectedItem, setOptionsList, setPageableEntity, resetSelectedItem } from '../../api/student/StudentSlice';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\n\r\nexport default function StudentDetailComponent(props) {\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log('[StudentDetailComponent.onSubmitForm] data==>', data)\r\n\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage(``)\r\n        props.history.push(PAGE_URL.STUDENT_LIST)\r\n      })\r\n      .catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'StudentDetailComponent.onSubmitForm', 'StudentService.save'));\r\n  }\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[StudentDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    setMessage(`Loading. Please wait...`);\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage(``)\r\n      })\r\n      .catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'StudentDetailComponent.onRetrieve', 'StudentService.getOptions'));\r\n  }\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.log(`[StudentDetailComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName);\r\n    setMessage(errMsg);\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n  return (\r\n    <StudentDetailHtml\r\n      store={selectedItem}\r\n      message={message}\r\n      onSubmitForm={onSubmitForm}\r\n      onRetrieve={onRetrieve}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/student/StudentService'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/student/StudentSlice';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function StudentListComponent(props) {\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [currPageable]);\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.retrieve', 'StudentService.getList'))\r\n\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[StudentListComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.doDelete', 'StudentService.deleteItem'))\r\n  }\r\n\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  const cols = [\r\n    {\r\n      field: 'studentId',\r\n      headerName: 'Student ID',\r\n    },\r\n    {\r\n      field: 'lrn',\r\n      headerName: 'LRN',\r\n    },\r\n    {\r\n      headerName: 'Name',\r\n      render: function (row) {\r\n        return <>\r\n          {row.firstName} {row.lastName}\r\n        </>\r\n      }\r\n    },\r\n    {\r\n      field: 'gender',\r\n      headerName: 'Gender',\r\n    },\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return <>\r\n          {row.level && row.level.description}\r\n        </>\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Student List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"school\";\r\nconst sort = \"schoolYear,name\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\n\r\nexport default function SchoolService() {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider'\r\nimport TitleComponent from '../common/TitleComponent'\r\n\r\nimport { save, getOptions } from '../../api/school/SchoolService'\r\nimport {\r\n  selectSelectedItem,\r\n  setSelectedItem,\r\n  setPageableEntity,\r\n  updateSelectedItem,\r\n  blankSelectedItem,\r\n  setOptionsList,\r\n  resetSelectedItem,\r\n} from '../../api/school/SchoolSlice'\r\n\r\nexport default function SchoolDetailComponent(props) {\r\n  const [\r\n    ,\r\n    ,\r\n    showErrorAlert,\r\n    ,\r\n    ,\r\n  ] = useGlobalVariable()\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { control, register, handleSubmit } = useForm()\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...')\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT)\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      `[SchoolDetailComponent.useEffect] status=${status}, selectedItem==>`,\r\n      selectedItem\r\n    )\r\n\r\n    if (selectedItem.currentPeriod == null) {\r\n      dispatch(\r\n        updateSelectedItem({\r\n          currentPeriod: { id: '' },\r\n        })\r\n      )\r\n    }\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(setSelectedItem(blankSelectedItem))\r\n      }\r\n      doRetrieve()\r\n      setMessage('')\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem])\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    getOptions().then((response) =>\r\n      dispatch(setOptionsList(response.data.listService))\r\n    )\r\n    //.catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'EndUserDetailComponent.doRetrieve', 'EndUserService.getOptions'))\r\n  }\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[SchoolDetailComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(\r\n      error,\r\n      errorCode,\r\n      formMethod,\r\n      serviceName\r\n    )\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log(\r\n      `[SchoolDetailComponent.onSubmitForm] data=`, data\r\n    )\r\n    save(data)\r\n      .then((response) => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        history.push(PAGE_URL.SCHOOL_LIST)\r\n      })\r\n      .catch((error) =>\r\n        setError(\r\n          error,\r\n          ERROR_CODE.SAVE_ERROR,\r\n          'SchoolDetailComponent.save',\r\n          'SchoolService.save'\r\n        )\r\n      )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {console.log(\r\n        `[SchoolDetailComponent.render] selectedItem==>`,\r\n        selectedItem\r\n      )}\r\n      <TitleComponent>School Detail</TitleComponent>\r\n      {message && <Alert severity='info'>{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(onSubmitForm)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          type='hidden'\r\n          name='id'\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id='name'\r\n              name='name'\r\n              label='Name'\r\n              fullWidth\r\n              autoComplete='school-name'\r\n              autoFocus\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id='schoolYear'\r\n              name='schoolYear'\r\n              label='School Year'\r\n              fullWidth\r\n              autoComplete='school-schoolYear'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.schoolYear}\r\n            />\r\n          </Grid>\r\n          {/* <SelectGrid\r\n            sm={3}\r\n            id='currentPeriod'\r\n            name='currentPeriod'\r\n            label='Current Period'\r\n            // value={selectedItem.currentPeriod.id}\r\n            options={selectedItem.optionsList.periodList}\r\n            inputRef={register}\r\n            defaultValue={selectedItem.currentPeriod.id}\r\n            onChange={(e) => changeSelectState(e)}\r\n          /> */}\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"currentPeriod\"\r\n                  required\r\n                  select\r\n                  label=\"Current Period\"\r\n                  fullWidth\r\n                  autoComplete=\"school-currentPeriod\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.periodList.map(({ id, description }) => (\r\n                    <MenuItem key={id} value={id}>{description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"currentPeriod.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.currentPeriod.id}\r\n              options={selectedItem.optionsList.periodList}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id='logo'\r\n              name='logo'\r\n              label='Logo'\r\n              fullWidth\r\n              autoComplete='school-logo'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.logo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id='address'\r\n              name='address'\r\n              label='Address'\r\n              fullWidth\r\n              autoComplete='school-address'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.address}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\n\r\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport { deleteItem, getList } from '../../api/school/SchoolService'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem, } from '../../api/school/SchoolSlice'\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\nimport TitleComponent from '../common/TitleComponent'\r\n\r\nexport default function SchoolListComponent(props) {\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n  const dispatch = useDispatch()\r\n  const currPageableSchools = useSelector(selectPageable)\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [])\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage).then(\r\n      ({ data }) =>\r\n        dispatch(\r\n          setPageable({\r\n            INIT_STATUS: INIT_STATUS.LOAD,\r\n            list: data.pagingList.content,\r\n            searchValue: searchValue,\r\n            paging: {\r\n              rowsPerPage: data.pagingList.size,\r\n              currentPage: data.pagingList.pageable.pageNumber,\r\n              totalElements: data.pagingList.totalElements,\r\n              totalPage: data.pagingList.totalPage,\r\n            },\r\n          })\r\n        )).catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[SchoolListComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n  const doRetrieve = () =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: currPageableSchools.paging,\r\n    })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}`)\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}/-1`)\r\n  }\r\n\r\n  const doDelete = (id) =>\r\n    deleteItem(id)\r\n      .then(doRetrieve())\r\n      .catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n  const doHandleChangePage = (e, newPage) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        currentPage: newPage,\r\n      },\r\n    })\r\n\r\n  const doHandleChangeRowsPerPage = (e) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0,\r\n      },\r\n    })\r\n\r\n  const doSearch = (searchValue) =>\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n      },\r\n    })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n    },\r\n    {\r\n      field: 'schoolYear',\r\n      headerName: 'School Year',\r\n    },\r\n    {\r\n      field: 'logo',\r\n      headerName: 'Logo',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Schools</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageableSchools}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst SubTitleComponent = (props) => {\r\n return (\r\n  <>\r\n   <Box>\r\n    <Typography variant=\"h5\">{props.children}</Typography>\r\n   </Box>\r\n  </>\r\n )\r\n}\r\n\r\nexport default SubTitleComponent","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead } from '@material-ui/core';\r\n\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\n\r\nimport { PAGE_URL, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\nimport PaginationComponent from '../common/PaginationComponent';\r\nimport SubTitleComponent from '../common/SubTitleComponent';\r\n\r\nconst SearchResultsHtmlComponent = (props) => {\r\n const { list, paging } = props.store;\r\n const history = useHistory();\r\n\r\n\r\n const doEditUser = id => history.push(PAGE_URL.STUDENT_DETAIL_URL + '/' + id)\r\n\r\n const doShowPayables = row => props.doPayables(row)\r\n\r\n const CustomTableHead = () => {\r\n  return (<>\r\n   <TableHead>\r\n    <StyledTableHeadRow>\r\n     <StyledTableHeadCell>Student ID</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Name</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Grade Level</StyledTableHeadCell>\r\n     <StyledTableHeadCell align=\"right\">\r\n      <IconButton aria-label=\"add\" onClick={() => props.doEdit(-1)}>\r\n       <AddIcon fontSize=\"large\" />\r\n      </IconButton>\r\n     </StyledTableHeadCell>\r\n    </StyledTableHeadRow>\r\n   </TableHead>\r\n  </>)\r\n }\r\n const CustomTableBody = () => {\r\n  return (<>\r\n   <TableBody>\r\n    {list.map(row => (\r\n     <StyledTableRow key={row.id}>\r\n      <TableCell variant=\"head\">{row.studentId}</TableCell>\r\n      <TableCell>{row.firstName} {row.lastName}</TableCell>\r\n      <TableCell>{row.level.description}</TableCell>\r\n      <TableCell align=\"right\">\r\n       <IconButton aria-label=\"payment\" onClick={() => doShowPayables(row)}>\r\n        <AccountBalanceWalletIcon fontSize=\"large\" />\r\n       </IconButton>\r\n       <IconButton aria-label=\"edit\" onClick={() => doEditUser(row.id)}>\r\n        <EditIcon fontSize=\"large\" />\r\n       </IconButton>\r\n      </TableCell>\r\n     </StyledTableRow>\r\n    ))}\r\n   </TableBody>\r\n  </>)\r\n }\r\n\r\n return (\r\n  <>\r\n   <SubTitleComponent>Search Results</SubTitleComponent>\r\n   {/* <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   /> */}\r\n\r\n   <TableContainer component={Paper}>\r\n    <Table>\r\n     <CustomTableHead />\r\n     <CustomTableBody />\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   />\r\n  </>\r\n )\r\n}\r\n\r\nexport default SearchResultsHtmlComponent;","\r\nimport React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Box, Paper, Grid, TextField, Table, TableContainer, TableHead, TableCell, TableBody, Button, InputAdornment } from \"@material-ui/core\"\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SubTitleComponent from '../common/SubTitleComponent';\r\n\r\nconst { StyledTableRow, StyledTableHeadRow, StyledTableHeadCell, INIT_STATUS } = require(\"../../api/Utils\")\r\n\r\nconst PayablesHtmlComponent = (props) => {\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const [payables, setPayables] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(`[PayablesHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n    if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES_RESET) {\r\n      resetPayables();\r\n      props.doUpdateCurPageable({\r\n        INIT_STATUS: INIT_STATUS.DONE\r\n      })\r\n\r\n      reset(props.store);\r\n    }\r\n  }, [props.store])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  const resetPayables = () => {\r\n    console.log(`[PayablesHtmlComponent.resetPayables] payables=>`, payables);\r\n    setTotal(0);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let data = {\r\n      ...payables\r\n    }\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        data[`payables[${i}].payment`] = formatter.format(0);\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setPayables(data);\r\n  }\r\n\r\n  const onPaymentBlur = (e) => {\r\n    const el = e.target\r\n    let value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    el.value = formatter.format(value);\r\n\r\n    console.log(`[PayablesHtmlComponent.onPaymentChange] value=${value}, payables=>`, payables)\r\n    value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    let numValue = Number(value);\r\n    let data = {\r\n      ...payables,\r\n    };\r\n\r\n    data[el.name] = numValue;\r\n    setPayables(data);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let total = 0;\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        total = total + payment;\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setTotal(formatter.format(total));\r\n    console.log(`[onPaymentBlur.onPaymentChange] total=${total}, payables=>`, payables)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SubTitleComponent>Student Information</SubTitleComponent>\r\n      <Paper elevation={3} variant=\"elevation\" >\r\n        <Box py={3} px={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>Student Id</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.studentId}</Grid>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.firstName + ' ' + props.store.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n      <form onSubmit={handleSubmit(props.doShowSaveBillingDialog)}>\r\n        <TextField\r\n          type=\"hidden\"\r\n          name=\"id\"\r\n          value={props.store.entity.id}\r\n          inputRef={register}\r\n        />\r\n        <SubTitleComponent>Payables</SubTitleComponent>\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Paid</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }}>Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.studentPayables.payables.map((row, i) => (\r\n                  < StyledTableRow >\r\n                    <TableCell>{row.name}</TableCell>\r\n\r\n                    {row.code === 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">({row.payment})</TableCell>\r\n                      </>\r\n                    }\r\n\r\n                    {row.code !== 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\">P{row.amount.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.paid.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.balance.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        }\r\n                        )}</ TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].student.id`}\r\n                            value={props.store.entity.id}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].balance`}\r\n                            value={row.balance}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].order`}\r\n                            value={i}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].code`}\r\n                            value={row.code}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].amount`}\r\n                            value={row.amount}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].name`}\r\n                            value={row.name}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].paid`}\r\n                            value={row.paid}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField id={row.code}\r\n                            type=\"currency\"\r\n                            name={`payables[${i}].payment`}\r\n                            onBlur={e => onPaymentBlur(e)}\r\n                            fullWidth\r\n                            inputRef={register}\r\n                            // disabled={row.balance === 0}\r\n                            defaultValue={row.payment}\r\n                            variant=\"filled\"\r\n                            InputProps={{\r\n                              startAdornment: <InputAdornment position=\"start\">P</InputAdornment>,\r\n                            }} />\r\n\r\n                        </TableCell>\r\n                      </>}\r\n                  </StyledTableRow>\r\n                ))\r\n              }\r\n              <StyledTableRow>\r\n                <TableCell colSpan=\"4\" align=\"right\">Total</TableCell>\r\n                <TableCell align=\"right\">{total}</TableCell>\r\n              </StyledTableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box pt={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={10}>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save Payment</Button>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Reciept</Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Box>\r\n        <SubTitleComponent>Invoice</SubTitleComponent>\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Date</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Invoice #</StyledTableHeadCell>\r\n                {\r\n                  props.store.billingByInvoice.gradeLevelPayables.accountPayablesSettings.map(({ id, description }) => (\r\n                    <StyledTableHeadCell key={id} variant=\"head\" align=\"right\">{description}</StyledTableHeadCell>\r\n                  ))\r\n                }\r\n                <StyledTableHeadCell variant=\"head\" align=\"right\" style={{ width: \"10%\" }} >Total Payment</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" align=\"right\" style={{ width: \"10%\" }} >Total Balance</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.billingByInvoice.list.map(({ invoiceNo, invoiceDate, payablesMap }) => (\r\n                  < StyledTableRow >\r\n                    <TableCell>{moment(invoiceDate).format('YYYY-MM-DD')}</TableCell>\r\n                    <TableCell>{invoiceNo}</TableCell>\r\n                    {\r\n                      props.store.billingByInvoice.gradeLevelPayables.accountPayablesSettings.map(({ id, description }) => (\r\n                        <TableCell key={id} align=\"right\">{(payablesMap[id] ? payablesMap[id].payment : 0).toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        }\r\n                        )}</TableCell>\r\n                      ))\r\n                    }\r\n                    <TableCell align=\"right\">\r\n                      {(0).toLocaleString(undefined, {\r\n                        maximumFractionDigits: 2,\r\n                        minimumFractionDigits: 2\r\n                      })}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {(0).toLocaleString(undefined, {\r\n                        maximumFractionDigits: 2,\r\n                        minimumFractionDigits: 2\r\n                      })}\r\n                    </TableCell>\r\n                  </ StyledTableRow>\r\n                ))\r\n              }\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\nexport default PayablesHtmlComponent;","import React, { useEffect, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport { Box, Button, Grid, MenuItem, Paper, TextField, Typography, Select } from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { INIT_STATUS } from '../../api/Utils'\r\nimport SearchResultsHtmlComponent from './SearchResultsHtmlComponent';\r\nimport PayablesHtmlComponent from './PayablesHtmlComponent';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function BillingHtmlComponent(props) {\r\n        const { control, register, handleSubmit, reset } = useForm();\r\n        const [counter, setCounter] = useState(0);\r\n\r\n        useEffect(() => {\r\n                setCounter(counter + 1);\r\n                console.log(`[BillingHtmlComponent.useEffect] counter=${counter}, INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n                // if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES) {\r\n                //         props.doPayables();\r\n                // } else \r\n                if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                        reset(props.store)\r\n                }\r\n        }, [props.store])\r\n\r\n        return (\r\n                <>\r\n                        {console.log(`[BillingHtmlComponent.return] counter=${counter}, INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)}\r\n                        <TitleComponent>Payment</TitleComponent>\r\n\r\n                        <form onSubmit={handleSubmit(props.doRetrieve)}>\r\n                                <Paper elevation={3} variant=\"elevation\" >\r\n                                        <Box my={3} mx={3}>\r\n                                                <Grid container spacing={3}>\r\n                                                        <Grid item xs={12} sm={2}><Typography variant=\"h6\">Search By</Typography></Grid>\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Controller\r\n                                                                        as={<Select fullWidth >\r\n                                                                                {props.store.optionsList.billingSearchBy.map(m => (\r\n                                                                                        <MenuItem key={m.id} value={m.value}>\r\n                                                                                                {m.label}\r\n                                                                                        </MenuItem>\r\n                                                                                ))}\r\n                                                                        </Select>}\r\n                                                                        required\r\n                                                                        name=\"searchBy\"\r\n                                                                        control={control}\r\n                                                                        defaultValue={props.store.searchBy}\r\n                                                                        options={props.store.optionsList.billingSearchBy}\r\n                                                                />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                                <TextField id=\"searchValue\"\r\n                                                                        required\r\n                                                                        name=\"searchValue\"\r\n                                                                        // label=\"Search Value\"\r\n                                                                        fullWidth\r\n                                                                        autoComplete=\"billing-search-value\"\r\n                                                                        inputRef={register}\r\n                                                                        defaultValue={props.store.searchValue}\r\n                                                                />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SearchIcon />}>Search</Button>\r\n                                                        </Grid>\r\n                                                </Grid>\r\n                                        </Box>\r\n                                </Paper>\r\n                        </form>\r\n                        {props.store.searchFlag &&\r\n                                <SearchResultsHtmlComponent\r\n                                        store={props.store}\r\n                                        onChangePage={props.onChangePage}\r\n                                        onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n                                        doPayables={props.doPayables}\r\n                                />}\r\n                        {props.store.payablesFlag &&\r\n                                <PayablesHtmlComponent\r\n                                        register={register}\r\n                                        handleSubmit={handleSubmit}\r\n                                        doShowSaveBillingDialog={props.doShowSaveConfirmDialog}\r\n                                        // doSavePayables={props.doSavePayables}\r\n                                        store={props.store}\r\n                                        doUpdateCurPageable={props.doUpdateCurPageable} />}\r\n                </>\r\n        )\r\n}","\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nimport { formatter, INIT_STATUS, StyledTableCell, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\nimport { useAuth } from '../../providers/AuthenticationProvider';\r\nimport { selectConfirmPayables } from '../../api/billing/BillingSlice';\r\n\r\nexport default function SavePayablesConfimationHtml(props) {\r\n  const currConfirmPayables = useSelector(selectConfirmPayables)\r\n\r\n  const [userObj] = useAuth();\r\n  const { reset } = useForm(currConfirmPayables);\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current\r\n  });\r\n\r\n  const { status, setStatus } = useState(INIT_STATUS.INIT_STATUS);\r\n\r\n  useEffect(() => {\r\n    console.log(`[SavePayablesConfimationHtml.useEffect] confirmStore=>`, currConfirmPayables)\r\n    if (status === INIT_STATUS.RESET) {\r\n      reset(currConfirmPayables);\r\n      setStatus(INIT_STATUS.DONE)\r\n    }\r\n    //currConfirmPayables.INIT_STATUS = INIT_STATUS.DONE;\r\n  }, [status])\r\n\r\n  const ConfirmPage = () => {\r\n    return (<>\r\n      {/* <div className={classes.root}>\r\n        <table width=\"100%\" border=\"0\" >\r\n          <tr >\r\n            <th align=\"right\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{currConfirmPayables.entity.firstName + ' ' + currConfirmPayables.entity.lastName}</th>\r\n            <th align=\"right\" width=\"20%\">Invoice Date:</th>\r\n            <th align=\"left\">{currConfirmPayables.invoiceDate}</th>\r\n          </tr>\r\n          <tr >\r\n            <th align=\"right\">Student Id:</th>\r\n            <th align=\"left\">{currConfirmPayables.entity.studentId}</th>\r\n            <th align=\"right\">Level:</th>\r\n            <th align=\"left\">{currConfirmPayables.entity.level.description}</th>\r\n          </tr>\r\n        </table>\r\n      </div> */}\r\n      <Box pb={3}>\r\n        <Paper elevation={3} variant=\"elevation\" >\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={4}>{currConfirmPayables.entity.firstName + ' ' + currConfirmPayables.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}></Grid>\r\n            <Grid item xs={12} sm={4}></Grid>\r\n\r\n            <Grid item xs={12} sm={2}>Student Id</Grid>\r\n            <Grid item xs={12} sm={4}>{currConfirmPayables.entity.studentId}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={4}>{currConfirmPayables.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Box>\r\n      <TableContainer component={Paper} elevation={3} variant=\"elevation\">\r\n        {currConfirmPayables.payables.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {currConfirmPayables.payables.map((row) => <>\r\n                {row.payment > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.payment)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell>\r\n                  {currConfirmPayables.balanceTotal > 0 &&\r\n                    <Typography variant=\"h6\" color=\"textPrimary\">Remaining balance is {formatter.format(currConfirmPayables.balanceTotal)}</Typography>\r\n                  }\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={3}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount is {formatter.format(currConfirmPayables.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n              {currConfirmPayables.invoiceNo && <>\r\n                <StyledTableRow>\r\n                  <StyledTableCell align=\"right\" colSpan={1}><Typography variant=\"h4\" color=\"textPrimary\">Invoice No: </Typography></StyledTableCell>\r\n                  <StyledTableCell align=\"left\" colSpan={2}>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\">{currConfirmPayables.invoiceNo}</Typography>\r\n\r\n                  </StyledTableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n                  </TableCell>\r\n                </ StyledTableRow>\r\n              </>}\r\n            </TableBody>\r\n          </Table>\r\n        }\r\n      </TableContainer>\r\n    </>);\r\n  }\r\n\r\n  const PrintableInvoicePage = () => {\r\n    return (<>\r\n      <div ref={componentRef} className=\"root\">\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userObj.schoolName}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userObj.schoolAddress}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">&nbsp;</th>\r\n          </tr>\r\n\r\n          {/* <th align=\"left\">{(\"0000000000\" + currConfirmPayables.invoiceNo).slice(-10)}</th> */}\r\n          {/* <tr>\r\n            <th align=\"left\" width=\"25%\">Invoice No:</th>\r\n            <th align=\"left\">{currConfirmPayables.invoiceNo}</th>\r\n            <th align=\"left\" width=\"25%\">Invoice Date:</th>\r\n            <th align=\"left\">{currConfirmPayables.invoiceDate}</th>\r\n          </tr> */}\r\n\r\n          <tr>\r\n            <th align=\"left\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{currConfirmPayables.entity.firstName + ' ' + currConfirmPayables.entity.lastName}</th>\r\n            <th align=\"left\" width=\"20%\">Invoice No:</th>\r\n            <th align=\"left\">{currConfirmPayables.invoiceNo}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Student Id:</th>\r\n            <th align=\"left\">{currConfirmPayables.entity.studentId}</th>\r\n            <th align=\"left\">Invoice Date:</th>\r\n            <th align=\"left\">{currConfirmPayables.invoiceDate}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Level:</th>\r\n            <th align=\"left\">{currConfirmPayables.entity.level.description}</th>\r\n            <th align=\"left\"></th>\r\n            <th align=\"left\"></th>\r\n          </tr>\r\n        </table>\r\n        <br />\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th></th>\r\n            <th width=\"25%\" align=\"right\">Total</th>\r\n            <th width=\"25%\" align=\"right\">Balance</th>\r\n            <th width=\"25%\" align=\"right\">Amount Paid</th>\r\n          </tr>\r\n          {currConfirmPayables.payablesByInvoiceNo.map((row) => <>\r\n            {row.paid != 0 &&\r\n              <tr>\r\n                <td align=\"left\">{row.name}</td>\r\n                <td align=\"right\">{formatter.format(row.amount)}</td>\r\n                <td align=\"right\">{formatter.format(row.balance)}</td>\r\n                <td align=\"right\">{formatter.format(row.paid)}</td>\r\n              </tr>\r\n            }\r\n          </>\r\n          )}\r\n          <tr>\r\n            <td></td>\r\n            <td colSpan={4} align=\"right\"><h3>Total Amount Paid: {formatter.format(currConfirmPayables.paymentTotal)}</h3></td>\r\n          </tr>\r\n        </table>\r\n        {/* <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Student Name:</TableCell>\r\n              <TableCell>{currConfirmPayables.entity.firstName + ' ' + currConfirmPayables.entity.lastName} </TableCell>\r\n              <TableCell>{currConfirmPayables.invoiceNo && <>Invoice Date:</>}</TableCell>\r\n              <TableCell>{currConfirmPayables.invoiceNo && <>{currConfirmPayables.invoiceDate}</>}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Student Id:</TableCell>\r\n              <TableCell>{currConfirmPayables.entity.studentId}</TableCell>\r\n              <TableCell>Level:</TableCell>\r\n              <TableCell>{currConfirmPayables.entity.level.description}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n        {currConfirmPayables.payablesByInvoiceNo.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Invoice</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount Paid</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {currConfirmPayables.payablesByInvoiceNo.map((row, i) => <>\r\n                {row.paid > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.paid)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Invoice No: </Typography>\r\n                  <Typography variant=\"h4\" color=\"textPrimary\">{currConfirmPayables.invoiceNo}</Typography>\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount paid is {formatter.format(currConfirmPayables.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        } */}\r\n      </div>\r\n    </>);\r\n  }\r\n  return (<>\r\n    {console.log(`[SavePayablesConfimationHtml.return] confirmStore=>`, currConfirmPayables)}\r\n    <Dialog fullWidth=\"true\" maxWidth=\"md\"\r\n      open={props.open}\r\n      onClose={props.closeDialog}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{!currConfirmPayables.invoiceNo && <Alert severity=\"info\" align=\"right\">{props.title}</Alert>}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {!currConfirmPayables.invoiceNo && <ConfirmPage />}\r\n          {currConfirmPayables.invoiceNo && <PrintableInvoicePage />}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {currConfirmPayables.invoiceNo &&\r\n          <>\r\n            <Button className=\"not-printable\" onClick={handlePrint} variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            <Button className=\"not-printable\" onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />}>Close</Button>\r\n          </>\r\n        }\r\n        {!currConfirmPayables.invoiceNo &&\r\n          <>\r\n            <Button onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />} > Cancel</Button>\r\n            <Button onClick={props.saveDialog} variant=\"contained\" color=\"primary\" autoFocus startIcon={<SaveIcon />} > Save</Button>\r\n          </>\r\n        }\r\n      </DialogActions>\r\n    </Dialog>\r\n  </>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport Utils, { ERROR_CODE, formatter, INIT_STATUS } from '../../api/Utils'\r\n\r\nimport { getListBy, getStudentPayables, save } from '../../api/billing/BillingService'\r\nimport BillingHtmlComponent from './BillingHtmlComponent';\r\nimport SavePayablesConfimationHtml from './SavePayablesConfimationHtml';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\nimport { selectPageable, setPageable, optionsList, selectConfirmPayables, setConfirmPayables } from '../../api/billing/BillingSlice';\r\n\r\nexport default function BillingComponent() {\r\n\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n  const currConfirmPayables = useSelector(selectConfirmPayables)\r\n\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    vertical: 'top',\r\n    horizontal: 'center'\r\n  })\r\n  const { message, open, vertical, horizontal } = snackbar\r\n\r\n  // const optionsList = {\r\n  //   billingSearchBy: [{\r\n  //     id: '1',\r\n  //     value: 'STUDENT_ID',\r\n  //     label: 'Student ID'\r\n  //   }, {\r\n  //     id: '2',\r\n  //     value: 'STUDENT_NAME',\r\n  //     label: 'Student Name'\r\n  //   }]\r\n  // }\r\n  // const [confirmStore, setConfirmStore] = useState({\r\n  //   INIT_STATUS: INIT_STATUS.INIT,\r\n  //   entity: {\r\n  //     studentId: '',\r\n  //     firstName: '',\r\n  //     lastName: '',\r\n  //     level: {\r\n  //       id: '',\r\n  //       value: '',\r\n  //       description: ''\r\n  //     }\r\n  //   },\r\n  //   payables: [],\r\n  //   payablesByInvoiceNo: [],\r\n  //   open: false\r\n  // })\r\n\r\n  // const [store, setStore] = useState({\r\n  //   INIT_STATUS: (props.match.params.id ? INIT_STATUS.PAYABLES : INIT_STATUS.INIT),\r\n  //   searchFlag: (props.match.params.id ? false : true),\r\n  //   payablesFlag: (props.match.params.id ? true : false),\r\n  //   list: [],\r\n  //   searchValue: '',\r\n  //   searchBy: 'STUDENT_ID',\r\n  //   entity: {\r\n  //     studentId: '',\r\n  //     firstName: '',\r\n  //     lastName: '',\r\n  //     level: {\r\n  //       id: '',\r\n  //       value: '',\r\n  //       description: ''\r\n  //     }\r\n  //   },\r\n  //   studentPayables: {\r\n  //     invoiceNo: '',\r\n  //     payables: [\r\n  //       {\r\n  //         \"id\": null,\r\n  //         \"invoiceNo\": null,\r\n  //         \"code\": \"no_data\",\r\n  //         \"name\": \"NO DATA\",\r\n  //         \"amount\": 0,\r\n  //         \"payment\": 0.0,\r\n  //         \"order\": 0,\r\n  //         \"student\": null,\r\n  //         \"createdDate\": null,\r\n  //         \"lastModifiedDate\": null,\r\n  //         \"user\": null,\r\n  //         \"balance\": 0.0,\r\n  //         \"paid\": 0\r\n  //       }],\r\n  //     payablesByInvoiceNo: [\r\n  //       {\r\n  //         \"id\": null,\r\n  //         \"invoiceNo\": null,\r\n  //         \"code\": \"no_data\",\r\n  //         \"name\": \"NO DATA\",\r\n  //         \"amount\": 0,\r\n  //         \"payment\": 0.0,\r\n  //         \"order\": 0,\r\n  //         \"student\": null,\r\n  //         \"createdDate\": null,\r\n  //         \"lastModifiedDate\": null,\r\n  //         \"user\": null,\r\n  //         \"balance\": 0.0,\r\n  //         \"paid\": 0\r\n  //       }]\r\n  //   },\r\n  //   optionsList: optionsList,\r\n  //   paging: {\r\n  //     rowsPerPage: 25,\r\n  //     totalElements: 0,\r\n  //     currentPage: 0\r\n  //   }\r\n  // });\r\n\r\n  const doInitFormData = data => {\r\n    data.optionsList = optionsList;\r\n\r\n    if (!data.currentPage) {\r\n      data.paging = {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0\r\n      };\r\n    }\r\n\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n\r\n    if (!data.studentPayables) {\r\n      data.studentPayables = {\r\n        invoiceNo: '',\r\n        payables: [],\r\n        payablesByInvoiceNo: []\r\n      };\r\n    }\r\n    if (!data.studentPayables.payables) {\r\n      data.studentPayables.payables = [];\r\n    }\r\n    if (!data.studentPayables.payablesByInvoiceNo) {\r\n      data.studentPayables.payablesByInvoiceNo = [];\r\n    }\r\n  }\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[BillingComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n\r\n  const doRetrieve = (data) => {\r\n    console.log(`[BillingComponent.doRetrieve] data==>`, data)\r\n    getListBy(data.searchBy, data.searchValue, currPageable.paging.currentPage, currPageable.paging.rowsPerPage)\r\n      .then(response => {\r\n        console.log(`[BillingComponent.doRetrieve BillingService.getListBy] response==>`, response)\r\n        let formData = {\r\n          ...currPageable,\r\n          INIT_STATUS: INIT_STATUS.RESET,\r\n          searchValue: data.searchValue,\r\n          searchBy: data.searchBy,\r\n          searchFlag: true,\r\n          payablesFlag: false,\r\n          list: response.data.content,\r\n          optionsList: optionsList,\r\n          paging: {\r\n            rowsPerPage: response.data.size,\r\n            totalElements: response.data.totalElements,\r\n            currentPage: response.data.pageable.pageNumber,\r\n          }\r\n        }\r\n        doInitFormData(formData);\r\n        dispatch(setPageable(formData))\r\n      })\r\n      .catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doRetrieve', 'BillingService.getListBy'));\r\n  }\r\n\r\n  const onChangeRowsPerPage = (e) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    let data = {\r\n      ...currPageable,\r\n      paging: paging\r\n    }\r\n    dispatch(setPageable(data))\r\n    doRetrieve();\r\n  }\r\n  const onChangePage = (e, newPage) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.currentPage = newPage\r\n\r\n    let data = {\r\n      ...currPageable,\r\n      paging: paging\r\n    }\r\n    dispatch(setPageable(data))\r\n\r\n    doRetrieve({\r\n      searchBy: data.searchBy,\r\n      searchValue: data.searchValue,\r\n      currentPage: data.paging.currentPage,\r\n      rowsPerPage: data.paging.rowsPerPage\r\n    });\r\n  }\r\n\r\n  const doPayables = row => {\r\n    console.log(`[BillingComponent.doPayables] id==>`, row)\r\n    getStudentPayables(row.id).then(response => {\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] response==>`, response)\r\n      let payables = response.data.studentPayables.payables\r\n      payables.map((row) => {\r\n        // let value = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n        row.payment = formatter.format(row.payment)\r\n        return row\r\n      });\r\n      let formData = {\r\n        ...currPageable,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        entity: response.data.student,\r\n        studentPayables: {\r\n          ...response.data.studentPayables,\r\n          payables: payables\r\n        },\r\n        billingByInvoice: {\r\n          ...response.data.billingByInvoice\r\n        },\r\n        searchFlag: false,\r\n        payablesFlag: true\r\n      }\r\n      doInitFormData(formData);\r\n      //setStore(formData);\r\n      dispatch(setPageable(formData))\r\n    }).catch(error => {\r\n      console.error(`[BillingComponent.doPayables BillingService.getStudentPayables] error==>`, error);\r\n      console.error(`[BillingComponent.doPayables BillingService.getStudentPayables] error==>${JSON.stringify(error)}`);\r\n      //showErrorAlert, showInfoAlert, showWarningAlert\r\n      showErrorAlert(error.message);\r\n    });\r\n  }\r\n\r\n  const doShowSaveConfirmDialog = (data) => {\r\n    console.log(`[BillingComponent.doShowSaveConfirmDialog] data==>`, data);\r\n    let paymentTotal = 0;\r\n    let balanceTotal = 0;\r\n    data.payables.map((row) => {\r\n      let balance = row.balance ? row.balance.replaceAll(',', '') : 0\r\n      let payment = row.payment ? row.payment.replaceAll(',', '') : 0\r\n\r\n      row.balance = Number(balance)\r\n      row.payment = Number(payment)\r\n\r\n      balanceTotal += row.balance\r\n      paymentTotal += row.payment\r\n\r\n      return row\r\n    });\r\n\r\n    // doOpenSnackBar({\r\n    //   message: `Total amount is ${paymentTotal}`\r\n    // })\r\n\r\n    if (Number(paymentTotal) == 0) {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 1 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n\r\n      doOpenSnackBar({\r\n        message: `Total amount is ${paymentTotal}`\r\n      })\r\n    } else {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 2 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n      let confirmStoreTemp = {\r\n        ...currConfirmPayables,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        open: true,\r\n        entity: currPageable.entity,\r\n        payables: data.payables,\r\n        payablesByInvoiceNo: [],\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: balanceTotal - paymentTotal,\r\n        invoiceNo: ''\r\n      }\r\n      doInitConfirmStore(confirmStoreTemp);\r\n\r\n      console.log(`[BillingComponent.doSavePayables] confirmStoreTemp==>`, confirmStoreTemp);\r\n      dispatch(setConfirmPayables(confirmStoreTemp));\r\n    }\r\n\r\n  }\r\n  const doConfirmSavePayables = () => {\r\n    console.log(`[BillingComponent.doConfirmSavePayables] confirmStore==>`, currConfirmPayables);\r\n    doSavePayables(currConfirmPayables);\r\n  }\r\n\r\n  const doSavePayables = (data) => {\r\n    console.log(`[BillingComponent.doSavePayables] data==>`, data);\r\n\r\n    save(data.payables, data.entity.id).then(response => {\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] response==>`, response)\r\n      let formData = {\r\n        ...currPageable,\r\n        INIT_STATUS: INIT_STATUS.PAYABLES_RESET,\r\n        entity: response.data.student,\r\n        studentPayables: response.data.studentPayables,\r\n        searchFlag: false,\r\n        payablesFlag: true,\r\n      }\r\n\r\n      doInitFormData(formData);\r\n      dispatch(setPageable(formData));\r\n\r\n      let payablesByInvoiceNo = [\r\n        //...response.data.studentPayables.payablesByInvoiceNo\r\n      ]\r\n      for (const row of response.data.studentPayables.payablesByInvoiceNo) {\r\n        let temp = {\r\n          ...row\r\n        }\r\n        payablesByInvoiceNo.push(temp)\r\n      }\r\n\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      let paymentTotal = 0;\r\n      payablesByInvoiceNo.map((row) => {\r\n        row.paid = Number(row.paid)\r\n        paymentTotal += row.paid\r\n        return row\r\n      })\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      dispatch(setConfirmPayables({\r\n        ...currConfirmPayables,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        payables: [],\r\n        invoiceDate: moment(response.data.studentPayables.invoiceDate).format('lll'),\r\n        invoiceNo: response.data.studentPayables.invoiceNo,\r\n        payablesByInvoiceNo: payablesByInvoiceNo,\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: 0\r\n      }));\r\n      // close dialog\r\n      // setConfirmStore({\r\n      //   ...confirmStore,\r\n      //   payables: [],\r\n      //   open: false,\r\n      //   total: formatter.format(0),\r\n      //   balanceTotal: formatter.format(0)\r\n      // });\r\n\r\n      doOpenSnackBar({\r\n        message: 'Payables saved successfully!'\r\n      })\r\n    })\r\n  }\r\n  const doCloseSaveBillingDialog = () => {\r\n    let confirmStoreTemp = {\r\n      ...currConfirmPayables,\r\n      open: false\r\n    }\r\n    dispatch(setConfirmPayables(confirmStoreTemp));\r\n  }\r\n\r\n  const doInitConfirmStore = data => {\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n    if (!data.payables) {\r\n      data.payables = [];\r\n    }\r\n  }\r\n\r\n  const doOpenSnackBar = (state) => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: true,\r\n      ...state\r\n    })\r\n  }\r\n  const doCloseSnackbar = () => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: false,\r\n      message: ''\r\n    })\r\n  }\r\n\r\n  const doUpdateCurPageable = (data) => {\r\n    dispatch(setPageable({\r\n      ...currPageable,\r\n      data\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BillingHtmlComponent\r\n        store={currPageable}\r\n        doRetrieve={doRetrieve}\r\n        doPayables={doPayables}\r\n        onChangePage={onChangePage}\r\n        onChangeRowsPerPage={onChangeRowsPerPage}\r\n        doShowSaveConfirmDialog={doShowSaveConfirmDialog}\r\n        doSavePayables={doSavePayables}\r\n        doUpdateCurPageable={doUpdateCurPageable}\r\n\r\n      />\r\n      <SavePayablesConfimationHtml\r\n        confirmStore={currConfirmPayables}\r\n        title=\"Please click save button to confirm.\"\r\n        open={currConfirmPayables.open}\r\n        closeDialog={doCloseSaveBillingDialog}\r\n        saveDialog={doConfirmSavePayables} />\r\n      {/* <SaveBillingDialog title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        <SavePayablesConfimationHtml confirmStore={confirmStore}/>\r\n      </SaveBillingDialog> */}\r\n\r\n\r\n      <Snackbar open={open}\r\n        autoHideDuration={6000}\r\n        onClose={doCloseSnackbar}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n      >\r\n        <Alert onClose={doCloseSnackbar} severity=\"success\">\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from \"../Utils\";\r\n\r\nexport const getListBy = (by, searchValue, page, pageSize) => axios.get(`${API_URL_BASE}billing/search/${by}?searchValue=${searchValue}&page=${page}&size=${pageSize}`)\r\n\r\nexport const getStudentPayables = (id) => axios.get(`${API_URL_BASE}billing/payables/${id}`)\r\n\r\nexport const save = (data, id) => axios.post(`${Utils.urlSavePattern('billing')}/${id}`, data)\r\n\r\nexport default function BillingService() {\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from \"../Utils\";\r\n\r\n\r\nexport const ENTITY = \"accountPayablesSettings\";\r\nconst sort = \"priority,description,amount\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport const getActiveList = (searchValue, page, pageSize) => axios.get(`${API_URL_BASE + ENTITY + \"/active\"}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`)\r\nexport const getApplyToAllList = () => axios.get(`${API_URL_BASE + ENTITY + \"/applyToAllList\"}`)\r\n\r\nexport default function AccountPayablesSettingsService() {\r\n}\r\n\r\n// class AccountPayablesSettingsService {\r\n\r\n//  getList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description, amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  get = (id) => {\r\n//   const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  delete = (id) => {\r\n//   const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\r\n//   return axios.delete(theurl);\r\n//  }\r\n//  save = (data) => {\r\n//   const theurl = `${Utils.urlSavePattern(ENTITY)}`\r\n//   return axios.post(theurl, data);\r\n//  }\r\n//  getActiveList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/active\"}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  getApplyToAllList = () => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/applyToAllList\"}`\r\n//   return axios.get(theurl);\r\n//  }\r\n// }\r\n\r\n// export default new AccountPayablesSettingsService();\r\n\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport { selectPageable, setPageable, setSelectedItem } from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function AccountPayablesSettingsListComponent(props) {\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => dispatch(setPageable({\r\n      INIT_STATUS: INIT_STATUS.LOAD,\r\n      list: data.pagingList.content,\r\n      searchValue: searchValue,\r\n      paging: {\r\n        rowsPerPage: data.pagingList.size,\r\n        currentPage: data.pagingList.pageable.pageNumber,\r\n        totalElements: data.pagingList.totalElements,\r\n        totalPage: data.pagingList.totalPage\r\n      }\r\n    })))\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod.description;\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    },\r\n    {\r\n      field: 'applyToAll',\r\n      headerName: 'Apply To All',\r\n      render: function (row) {\r\n        return row.applyToAll ? 'Y' : 'N';\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N';\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Accounts Payables Settings List</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      >\r\n\r\n        {/* <Box pb={1}> Filter by: </Box> */}\r\n\r\n      </CustomTableGrid>\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, MenuItem, TextField, Typography } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nimport { selectSelectedItem, resetSelectedItem, setPageableEntity, setOptionsList } from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport { save, getOptions } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nlet renderCount = 0;\r\n\r\nexport default function AccountPayablesSettingsDetailComponent(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { control, register, handleSubmit } = useForm({\r\n    'id': '',\r\n    'description': 'test',\r\n    'paymentPeriod': { 'id': '' },\r\n    'amount': 0,\r\n    'priority': 1,\r\n    'applyToAll': true,\r\n    'active': false\r\n  });\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setMessage('');\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n    if (status === INIT_STATUS.LOAD) {\r\n      onRetrieve()\r\n      setStatus(INIT_STATUS.DONE)\r\n    }\r\n  }, [selectedItem, status]);\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[AccountPayablesSettingsDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    setMessage(`Loading. Please wait...`);\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    getOptions()\r\n      .then(response => dispatch(setOptionsList(response.data.listService)))\r\n      .then(setMessage(``))\r\n      .catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsDetailComponent.onRetrieve', 'AccountPayablesSettingsService.getOptions'));\r\n  }\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => setMessage(Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName))\r\n\r\n  const doSave = data => save(data)\r\n    .then(response => dispatch(setPageableEntity(response.data.entity)))\r\n    .then(history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST))\r\n    .catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'))\r\n\r\n  renderCount++;\r\n  return (\r\n    <>\r\n      {console.log(`[AccountPayablesSettingsDetailComponent.render] renderCount=${renderCount} selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Account Payables Settings Details</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-description\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"paymentPeriod\"\r\n                  required\r\n                  select\r\n                  label=\"Payment Period\"\r\n                  fullWidth\r\n                  autoComplete=\"paymentPeriod\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.paymentPeriodList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"paymentPeriod.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.paymentPeriod.id}\r\n              options={selectedItem.optionsList.paymentPeriodList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"Priority\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-priority\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              label=\"Amount\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-amount\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.amount}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"applyToAll\"\r\n                  required\r\n                  select\r\n                  label=\"Applicable to All\"\r\n                  fullWidth\r\n                  autoComplete=\"applyToAll\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\r\n                  <MenuItem key={2} value={false}>No</MenuItem>\r\n                </TextField>\r\n              }\r\n              name=\"applyToAll\"\r\n              control={control}\r\n              defaultValue={selectedItem.applyToAll}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"active\"\r\n                  required\r\n                  select\r\n                  label=\"Active\"\r\n                  fullWidth\r\n                  autoComplete=\"active\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\r\n                  <MenuItem key={2} value={false}>No</MenuItem>\r\n                </TextField>\r\n              }\r\n              name=\"active\"\r\n              control={control}\r\n              defaultValue={selectedItem.active}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nexport const ENTITY = \"gradeLevelPayables\";\r\nconst sort = \"priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function GradeLevelPayablesService() {\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { deleteItem, getList } from '../../api/gradeLevelPayables/GradeLevelPayablesService';\r\nimport { selectPageable, setPageable, setSelectedItem, resetSelectedItem } from '../../api/gradeLevelPayables/GradeLevelSlice';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function GradeLevelPayablesListComponent(props) {\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const cols = [\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return row.level.description\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N'\r\n      }\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        console.log(`[GradeLevelPayablesListComponent.retrieve] data=`, data)\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.retrieve', 'GradeLevelPayablesService.getList'))\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[GradeLevelPayablesListComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.doDelete', 'GradeLevelPayablesService.deleteItem'))\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Grade Level Payables List</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        // list={this.state.list}\r\n        // searchValue={this.state.searchValue}\r\n        // paging={this.state.paging}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { getActiveList } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\nimport Utils, { ERROR_CODE } from '../../api/Utils';\r\n\r\nexport default function GradeLevelAccountPayablesSettingsListComponent(props) {\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n  const [store, setStore] = useState({\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n      rowsPerPage: 25,\r\n      totalElements: 0,\r\n      currentPage: 0\r\n    }\r\n  });\r\n\r\n  const doRetrieve = () => getActiveList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\r\n    .then(response => {\r\n      let data = {\r\n        list: response.data.pagingList.content,\r\n        searchValue: store.searchValue,\r\n        paging: {\r\n          rowsPerPage: response.data.pagingList.size,\r\n          currentPage: response.data.pagingList.pageable.pageNumber,\r\n          totalElements: response.data.pagingList.totalElements,\r\n          totalPage: response.data.pagingList.totalPage\r\n        }\r\n      }\r\n      setStore(data);\r\n    }).catch(error => setError(error, ERROR_CODE.LIST_ERROR, 'GradeLevelAccountPayablesSettingsListComponent.retrieve', 'AccountPayablesSettingsService.getActiveList'))\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[GradeLevelAccountPayablesSettingsListComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.currentPage = newPage\r\n    setStore(data);\r\n\r\n    doRetrieve();\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    setStore(data)\r\n    doRetrieve();\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    store.searchValue = searchValue\r\n    doRetrieve();\r\n  }\r\n  const doAddItem = (row) => {\r\n    props.setGradeLevelPayables(row);\r\n  }\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Add',\r\n      render: function (row) {\r\n        return (<IconButton aria-label=\"add\" onClick={() => doAddItem(row)}>\r\n          <AddIcon fontSize=\"large\" />\r\n        </IconButton>);\r\n      }\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod.description;\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CustomTableGrid\r\n        store={store}\r\n        cols={cols}\r\n        showAction={false}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Grid, MenuItem, TextField } from \"@material-ui/core\";\r\n\r\nexport default function SelectGrid({ sm, name, label, options, ...rest }) {\r\n return (<>\r\n  <Grid item xs={12} sm={sm}>\r\n   <TextField id={name}\r\n    select\r\n    name={name}\r\n    label={label}\r\n    variant=\"filled\"\r\n    fullWidth\r\n    InputLabelProps={{ shrink: true }}\r\n    autoComplete={label + \"-\" + name}\r\n    {...rest}\r\n   >\r\n    {options.map(({ id, description }) => (\r\n     <MenuItem key={id} value={id}>{description}</MenuItem>\r\n    ))}\r\n   </TextField>\r\n  </Grid>\r\n </>)\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Box, Button, Checkbox, FormControlLabel, FormGroup, Grid, IconButton } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport GradeLevelAccountPayablesSettingsListComponent from './GradeLevelAccountPayablesSettingsListComponent'\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\nimport SelectGrid from '../common/SelectGrid';\r\nimport { save, getOptions } from '../../api/gradeLevelPayables/GradeLevelPayablesService';\r\nimport { selectSelectedItem, setOptionsList, updateSelectedItem, resetSelectedItem, setPageableEntity } from '../../api/gradeLevelPayables/GradeLevelSlice';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nlet renderCount = 0;\r\n\r\nexport default function GradeLevelPayablesDetailsComponent(props) {\r\n  const [, , showErrorAlert, ,] = useGlobalVariable();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      setMessage('Loading. Please wait...');\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    } else if (status === INIT_STATUS.LOAD) {\r\n      onRetrieve()\r\n      setStatus(INIT_STATUS.RESET)\r\n      setMessage('');\r\n    }\r\n\r\n  }, [selectedItem, status]);\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target\r\n\r\n    console.log(`[GradeLevelPayablesDetailsComponent.handleCheckboxChange] name=${name}, checked=${checked}`)\r\n    dispatch(updateSelectedItem({\r\n      [name]: checked\r\n    }))\r\n  };\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    setMessage(`Loading. Please wait...`);\r\n    if (props.match.params.id === -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    getOptions().then(response => onRetrieveResponseAction(response))\r\n      .catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'GradeLevelPayablesDetailsComponent.onRetrieve', 'GradeLevelPayablesService.getOptions'));\r\n  }\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    console.error(`[EndUserDetailComponent.setError]  error=`, error)\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n    showErrorAlert(errMsg)\r\n  }\r\n\r\n\r\n  const onRetrieveResponseAction = (response) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.onRetrieveResponseAction]  response==>`, response)\r\n    dispatch(setOptionsList(response.data.listService))\r\n    setMessage(``);\r\n  }\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(``);\r\n    save({\r\n      id: selectedItem.id,\r\n      level: selectedItem.level,\r\n      period: selectedItem.period,\r\n      active: selectedItem.active,\r\n      accountPayablesSettings: selectedItem.list\r\n    })\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)\r\n      })\r\n      .catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'GradeLevelPayablesDetailsComponent.onSubmitForm', 'GradeLevelPayablesService.save'));\r\n  }\r\n\r\n  const setGradeLevelPayables = (data) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.setGradeLevelPayables] data==>`, data)\r\n\r\n    let list = [...selectedItem.list]\r\n    if (list.filter(row => row.id === data.id).length === 0) {\r\n      let temp = {\r\n        ...data,\r\n        status: 'NEW'\r\n      }\r\n      list.push(temp);\r\n      dispatch(updateSelectedItem({\r\n        list: list\r\n      }))\r\n    }\r\n  }\r\n\r\n  const doDeleteItem = (id) => dispatch(updateSelectedItem({\r\n    list: [...selectedItem.list.filter(item => item.id !== id)]\r\n  }))\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[GradeLevelPayablesDetailsComponent.changeSelectState] name=${name}, value=${value}`)\r\n    dispatch(updateSelectedItem({\r\n      [name]: { id: value }\r\n    }))\r\n  }\r\n\r\n  const GridActionButtons = () => {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={9}>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" href={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const cols = [{\r\n    field: 'description',\r\n    headerName: 'Description',\r\n    render: function (row) {\r\n      return (<>\r\n        {row.status === 'NEW' && <>{row.description} <WarningIcon fontSize=\"small\" /></>}\r\n        {row.status !== 'NEW' && row.description}\r\n      </>);\r\n    }\r\n  },\r\n  {\r\n    headerName: 'Payment Period',\r\n    render: function (row) {\r\n      return row.paymentPeriod.description;\r\n    }\r\n  },\r\n  {\r\n    field: 'amount',\r\n    headerName: 'Amount',\r\n  },\r\n  {\r\n    field: 'priority',\r\n    headerName: 'Priority',\r\n  },\r\n  {\r\n    headerName: 'Action',\r\n    render: function (row) {\r\n      return (<IconButton aria-label=\"add\" onClick={() => doDeleteItem(row.id)}>\r\n        <DeleteIcon fontSize=\"large\" />\r\n      </IconButton>);\r\n    }\r\n  }\r\n  ];\r\n  renderCount++;\r\n  return (\r\n    <>\r\n      {console.log(`[GradeLevelPayablesDetailsComponent.render] renderCount=${renderCount} selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Grade Level Payables</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n\r\n      <form onSubmit={e => onSubmitForm(e)}>\r\n        <GridActionButtons />\r\n\r\n        <Box pb={3}>\r\n          <Grid container spacing={3}>\r\n            <SelectGrid sm={2} name=\"level\" label=\"Level\" value={selectedItem.level.id} options={selectedItem.optionsList.levelList}\r\n              onChange={e => changeSelectState(e)} />\r\n\r\n            <SelectGrid sm={3} name=\"period\" label=\"Period\" value={selectedItem.period.id} options={selectedItem.optionsList.periodList}\r\n              onChange={e => changeSelectState(e)} />\r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <FormGroup aria-label=\"position\" row>\r\n                <FormControlLabel\r\n                  value=\"true\"\r\n                  control={<Checkbox checked={selectedItem.active} onChange={e => handleCheckboxChange(e)} name=\"active\" />}\r\n                  label=\"Active\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </FormGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box py={3}>\r\n          <Box pb={3}>\r\n            <CustomTableGrid\r\n              store={selectedItem}\r\n              cols={cols}\r\n              showAction={false}\r\n              showPaging={false}\r\n              showSearch={false}\r\n            />\r\n          </Box>\r\n          <GridActionButtons />\r\n        </Box>\r\n\r\n        <GradeLevelAccountPayablesSettingsListComponent setGradeLevelPayables={setGradeLevelPayables} />\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useGlobalVariable } from \"../../providers/GlobalVariableProvider\"\r\n\r\nexport default function GlobalAlertMsgDialog(props) {\r\n    const [globalProps, setGlobalProps] = useGlobalVariable();\r\n\r\n    const handleClose = () => {\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            alert: {\r\n                ...globalProps.alert,\r\n                open: false\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth=\"true\" maxWidth=\"md\"\r\n                open={globalProps.alert.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\"><Alert severity={globalProps.alert.severity} align=\"right\">Alert</Alert></DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {globalProps.alert.msg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nimport { PAGE_URL, THEME } from './api/Utils';\r\nimport { useAuth } from './providers/AuthenticationProvider';\r\n\r\nimport ErrorComponent from './api/ErrorComponent'\r\nimport FooterComponent from './forms/common/FooterComponent'\r\n\r\nimport EndUserListComponent from './forms/endUser/EndUserListComponent';\r\nimport EndUserDetailComponent from './forms/endUser/EndUserDetailComponent';\r\nimport AddressListComponent from './forms/address/AddressListComponent';\r\nimport AddressDetailComponent from './forms/address/AddressDetailComponent';\r\n\r\nimport AuthenticatedRoute from './security/AuthenticatedRoute'\r\nimport SignInComponent from './security/SignInComponent';\r\nimport LogoutComponent from './security/LogoutComponent'\r\nimport CodeGroupsListComponent from './forms/codeGroups/CodeGroupsListComponent';\r\nimport CodeGroupsDetailComponent from './forms/codeGroups/CodeGroupsDetailComponent';\r\nimport Dashboard from './forms/dashboard/Dashboard';\r\nimport AppBarComponent from './forms/common/AppBarComponent';\r\nimport StudentDetailComponent from './forms/student/StudentDetailComponent';\r\nimport StudentListComponent from './forms/student/StudentListComponent';\r\nimport SchoolDetailComponent from './forms/school/SchoolDetailComponent';\r\nimport SchoolListComponent from './forms/school/SchoolListComponent';\r\n\r\nimport AuthenticationService from './security/AuthenticationService';\r\nimport BillingComponent from './forms/billing/BillingComponent';\r\n\r\nimport AccountPayablesSettingsListComponent from './forms/accountPayables/AccountPayablesSettingsListComponent';\r\nimport AccountPayablesSettingsDetailComponent from './forms/accountPayables/AccountPayablesSettingsDetailComponent';\r\n\r\nimport GradeLevelPayablesListComponent from './forms/gradeLevelPayables/GradeLevelPayablesListComponent';\r\nimport GradeLevelPayablesDetailsComponent from './forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent';\r\nimport GlobalAlertMsgDialog from './forms/common/GlobalAlertMsgDialog';\r\n\r\nconst useStylesRouting = makeStyles((theme) => ({\r\n root: {\r\n  display: 'flex',\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n container: {\r\n  paddingTop: theme.spacing(4),\r\n  paddingBottom: theme.spacing(4),\r\n },\r\n // content: {\r\n //  backgroundColor:\r\n //   theme.palette.mode === 'light'\r\n //    ? theme.palette.grey[100]\r\n //    : theme.palette.grey[900],\r\n //  flexGrow: 1,\r\n //  height: '100vh',\r\n //  overflow: 'auto',\r\n // },\r\n}));\r\n\r\nconst AppRouting = () => {\r\n\r\n const [userObj, setUserObj] = useAuth();\r\n\r\n useEffect(() => {\r\n  console.log(`[AuthenticationService.useEffect] userObj=>`, userObj)\r\n  initTheme();\r\n\r\n  //initialize user\r\n  setUserObj(AuthenticationService.getLoggedUserObj());\r\n }, []);\r\n\r\n const initTheme = () => {\r\n  const themeDarkMode = localStorage.getItem(THEME.THEME_STORAGE_NAME);\r\n  setDarkMode(themeDarkMode === 'Y' ? true : false);\r\n }\r\n\r\n const [darkMode, setDarkMode] = useState(false);\r\n\r\n const theme = createMuiTheme({\r\n  palette: {\r\n   type: darkMode ? THEME.DARK_MODE : THEME.LIGHT_MODE,\r\n  },\r\n });\r\n const toggleDarkMode = () => {\r\n  setDarkMode(!darkMode);\r\n  localStorage.setItem(THEME.THEME_STORAGE_NAME, !darkMode ? 'Y' : 'N');\r\n }\r\n\r\n // render = () => {\r\n const classes = useStylesRouting();\r\n\r\n return (\r\n  <div className=\"\">\r\n   <MuiThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <Router>\r\n     <div className={classes.root}>\r\n\r\n      <AppBarComponent darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\r\n\r\n      <main className={classes.content}>\r\n       <div className={classes.toolbar} />\r\n\r\n       <GlobalAlertMsgDialog />\r\n\r\n       {/* <Container component=\"main\" className={classes.container}> */}\r\n       <Switch>\r\n        <Route path={PAGE_URL.ROOT} exact component={Dashboard} />\r\n        <Route path={PAGE_URL.INDEX} exact component={Dashboard} />\r\n\r\n        <Route path={PAGE_URL.LOGOUT} component={LogoutComponent} />\r\n        <Route path={PAGE_URL.LOGIN} component={SignInComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.STUDENT_LIST} component={StudentListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL} component={StudentDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL_URL} component={StudentDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING_PAYABLES} exact component={BillingComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING} exact component={BillingComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.USER_LIST} exact component={EndUserListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_DETAIL} exact component={EndUserDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_DETAIL_URL} exact component={EndUserDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.ADDRESS_LIST} exact component={AddressListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ADDRESS_DETAIL} exact component={AddressDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_ADDRESS_DETAIL} exact component={AddressDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_LIST} exact component={CodeGroupsListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL} exact component={CodeGroupsDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL_URL} exact component={CodeGroupsDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_LIST} exact component={SchoolListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL} exact component={SchoolDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL_URL} exact component={SchoolDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST} exact component={AccountPayablesSettingsListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL} exact component={AccountPayablesSettingsDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL} exact component={AccountPayablesSettingsDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_LIST} exact component={GradeLevelPayablesListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL} exact component={GradeLevelPayablesDetailsComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL} exact component={GradeLevelPayablesDetailsComponent} />\r\n\r\n        <Route component={ErrorComponent} />\r\n       </Switch>\r\n       {/* </Container> */}\r\n       <FooterComponent />\r\n      </main>\r\n     </div>\r\n    </Router>\r\n   </MuiThemeProvider>\r\n  </div>\r\n );\r\n // }\r\n}\r\n\r\nexport default AppRouting;","import React from 'react';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { GlobalVariableProvider } from './providers/GlobalVariableProvider';\r\nimport { AuthenticationProvider } from './providers/AuthenticationProvider';\r\nimport store from './api/store';\r\n\r\nimport AppRouting from './AppRouting'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <GlobalVariableProvider>\r\n          <AuthenticationProvider>\r\n            <AppRouting />\r\n          </AuthenticationProvider>\r\n        </GlobalVariableProvider>\r\n      </Provider>\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n  // dev code\r\n  serviceWorker.unregister();\r\n} else {\r\n  // production code\r\n  serviceWorker.register();\r\n}\r\n","\r\nimport { TableCell, TableRow } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport const INIT_STATUS = {\r\n    INIT: 'INIT',\r\n    DONE: 'DONE',\r\n    LOAD: 'LOAD',\r\n    RESET: 'RESET',\r\n    PAYABLES: 'PAYABLES',\r\n    PAYABLES_RESET: 'PAYABLES_RESET'\r\n}\r\n\r\nexport const defaultPageable = {\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0,\r\n        totalPage: 0\r\n    }\r\n}\r\n\r\n\r\nexport const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n});\r\n\r\nexport const USER_TEMP = {\r\n    userName: '',\r\n    userFullName: 'Guest',\r\n    schoolName: 'SARA PROJECT',\r\n    schoolAddress: '',\r\n    schoolLogo: '',\r\n    schoolId: ''\r\n}\r\n// export const URL_BASE = 'http://localhost:8081';\r\nexport const URL_BASE_DEV = 'http://localhost:5000';\r\nexport const URL_BASE = process.env.NODE_ENV === 'development' ? URL_BASE_DEV : '';\r\nexport const AUTH_URL_BASE = URL_BASE + '/auth';\r\nexport const API_URL_BASE = URL_BASE + '/api/';\r\n\r\nexport const URL_LIST = \"/l\";\r\nexport const URL_DELETE = \"/d\";\r\nexport const URL_DETAILS = \"/g\";\r\nexport const URL_OPTIONS = \"/o\";\r\nexport const URL_SAVE = \"/s\";\r\n\r\nexport const AUTH_USER = 'auth/setUser';\r\nexport const AUTH_USER_OBJ = 'auth/setUserObj';\r\nexport const JWT_TOKEN = 'auth/setToken';\r\n\r\nexport const UPDATE_ERROR = 'Error: Unable to update. Please contact system administrator.';\r\nexport const REQUIRED_DESCRIPTION = 'Description is required';\r\nexport const REQUIRED_5_DESCRIPTION = 'Description should be atleast 5 characters';\r\nexport const REQUIRED_TARGET_DATE = 'Target date is required';\r\nexport const THEME = {\r\n    DARK_MODE: 'dark',\r\n    LIGHT_MODE: 'light',\r\n    THEME_STORAGE_NAME: 'THEME_DARK_MODE'\r\n}\r\nexport const PAGE_URL = {\r\n    LOGO_URL: '/r/logo/',\r\n    ROOT: '/',\r\n    INDEX: '/index.html',\r\n    DASHBOARD: '/dashboard',\r\n    LOGOUT: '/logout',\r\n    LOGIN: '/login',\r\n    GRADE_LEVEL_PAYABLES_LIST: '/ui/grade-level-payables-list',\r\n    GRADE_LEVEL_PAYABLES_DETAIL: '/ui/grade-level-payables-detail/:id',\r\n    GRADE_LEVEL_PAYABLES_DETAIL_URL: '/ui/grade-level-payables-detail',\r\n    ACCOUNT_PAYABLES_SETTINGS_LIST: '/ui/account-payables-settings-list',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL: '/ui/account-payables-settings-detail/:id',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL: '/ui/account-payables-settings-detail',\r\n    SCHOOL_LIST: '/ui/school-list',\r\n    SCHOOL_DETAIL: '/ui/school-detail/:id',\r\n    SCHOOL_DETAIL_URL: '/ui/school-detail',\r\n    STUDENT_LIST: '/ui/student-list',\r\n    STUDENT_DETAIL: '/ui/student-detail/:id',\r\n    STUDENT_DETAIL_URL: '/ui/student-detail',\r\n    BILLING: '/ui/billing',\r\n    BILLING_PAYABLES: '/ui/billing/:id',\r\n    BILLING_PAYABLES_URL: '/ui/billing',\r\n    USER_LIST: '/ui/user-list',\r\n    USER_DETAIL: '/ui/user-detail/:id',\r\n    USER_DETAIL_URL: '/ui/user-detail',\r\n    CODE_GROUPS_DETAIL: '/ui/code-groups-detail/:id',\r\n    CODE_GROUPS_DETAIL_URL: '/ui/code-groups-detail',\r\n    CODE_GROUPS_LIST: '/ui/code-groups-list',\r\n    ADDRESS_LIST: '/ui/address-list',\r\n    ADDRESS_DETAIL: '/ui/address-detail/:id',\r\n    USER_ADDRESS_DETAIL: '/ui/address-detail/:id/:refId/:typeId'\r\n}\r\nexport const ERROR_CODE = {\r\n    RETRIEVE_ERROR: '100001',\r\n    SAVE_ERROR: '100002',\r\n    DELETE_ERROR: '100003',\r\n    LIST_ERROR: '100004'\r\n}\r\n\r\nexport const ADDRESS_TYPE = {\r\n    USER: '1',\r\n    STUDENT: '2',\r\n    PARENT: '3'\r\n}\r\nexport const StyledTableHeadRow = withStyles((theme) => ({\r\n    root: {\r\n        fontWeight: \"bold\",\r\n        // '&:nth-of-type(odd)': {\r\n        //     backgroundColor: theme.palette.background,\r\n        // },\r\n    },\r\n    head: {\r\n        // backgroundColor: theme.palette.common.black,\r\n        // color: theme.palette.common.white,\r\n    },\r\n    // body: {\r\n    //     fontSize: 14,\r\n    //     fontWeight: \"bold\",\r\n    // },\r\n}))(TableRow);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        }\r\n    },\r\n}))(TableRow);\r\n\r\nexport const StyledTableHeadCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 16,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 12,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 14,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 20,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nclass Utils {\r\n\r\n    getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.log(`[${formMethod}] ${serviceName} error msg: ${errMsg}`, error);\r\n\r\n        // const errStr = JSON.stringify(error);\r\n\r\n        return errMsg;\r\n    }\r\n    urlListPattern = (entity) => API_URL_BASE + entity + URL_LIST\r\n    urlDeletePattern = (entity) => API_URL_BASE + entity + URL_DELETE\r\n    urlDetailsPattern = (entity) => API_URL_BASE + entity + URL_DETAILS\r\n    urlOptionsPattern = (entity) => API_URL_BASE + entity + URL_OPTIONS\r\n    urlSavePattern = (entity) => API_URL_BASE + entity + URL_SAVE\r\n\r\n    //     handleErrorResponse = (error, comp) => {\r\n    //         const [globalProps, setGlobalProps, showErrorAlert, showInfoAlert, showWarningAlert, showSuccessAlert] = useGlobalVariable();\r\n    //         const errStr = JSON.stringify(error);\r\n    //         console.error(`Utils[][${comp}][ERROR] ${errStr}`)\r\n    //         if (error.status) {\r\n    //             //{\"timestamp\":\"2020-08-24T23:57:30.853+00:00\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"Unauthorized\",\"path\":\"/users/test/todos\"}\r\n    //             console.error(`[Utils][${comp}][ERROR] ${error.status}: ${error.message}`)\r\n    //         } else {\r\n    //             console.error(`[Utils][${comp}][ERROR] ${error.name}: ${error.message}`)\r\n    //             console.error(`[Utils][${comp}][ERROR] stack ${error.stack}`)\r\n    //         }\r\n\r\n    //         //const errorMessage = `${error.name}: ${error.message}`;\r\n    //         //this.handleState('', errorMessage);\r\n    //         //console.error(error);\r\n    //     }\r\n}\r\n\r\nexport default new Utils();"],"sourceRoot":""}