{"version":3,"sources":["api/Utils.js","security/AuthenticationProvider.js","api/ErrorComponent.jsx","forms/common/FooterComponent.jsx","api/endUser/EndUserService.jsx","forms/endUser/EndUserListComponent.jsx","forms/endUser/EndUserDetailHtml.js","forms/endUser/EndUserDetailComponent.jsx","api/address/AddressService.jsx","forms/address/AddressListComponent.jsx","forms/common/TextFormControl.js","security/AuthenticationService.js","forms/address/AddressDetailComponent.jsx","security/AuthenticatedRoute.jsx","forms/common/CSS.js","security/SignInHtml.js","security/SignInComponent.js","security/LogoutComponent.jsx","api/codeGroups/CodeGroupsService.jsx","forms/common/CustomTableGrid.js","forms/codeGroups/CodeGroupsListComponent.js","forms/codeGroups/CodeGroupsDetailComponent.jsx","forms/Dashboard.jsx","forms/common/NestedMenuComponent.js","forms/common/MenuComponent.js","forms/common/AppBarComponent.js","forms/student/StudentDetailHtml.js","api/student/StudentService.jsx","forms/student/StudentDetailComponent.js","forms/student/StudentListComponent.jsx","forms/billing/BillingSearchHtml.js","api/billing/BillingService.jsx","forms/billing/BillingSearchComponent.js","AppRouting.jsx","App.js","serviceWorker.js","index.js"],"names":["USER_TEMP","userName","userFullName","schoolName","schoolLogo","schoolId","API_URL_BASE","AUTH_USER","AUTH_USER_OBJ","JWT_TOKEN","THEME","PAGE_URL","INIT_STATUS","INIT","DONE","LOAD","RESET","PAYABLES","ERROR_CODE","ADDRESS_TYPE","StyledTableHeadRow","withStyles","theme","root","backgroundColor","palette","background","TableRow","StyledTableRow","action","hover","getFormatedErrorMessage","error","errorCode","formMethod","serviceName","errMsg","message","console","log","urlListPattern","entity","urlDeletePattern","urlDetailsPattern","urlSavePattern","handleErrorResponse","comp","errStr","JSON","stringify","status","name","stack","AuthenticationContext","createContext","useAuth","context","useContext","Error","AuthenticationProvider","props","useState","userObj","setUserObj","value","useMemo","Provider","ErrorComponent","render","className","React","Component","Copyright","Box","mx","pt","Divider","Typography","variant","color","align","href","Date","getFullYear","FooterComponent","mt","ENTITY","getList","searchValue","page","pageSize","theurl","Utils","axios","get","id","delete","save","data","post","EndUserListComponent","state","list","paging","rowsPerPage","totalElements","currentPage","componentDidMount","retrieve","EndUserService","then","response","setState","pagingList","content","size","pageable","pageNumber","sort","direction","edit","history","push","handleKeyDown","e","target","key","preventDefault","changeState","handleChangePage","newPage","handleChangeRowsPerPage","pb","Grid","container","spacing","item","xs","sm","FormControl","Input","placeholder","onChange","onKeyDown","endAdornment","onClick","TablePagination","component","count","onChangePage","onChangeRowsPerPage","Table","TableHead","TableCell","IconButton","aria-label","fontSize","TableBody","map","row","firstName","lastName","EndUserDetailHtml","useForm","register","handleSubmit","errors","reset","useHistory","useEffect","store","doRetrieve","entityId","onSubmit","onSubmitForm","Button","type","startIcon","TextField","inputRef","defaultValue","required","label","fullWidth","autoComplete","autoFocus","password","select","school","optionsList","schoolList","MenuItem","EndUserDetailComponent","match","params","setStore","thestate","listService","doCancel","getListByUser","refId","getByRefId","typeId","AddressListComponent","userHistory","hasUser","AddressService","userId","renderPagination","hsize","address1","address2","city","country","zipCode","billTo","shipTo","TextFormControl","margin","myInterceptor","AddressDetailComponent","getBlankDetails","user","routeUrl","changeSelectState","renderOptions","description","cancel","initialize","isUserLoggedIn","jwtTokenHeader","getJwtTokenHeader","setupAxiosInterceptors","setLoggedUserObject","getLoggedUserObj","getBasicAuthHeader","username","auth","executeJwtAuthenticationService","registerJwtSucessfulLogin","jwtToken","sessionStorage","setItem","getJwtToken","getLoginUserName","getItem","parse","logout","interceptors","request","eject","removeItem","authHeader","use","a","config","headers","authorization","AuthenticatedRoute","AuthenticationService","to","useStyles","makeStyles","paddingTop","paddingBottom","login_paper","marginTop","display","flexDirection","alignItems","login_avatar","secondary","main","login_form","width","login_submit","appbar_root","flexGrow","appbar_menuButton","marginRight","appbar_title","breakpoints","up","paddingLeft","appbar_search","position","borderRadius","shape","fade","common","white","marginLeft","appbar_searchIcon","padding","height","pointerEvents","justifyContent","appbar_inputRoot","appbar_inputInput","transition","transitions","create","avatar_40","avatar_70","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","title","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","mode","grey","overflow","payableTableStyles","maxWidth","SignInHtml","classes","Container","Avatar","Alert","severity","formData","onSignon","submit","SignInComponent","setMessage","userDetails","token","LogoutComponent","CustomTableGrid","PAGINATION","doHandleChangePage","doHandleChangeRowsPerPage","doSearch","doHandleKeyDown","cols","headerName","doEdit","field","doDelete","CodeGroupsListComponent","CodeGroupsService","totalPage","CodeGroupsDetailComponent","catch","setError","InputLabelProps","shrink","code","priority","multiline","rows","json","Dashboard","process","src","faker","image","fashion","commerce","productName","random","words","people","food","py","business","transport","sports","paper","nested","NestedMenuComponent","open","setOpen","List","aria-labelledby","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","MenuComponent","anchorEl","setAnchorEl","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","onClose","AppBarComponent","AppBar","Toolbar","edge","noWrap","style","textDecoration","pl","FormControlLabel","control","Switch","checked","darkMode","toggleDarkMode","StudentDetailHtml","initStatus","onRetrieve","storeId","BUTTONS","gutterBottom","lrn","studentId","as","level","studentLevelList","options","birthDate","birthPlace","FormLabel","RadioGroup","Radio","labelPlacement","gender","contactNo","editable","fathersName","mothersName","mothersOccupation","parentCivilStatus","guardianName","StudentDetailComponent","moment","format","fathersOccupation","onSubmitFormResponseAction","onRetrieveResponseAction","onInitFormData","StudentService","StudentListComponent","BillingSearchHtml","counter","setCounter","doPayables","SearchResultsBody","PaginationSection","TableContainer","Paper","PayablesSection","elevation","px","payables","i","regular","colSpan","my","Select","billingSearchBy","m","searchBy","searchFlag","payablesFlag","getListBy","by","getStudentPayables","BillingSearchComponent","doInitFormData","BillingService","student","AppRouting","initTheme","themeDarkMode","localStorage","setDarkMode","createMuiTheme","CssBaseline","path","exact","App","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9cb6dcf1.chunk.js","sourcesContent":["\r\nimport { TableRow } from '@material-ui/core';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const USER_TEMP = {\r\n    userName: '',\r\n    userFullName: 'Guest',\r\n    schoolName: 'SARA PROJECT',\r\n    schoolLogo: '',\r\n    schoolId: ''\r\n}\r\n\r\n// export const URL_BASE = 'http://localhost:8081';\r\nexport const URL_BASE_DEV = 'http://localhost:5000';\r\nexport const URL_BASE = process.env.NODE_ENV === 'development' ? URL_BASE_DEV : '';\r\nexport const AUTH_URL_BASE = URL_BASE + '/auth';\r\nexport const API_URL_BASE = URL_BASE + '/api/';\r\n\r\nexport const URL_LIST = \"/l\";\r\nexport const URL_DELETE = \"/d\";\r\nexport const URL_DETAILS = \"/g\";\r\nexport const URL_SAVE = \"/s\";\r\n\r\nexport const AUTH_USER = 'auth/setUser';\r\nexport const AUTH_USER_OBJ = 'auth/setUserObj';\r\nexport const JWT_TOKEN = 'auth/setToken';\r\n\r\nexport const UPDATE_ERROR = 'Error: Unable to update. Please contact system administrator.';\r\nexport const REQUIRED_DESCRIPTION = 'Description is required';\r\nexport const REQUIRED_5_DESCRIPTION = 'Description should be atleast 5 characters';\r\nexport const REQUIRED_TARGET_DATE = 'Target date is required';\r\nexport const THEME = {\r\n    DARK_MODE: 'dark',\r\n    LIGHT_MODE: 'light',\r\n    THEME_STORAGE_NAME: 'THEME_DARK_MODE'\r\n}\r\nexport const PAGE_URL = {\r\n    LOGO_URL: '/r/logo/',\r\n    ROOT: '/',\r\n    INDEX: '/index.html',\r\n    DASHBOARD: '/dashboard',\r\n    LOGOUT: '/logout',\r\n    LOGIN: '/login',\r\n    STUDENT_LIST: '/ui/student-list',\r\n    STUDENT_DETAIL: '/ui/student-detail/:id',\r\n    STUDENT_DETAIL_URL: '/ui/student-detail',\r\n    BILLING: '/ui/billing',\r\n    BILLING_PAYABLES: '/ui/billing/:id',\r\n    BILLING_PAYABLES_URL: '/ui/billing',\r\n    USER_LIST: '/ui/user-list',\r\n    USER_DETAIL: '/ui/user-detail/:id',\r\n    USER_DETAIL_URL: '/ui/user-detail',\r\n    CODE_GROUPS_DETAIL: '/ui/code-groups-detail/:id',\r\n    CODE_GROUPS_DETAIL_URL: '/ui/code-groups-detail',\r\n    CODE_GROUPS_LIST: '/ui/code-groups-list',\r\n    ADDRESS_LIST: '/ui/address-list',\r\n    ADDRESS_DETAIL: '/ui/address-detail/:id',\r\n    USER_ADDRESS_DETAIL: '/ui/address-detail/:id/:refId/:typeId'\r\n}\r\n\r\nexport const INIT_STATUS = {\r\n    INIT: 'INIT',\r\n    DONE: 'DONE',\r\n    LOAD: 'LOAD',\r\n    RESET: 'RESET',\r\n    PAYABLES: 'PAYABLES'\r\n}\r\n\r\nexport const ERROR_CODE = {\r\n    RETRIEVE_ERROR: '100001',\r\n    SAVE_ERROR: '100002',\r\n    DELETE_ERROR: '100003',\r\n    LIST_ERROR: '100004'\r\n}\r\n\r\nexport const ADDRESS_TYPE = {\r\n    USER: '1',\r\n    STUDENT: '2',\r\n    PARENT: '3'\r\n}\r\nexport const StyledTableHeadRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background,\r\n        },\r\n    },\r\n    // head: {\r\n    // backgroundColor: theme.palette.common.white,\r\n    // color: theme.palette.common.white,\r\n    // },\r\n    // body: {\r\n    //     fontSize: 14,\r\n    //     fontWeight: \"bold\",\r\n    // },\r\n}))(TableRow);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n        // fontSize: 20,\r\n        // fontWeight: \"bold\",\r\n    },\r\n}))(TableRow);\r\n\r\n// export const StyledTableCell = withStyles((theme) => ({\r\n//     head: {\r\n//         backgroundColor: theme.palette.common.black,\r\n//         color: theme.palette.common.white,\r\n//     },\r\n//     body: {\r\n//         fontSize: 14,\r\n//     },\r\n// }))(TableCell);\r\n\r\n\r\nclass Utils {\r\n    getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.log(`[${formMethod}] ${serviceName} error msg: ${errMsg}`);\r\n\r\n        // const errStr = JSON.stringify(error);\r\n\r\n        return errMsg;\r\n    }\r\n    urlListPattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_LIST;\r\n    }\r\n    urlDeletePattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_DELETE;\r\n    }\r\n    urlDetailsPattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_DETAILS;\r\n    }\r\n    urlSavePattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_SAVE;\r\n    }\r\n    handleErrorResponse = (error, comp) => {\r\n        const errStr = JSON.stringify(error);\r\n        console.error(`Utils[][${comp}][ERROR] ${errStr}`)\r\n        if (error.status) {\r\n            //{\"timestamp\":\"2020-08-24T23:57:30.853+00:00\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"Unauthorized\",\"path\":\"/users/test/todos\"}\r\n            console.error(`[Utils][${comp}][ERROR] ${error.status}: ${error.message}`)\r\n        } else {\r\n            console.error(`[Utils][${comp}][ERROR] ${error.name}: ${error.message}`)\r\n            console.error(`[Utils][${comp}][ERROR] stack ${error.stack}`)\r\n        }\r\n\r\n        //const errorMessage = `${error.name}: ${error.message}`;\r\n        //this.handleState('', errorMessage);\r\n        //console.error(error);\r\n    }\r\n}\r\n\r\nexport default new Utils();","import { USER_TEMP } from '../api/Utils'\r\nimport { createContext, useContext, useMemo, useState } from 'react';\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nfunction useAuth() {\r\n const context = useContext(AuthenticationContext)\r\n if (!context) {\r\n  throw new Error(`useAuth must be used within an AuthenticationProvider`)\r\n }\r\n return context;\r\n}\r\n\r\nfunction AuthenticationProvider(props) {\r\n const [userObj, setUserObj] = useState(USER_TEMP);\r\n\r\n const value = useMemo(() => [userObj, setUserObj], [userObj])\r\n return <AuthenticationContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { AuthenticationProvider, useAuth }\r\n\r\n","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"container\">Oooops!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorComponent;","import { Box, Divider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FooterComponent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nfunction Copyright() {\r\n    return (\r\n        <>\r\n            <Box mx=\"auto\" pt={3}><Divider />\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    <Link color=\"inherit\" href=\"https://material-ui.com/\">Your Website</Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nexport default FooterComponent;","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\nexport const ENTITY = \"user\";\nclass EndUserService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new EndUserService();\n\n\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TablePagination, FormControl, Input, Grid, IconButton, Box } from '@material-ui/core';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport EndUserService from '../../api/endUser/EndUserService';\nimport { PAGE_URL } from '../../api/Utils'\nclass EndUserListComponent extends React.Component {\n  state = {\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  };\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n  retrieve = () => {\n    EndUserService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n      .then(response => {\n        console.log(`[EndUserListComponent.retrieve ] EndUserService.getList response=>`, response)\n        this.setState({\n          list: response.data.pagingList.content,\n          searchValue: response.data.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            totalElements: response.data.pagingList.totalElements,\n            currentPage: response.data.pagingList.pageable.pageNumber,\n            sort: 'title',\n            direction: 'ASC'\n          }\n        })\n      })\n  }\n  edit = (id) => {\n    console.log(`[EndUserListComponent.edit] id=${id}`)\n    this.props.history.push(`${PAGE_URL.USER_DETAIL_URL}/${id}`);\n  }\n  delete = (id) => {\n    console.log(`[EndUserListComponent.delete] id=${id}`)\n    EndUserService.delete(id)\n      .then(response => {\n        console.log(`[EndUserListComponent.delete] response==>`, response)\n        this.retrieve();\n      })\n  }\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.retrieve();\n    }\n  }\n\n  changeState = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  render = () => {\n    return (\n      <>\n        <Box pb={3}><Typography variant=\"h4\">Users</Typography></Box>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <FormControl variant=\"filled\">\n              <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n                onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n                endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TablePagination\n              component=\"div\"\n              count={this.state.paging.totalElements}\n              page={this.state.paging.currentPage}\n              onChangePage={this.handleChangePage}\n              rowsPerPage={this.state.paging.rowsPerPage}\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n          </Grid>\n        </Grid>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>First Name</TableCell>\n              <TableCell>Last Name</TableCell>\n              <TableCell align=\"right\">\n                Action\n                <IconButton aria-label=\"add\" onClick={() => this.edit(-1)}>\n                  <AddIcon fontSize=\"large\" />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.list.map(row => (\n              <TableRow key={row.id}>\n                <TableCell>{row.firstName}</TableCell>\n                <TableCell>{row.lastName}</TableCell>\n\n                <TableCell align=\"right\">\n                  <IconButton aria-label=\"edit\" onClick={() => this.edit(row.id)}>\n                    <EditIcon fontSize=\"large\" />\n                  </IconButton>\n                  <IconButton aria-label=\"delete\" onClick={() => this.delete(row.id)}>\n                    <DeleteIcon fontSize=\"large\" />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </ >\n    );\n  }\n}\n\nexport default EndUserListComponent;\n\n\n","import React, { useEffect } from 'react';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nconst EndUserDetailHtml = props => {\r\n      const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n      const history = useHistory();\r\n\r\n      useEffect(() => {\r\n            // setCounter(counter + 1);\r\n            console.log(`[EndUserDetailHtml.useEffect] props.store=>`, props.store);\r\n            if (props.store.INIT_STATUS === INIT_STATUS.LOAD) {\r\n                  props.doRetrieve(props.store.entityId);\r\n            } if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                  reset(props.store)\r\n            }\r\n      }, [props.store])\r\n\r\n      return (\r\n            <>\r\n                  {console.log(`[EndUserDetailHtml.return] props.store==>`, props.store)}\r\n                  <Typography variant=\"h4\">User Detail</Typography>\r\n\r\n                  <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                        <TextField type=\"hidden\"\r\n                              name=\"id\"\r\n                              inputRef={register}\r\n                              defaultValue={props.store.id}\r\n                        />\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"userName\"\r\n                                          name=\"userName\"\r\n                                          label=\"User Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-userName\"\r\n                                          variant=\"filled\"\r\n                                          autoFocus\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.userName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          id=\"password\"\r\n                                          name=\"password\"\r\n                                          label=\"Password\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-password\"\r\n                                          variant=\"filled\"\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.password}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"firstName\"\r\n                                          name=\"firstName\"\r\n                                          label=\"First Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-firstName\"\r\n                                          variant=\"filled\"\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.firstName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={612}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"lastName\"\r\n                                          name=\"lastName\"\r\n                                          label=\"Last Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-lastName\"\r\n                                          variant=\"filled\"\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.lastName}\r\n                                    />\r\n                              </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                              <TextField id=\"school\"\r\n                                    select\r\n                                    name=\"school.id\"\r\n                                    label=\"School\"\r\n                                    fullWidth\r\n                                    autoComplete=\"user-school\"\r\n                                    variant=\"filled\"\r\n                                    inputRef={register}\r\n                                    defaultValue={props.store.school.id}\r\n                                    error={!!errors.name}\r\n                              >\r\n                                    {props.store.optionsList.schoolList.map(row => (\r\n                                          <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                    ))}\r\n                              </TextField>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                  </form>\r\n            </ >\r\n      );\r\n};\r\n\r\nexport default EndUserDetailHtml;","import React, { useState } from 'react';\n\nimport EndUserService from '../../api/endUser/EndUserService';\nimport EndUserDetailHtml from './EndUserDetailHtml';\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\n\nexport default function EndUserDetailComponent(props) {\n\n  const [store, setStore] = useState({\n    'INIT_STATUS': ((props.match.params.id === -1) ? INIT_STATUS.INIT : INIT_STATUS.LOAD),\n    'school': { 'id': '' },\n    'entityId': props.match.params.id,\n    'id': '',\n    'userName': '',\n    'password': '',\n    'firstName': '',\n    'lastName': '',\n    'optionsList': { schoolList: [] }\n  });\n\n  const getBlankDetails = () => {\n    return {\n      INIT_STATUS: '',\n      'school': { 'id': '' },\n      'id': '',\n      'entityId': props.match.params.id,\n      'userName': '',\n      'password': '',\n      'firstName': '',\n      'lastName': '',\n      'optionsList': { schoolList: [] }\n    }\n  }\n\n  const doRetrieve = () => {\n    console.log(`[EndUserDetailComponent.doRetrieve] id==>${props.match.params.id}`)\n    EndUserService.get(props.match.params.id)\n      .then(response => {\n        console.log(`[EndUserDetailComponent.doRetrieve] response==>`, response)\n        let thestate = getBlankDetails();\n        if (props.match.params.id !== -1) {\n          thestate = response.data.entity;\n        }\n        thestate.INIT_STATUS = INIT_STATUS.RESET;\n        thestate.optionsList = response.data.listService\n        setStore(thestate)\n      });\n  }\n\n  const onSubmitForm = (data) => {\n    console.log(`[EndUserDetailComponent.onSubmitForm] data==>`, data)\n    EndUserService.save(data).then(response => {\n      console.log(`[EndUserDetailComponent.save] response==>`, response)\n      props.history.push(PAGE_URL.USER_LIST);\n    });\n  }\n\n  const doCancel = () => {\n    props.history.push(PAGE_URL.USER_LIST);\n  }\n\n  return (\n    <EndUserDetailHtml store={store}\n      doRetrieve={doRetrieve}\n      onSubmitForm={onSubmitForm}\n      doCancel={doCancel} />\n\n  );\n}\n\n\n","import axios from \"axios\";\nimport Utils, { API_URL_BASE, ADDRESS_TYPE } from '../Utils'\n\nexport const ENTITY = \"address\";\nclass AddressService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n getListByUser = (refId, searchValue) => {\n  const theurl = `${API_URL_BASE}address/by/${refId}?searchValue=${searchValue}`\n  return axios.get(theurl);\n }\n getByRefId = (refId, typeId) => {\n  const theurl = `${API_URL_BASE}address/byRefId/${typeId}/${refId}`//ADDRESS_TYPE\n  return axios.get(theurl);\n }\n}\n\nexport default new AddressService();\n\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableRow, TableCell, Button, TableBody, TablePagination, FormControl, Input, Box } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { StyledTableRow } from '../../api/Utils'\nimport AddressService from '../../api/address/AddressService';\n\nclass AddressListComponent extends React.Component {\n  state = {\n    searchValue: '',\n    list: [],\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  };\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    //this.props.userId\n    console.log('this.props.userHistory=' + this.props.userHistory);\n    if (this.hasUser()) {\n      AddressService.getListByUser(this.props.userId, this.state.searchValue)\n        .then(response => {\n          console.log(`[AddressListComponent AddressService.getListByUser] response=>`, response)\n          this.setState({\n            searchValue: response.data.searchValue,\n            list: response.data.list\n          })\n        })\n    } else {\n      AddressService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n        .then(response => {\n          console.log(`[AddressListComponent AddressService.getList] response=>`, response)\n          this.setState({\n            list: response.data.pagingList.content,\n            searchValue: response.data.searchValue,\n            paging: {\n              rowsPerPage: response.data.pagingList.size,\n              totalElements: response.data.pagingList.totalElements,\n              currentPage: response.data.pagingList.pageable.pageNumber,\n              sort: 'address1',\n              direction: 'ASC'\n            }\n          })\n        })\n    }\n  }\n  edit = (id) => {\n    if (this.hasUser()) {\n      this.props.userHistory.push(`/address-detail/${id}/${this.props.userId}`);\n    } else {\n      this.props.history.push(`/address-detail/${id}`);\n    }\n\n  }\n  delete = (id) => {\n    console.log(`[AddressComponent.delete] id=${id}`)\n    AddressService.delete(id)\n      .then(response => {\n        console.log(`[AddressComponent.delete] response==>`, response)\n        this.retrieve();\n      })\n  }\n\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.retrieve();\n  }\n\n  hasUser = () => {\n    return this.props.userId;\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      console.log(`[MyCaseListComponent.handleKeyDown] searchValue=${this.state.searchValue}`)\n      console.log(`2 [MyCaseListComponent.handleKeyDown] ${e.target.value}, state=>`, this.state)\n      this.retrieve();\n    }\n  }\n\n  renderPagination = () => {\n    if (this.hasUser()) {\n      return (<></>);\n    }\n    return (\n      <TablePagination\n        component=\"div\"\n        count={this.state.paging.totalElements}\n        page={this.state.paging.currentPage}\n        onChangePage={this.handleChangePage}\n        rowsPerPage={this.state.paging.rowsPerPage}\n        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n      />\n    )\n  }\n\n  render = () => {\n    let hsize = 'h4';\n    if (this.hasUser()) {\n      hsize = 'h5';\n    }\n    return (\n      <div className=\"container\">\n\n        <Box pb={3}><Typography variant={hsize}>Address</Typography></Box>\n        <div className=\"text-right\">\n          <FormControl variant=\"filled\">\n            <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n              onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n              endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\n            />\n          </FormControl>\n        </div>\n        {this.renderPagination()}\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Address</TableCell>\n              <TableCell>Is Billing?</TableCell>\n              <TableCell>Is Shipping?</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {\n              this.state.list.map(row => (\n                <StyledTableRow key={row.id}>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>\n                    <div>{row.address1}</div>\n                    <div>{row.address2}</div>\n                    <div>{row.city}, {row.state} {row.country} {row.zipCode}</div>\n                  </TableCell>\n                  <TableCell>{row.billTo}</TableCell>\n                  <TableCell>{row.shipTo}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(row.id)}>Edit</Button>&nbsp;\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.delete(row.id)}>Delete</Button>\n                  </TableCell>\n                </StyledTableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n        {this.renderPagination()}\n      </div >\n    );\n  }\n}\n\nexport default AddressListComponent;\n\n\n","\r\nimport React from 'react';\r\nimport { FormControl, TextField } from '@material-ui/core';\r\n\r\nexport default function TextFormControl(props) {\r\n\r\n  return (\r\n    <FormControl fullWidth margin=\"normal\" >\r\n      { props.type === 'hidden' &&\r\n        <input\r\n          type={props.type}\r\n          name={props.name} value={props.value} />\r\n      }\r\n      {props.type !== 'hidden' &&\r\n        <>\r\n          {/* <InputLabel htmlFor={props.name + 'id'}>{props.label}</InputLabel>\r\n          <TextField labelId={props.name + 'id'} placeholder={\"Enter \" + props.label} */}\r\n          <TextField label={props.label} placeholder={\"Enter \" + props.label}\r\n            type={props.type ? props.type : \"text\"}\r\n            name={props.name} value={props.value}\r\n            onChange={(e) => props.changeState(e)} />\r\n        </>\r\n      }\r\n    </FormControl >\r\n  );\r\n}\r\n\r\n\r\n// export default class TextFormControl extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n//   render = () => {\r\n//     if (this.props.type == 'hidden') {\r\n//       return (\r\n//         <TextField\r\n//           type={this.props.type}\r\n//           name={this.props.name} value={this.props.value} />\r\n//       );\r\n//     }\r\n//     return (\r\n//       <FormControl fullWidth margin=\"normal\" >\r\n//         <TextField label={this.props.label} placeholder={\"Enter \" + this.props.label}\r\n//           type={this.props.type ? this.props.type : \"text\"}\r\n//           name={this.props.name} value={this.props.value}\r\n//           onChange={(e) => this.props.changeState(e)} />\r\n//       </FormControl>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { AUTH_URL_BASE, AUTH_USER, AUTH_USER_OBJ, JWT_TOKEN } from '../api/Utils.js'\r\n\r\n\r\nlet myInterceptor\r\n\r\nclass AuthenticationService extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.initialize();\r\n        console.log('[AuthenticationService.constructor] done')\r\n    }\r\n\r\n    initialize = () => {\r\n        if (this.isUserLoggedIn()) {\r\n            let jwtTokenHeader = this.getJwtTokenHeader()\r\n            this.setupAxiosInterceptors(jwtTokenHeader);\r\n        }\r\n    }\r\n    setLoggedUserObject = () => {\r\n        if (this.isUserLoggedIn()) {\r\n            this.setState({\r\n                userObj: this.getLoggedUserObj()\r\n            });\r\n            console.log('[AuthenticationService.setLoggedUserObject] this.state.userObj=>', this.state.userObj);\r\n        }\r\n    }\r\n\r\n    // executeBasicAuthenticationService = (username, password) => {\r\n    //     const theurl = `${URL_BASE}/basicauth`\r\n    //     return axios.get(theurl, Utils.getBasicAuthHeader(username, password));\r\n    // }\r\n\r\n    getBasicAuthHeader = (username, password) => {\r\n        return {\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            }\r\n        };\r\n    }\r\n\r\n    executeJwtAuthenticationService = (username, password) => {\r\n        const theurl = `${AUTH_URL_BASE}`\r\n        //console.log(`[AuthenticationService.executeJwtAuthenticationService] theurl=${theurl}`);\r\n        return axios.post(theurl, { username, password });\r\n    }\r\n\r\n    // registerBasicAuthSucessfulLogin = (username, password) => {\r\n    //     //console.log('[AuthenticationService.registerSucessfulLogin] init');\r\n    //     sessionStorage.setItem(AUTH_USER, username);\r\n\r\n    //     let basicAuthHeader = 'Basic ' + window.btoa(username + ':' + password);\r\n    //     this.setupAxiosInterceptors(basicAuthHeader);\r\n    // }\r\n\r\n    registerJwtSucessfulLogin = (userObj, jwtToken) => {\r\n        console.log('[AuthenticationService.registerJwtSucessfulLogin] init');\r\n        sessionStorage.setItem(AUTH_USER_OBJ, JSON.stringify(userObj));\r\n        sessionStorage.setItem(AUTH_USER, userObj.userName);\r\n        sessionStorage.setItem(JWT_TOKEN, jwtToken);\r\n\r\n        this.setState({\r\n            userObj: userObj\r\n        });\r\n\r\n        let jwtTokenHeader = this.getJwtTokenHeader()\r\n        this.setupAxiosInterceptors(jwtTokenHeader);\r\n    }\r\n\r\n    getJwtTokenHeader = () => {\r\n        let jwtToken = this.getJwtToken();\r\n        let jwtTokenHeader = `Bearer ${jwtToken}`;\r\n        return jwtTokenHeader;\r\n    }\r\n\r\n    getLoginUserName = () => {\r\n        let user = sessionStorage.getItem(AUTH_USER);\r\n        return user;\r\n    }\r\n\r\n    getLoggedUserObj = () => {\r\n        let user = JSON.parse(sessionStorage.getItem(AUTH_USER_OBJ));\r\n        console.log('[AuthenticationService.getLoggedUserObj] 1 user=>', user);\r\n        if (!user) {\r\n            user = {\r\n                userName: '',\r\n                userFullName: 'Guest',\r\n                schoolName: '',\r\n                schoolLogo: ''\r\n            }\r\n        }\r\n        console.log('[AuthenticationService.getLoggedUserObj] 2 user=>', user);\r\n        return user;\r\n        // return {}\r\n    }\r\n\r\n    getJwtToken = () => {\r\n        let jwtToken = sessionStorage.getItem(JWT_TOKEN);\r\n        return jwtToken;\r\n    }\r\n\r\n    logout = () => {\r\n        axios.interceptors.request.eject(myInterceptor);\r\n        sessionStorage.removeItem(AUTH_USER);\r\n        sessionStorage.removeItem(AUTH_USER_OBJ);\r\n        sessionStorage.removeItem(JWT_TOKEN);\r\n    }\r\n\r\n    isUserLoggedIn = () => {\r\n        let user = this.getLoginUserName();\r\n        return (user != null);\r\n    }\r\n\r\n    setupAxiosInterceptors = (authHeader) => {\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] init..');\r\n        console.log(`[AuthenticationService.setupAxiosInterceptors] authHeader: ${authHeader}`);\r\n        myInterceptor = axios.interceptors.request.use(\r\n            async config => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = authHeader;\r\n                }\r\n                return config;\r\n            }\r\n        );\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] done!');\r\n    }\r\n}\r\nexport default new AuthenticationService();","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { MenuItem, Button, FormControl } from '@material-ui/core';\n\nimport AddressService from '../../api/address/AddressService';\nimport TextFormControl from '../common/TextFormControl';\nimport { ADDRESS_TYPE, PAGE_URL } from '../../api/Utils'\n\nexport default class AddressDetailComponent extends React.Component {\n  state = {\n    \"id\": '',\n    \"userId\": '',\n    \"user\": { id: \"\", firstName: \"\", lastName: \"\" },\n    \"name\": \"\",\n    \"address1\": \"\",\n    \"address2\": \"\",\n    \"city\": \"\",\n    \"state\": \"\",\n    \"country\": \"\",\n    \"zipCode\": \"\",\n    \"billTo\": \"\",\n    \"shipTo\": \"\"\n  };\n\n  getBlankDetails = () => {\n\n    return {\n      \"id\": '',\n      \"userId\": '',\n      \"user\": { id: \"\", firstName: \"\", lastName: \"\" },\n      \"name\": \"\",\n      \"address1\": \"\",\n      \"address2\": \"\",\n      \"city\": \"\",\n      \"state\": \"\",\n      \"country\": \"\",\n      \"zipCode\": \"\",\n      \"billTo\": \"\",\n      \"shipTo\": \"\"\n    }\n  }\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    console.log(`[AddressDetailComponent.retrieve] id=${this.props.match.params.id}, userId=${this.props.match.params.refId}`);\n    let thestate = this.getBlankDetails();\n    if (this.props.match.params.id !== -1 && this.props.match.params.refId) {\n      AddressService.getByRefId(this.props.match.params.refId, this.props.match.params.typeId)\n        .then(response => {\n          console.log(`[AddressDetailComponent.retrieve AddressService.getByRefId] response=>`, response);\n          thestate = response.data.entity;\n          console.log(`[AddressDetailComponent.retrieve AddressService.getByRefId] thestate.user=>`, thestate.user);\n          thestate.userId = thestate.user.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    } else {\n      AddressService.get(this.props.match.params.id)\n        .then(response => {\n          console.log(`[AddressDetailComponent.retrieve AddressService.get] response=>`, response);\n          thestate = response.data.entity;\n          thestate.userId = thestate.user.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    }\n  }\n\n  save = () => {\n    AddressService.save({\n      refId: this.state.userId,\n      name: this.state.name,\n      address1: this.state.address1,\n      address2: this.state.address2,\n      city: this.state.city,\n      state: this.state.state,\n      country: this.state.country,\n      zipCode: this.state.zipCode,\n      billTo: this.state.billTo,\n      shipTo: this.state.shipTo,\n      id: this.state.id\n    }).then(() => {\n      let routeUrl = PAGE_URL.ADDRESS_LIST;\n      let userId = this.props.match.params.refId\n      if (userId) {\n        routeUrl = `${PAGE_URL.USER_DETAIL_URL}${userId}`\n      }\n      this.props.history.push(routeUrl);\n    })\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  changeSelectState = (e) => {\n    this.setState({\n      [e.target.name]: { \"id\": e.target.value }\n    })\n  }\n\n  renderOptions = (optionsList) => {\n    return (optionsList.map(row => (\n      <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\n    )))\n  }\n\n  cancel = () => {\n    console.log(`[AddressDetailComponent.cancel] userId=${this.props.match.params.refId}`);\n    if (this.props.match.params.refId && this.props.match.params.typeId === ADDRESS_TYPE.USER) {\n      this.props.history.push(`${PAGE_URL.USER_DETAIL_URL}/${this.props.match.params.refId}`)\n    } else {\n      this.props.history.push(PAGE_URL.ADDRESS_LIST)\n    }\n  }\n\n\n  render = () => {\n    return (\n      <>\n        <Typography variant=\"h4\">Address Detail</Typography>\n        <form>\n          <FormControl fullWidth margin=\"normal\">\n            <span>End User: {this.state.user.lastName}, {this.state.user.firstName}</span>\n            <input name=\"userId\" type=\"hidden\" value={this.state.userId} />\n          </FormControl>\n\n          <TextFormControl label=\"Name\"\n            name=\"name\" value={this.state.name}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 1\"\n            name=\"address1\" value={this.state.address1}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 2\"\n            name=\"address2\" value={this.state.address2}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"City\"\n            name=\"city\" value={this.state.city}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"State\"\n            name=\"state\" value={this.state.state}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Country\"\n            name=\"country\" value={this.state.country}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Zip Code\"\n            name=\"zipCode\" value={this.state.zipCode}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Billing?\"\n            name=\"billTo\" value={this.state.billTo}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Shipping?\"\n            name=\"shipTo\" value={this.state.shipTo}\n            changeState={this.changeState} />\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.save()}>Save</Button>&nbsp;\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.cancel()}>Cancel</Button>\n        </form>\n\n      </ >\n    );\n  }\n}\n\n\n","import React from 'react';\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nclass AuthenticatedRoute extends React.Component {\r\n    render = () => {\r\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        //console.log(`[AuthenticatedRoute]: isUserLoggedIn ${isUserLoggedIn}`);\r\n        if (isUserLoggedIn) {\r\n            return <Route {...this.props} />;\r\n        } else {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n    }\r\n}\r\nexport default AuthenticatedRoute;","\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    login_paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    login_avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    login_form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login_submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n    appbar_root: {\r\n        flexGrow: 1,\r\n    },\r\n    appbar_menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    appbar_title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n            paddingLeft: theme.spacing(1)\r\n        },\r\n        //backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    appbar_search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    appbar_searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    appbar_inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    appbar_inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    avatar_40: {\r\n        width: theme.spacing(40),\r\n        height: theme.spacing(40),\r\n    },\r\n    avatar_70: {\r\n        width: theme.spacing(70),\r\n        height: theme.spacing(70),\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        backgroundColor:\r\n            theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    payableTableStyles: {\r\n        maxWidth: 700,\r\n    },\r\n}));\r\n\r\nclass CSS {\r\n\r\n}\r\n\r\nexport default new CSS();","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useStyles } from '../forms/common/CSS'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst SignInHtml = props => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  function onSubmitForm(formData) {\r\n    props.onSignon(formData.userName, formData.password);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.login_paper}>\r\n        <Avatar className={classes.login_avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n        <form className={classes.login_form} onSubmit={handleSubmit(onSubmitForm)}>\r\n\r\n          <TextField type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userName\"\r\n            label=\"User Name\"\r\n            name=\"userName\"\r\n            autoComplete=\"userName\"\r\n            autoFocus\r\n            inputRef={register}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignInHtml;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport SignInHtml from './SignInHtml.js';\r\nimport { useAuth } from './AuthenticationProvider';\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\n// import { useForm } from 'react-hook-form';\r\n\r\nexport default function SignInComponent() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [userObj, setUserObj] = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  const onSignon = (userName, password) => {\r\n    setMessage('');\r\n    console.log(`onSubmitPage userName=${userName}, password=${password}`);\r\n\r\n    AuthenticationService.executeJwtAuthenticationService(userName, password)\r\n      //executeBasicAuthenticationService(this.state.username, this.state.password)\r\n      .then(response => {\r\n        console.log('[SignInComponent.onSubmitPage]: response', response);\r\n        AuthenticationService.registerJwtSucessfulLogin(response.data.userDetails, response.data.token)\r\n\r\n        setUserObj(response.data.userDetails);\r\n        console.log('[SignInComponent.onSubmitPage]: userObj', userObj);\r\n\r\n        //registerBasicAuthSucessfulLogin(this.state.username, this.state.password);\r\n        setMessage('Login Successful!');\r\n        history.push(`/`);\r\n\r\n      })\r\n    // .catch(error => {\r\n    //   console.log(`[SignInComponent.onSubmitPage]: error=>`, error);\r\n    //   setMessage('Login in failed. Your User Name and Password do not match.');\r\n    // });\r\n  }\r\n  return (\r\n    <SignInHtml message={message} onSignon={onSignon} />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport { useAuth } from './AuthenticationProvider';\r\nimport { USER_TEMP } from '../api/Utils'\r\n\r\n\r\nexport default function LogoutComponent() {\r\n    const [userObj, setUserObj] = useAuth();\r\n\r\n    useEffect(() => {\r\n        console.log('[SignInComponent.onSubmitPage]: userObj', userObj);\r\n        AuthenticationService.logout();\r\n        setUserObj(USER_TEMP);\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <h1>You are logged out</h1>\r\n            <div className=\"container\">\r\n                Thank you. Come again!\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\n\nexport const ENTITY = \"codeGroups\";\n\nclass CodeGroupsService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=code,priority,description`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new CodeGroupsService();\n\n\n","\r\nimport React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, TablePagination, FormControl, Input, Grid, IconButton } from '@material-ui/core';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { INIT_STATUS, StyledTableRow } from '../../api/Utils'\r\n\r\nexport default function CustomTableGrid(props) {\r\n const { register, reset } = useForm();\r\n\r\n useEffect(() => {\r\n  console.log('==>props.store=>', props.store)\r\n  if (props.store.INIT_STATUS === INIT_STATUS.INIT) {\r\n   props.doRetrieve();\r\n  } else if (props.store.INIT_STATUS === INIT_STATUS.LOAD) {\r\n   reset(props.store);\r\n  }\r\n }, [props.store])\r\n\r\n const doHandleKeyDown = (e) => {\r\n  if (e.key === 'Enter') {\r\n   props.doSearch(e.target.value)\r\n   e.preventDefault();\r\n  }\r\n }\r\n const PAGINATION = () => {\r\n  return (\r\n   <TablePagination\r\n    component=\"div\"\r\n    page={props.store.paging.currentPage}\r\n    count={props.store.paging.totalElements}\r\n    rowsPerPage={props.store.paging.rowsPerPage}\r\n    onChangePage={props.doHandleChangePage}\r\n    onChangeRowsPerPage={props.doHandleChangeRowsPerPage}\r\n   />\r\n  )\r\n }\r\n return (\r\n  <>\r\n   <Grid container spacing={3}>\r\n    <Grid item xs={12} sm={5}>\r\n    </Grid>\r\n    <Grid item xs={12} sm={3}>\r\n     <FormControl variant=\"filled\">\r\n      <Input name=\"searchValue\"\r\n       defaultValue={props.store.searchValue}\r\n       onKeyDown={e => doHandleKeyDown(e)}\r\n       placeholder=\"Search\"\r\n       inputRef={register}\r\n       endAdornment={<SearchIcon onClick={() => props.doRetrieve()} />}\r\n      />\r\n     </FormControl>\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n     <PAGINATION\r\n     />\r\n    </Grid>\r\n\r\n   </Grid>\r\n   <Table>\r\n    <TableHead>\r\n     <TableRow>\r\n      {props.cols.map(params => (\r\n       <>\r\n        <TableCell>{params.headerName}</TableCell>\r\n       </>\r\n      ))}\r\n      <TableCell align=\"right\">\r\n       Action\r\n        <IconButton aria-label=\"add\" onClick={() => props.doEdit(-1)}>\r\n        <AddIcon fontSize=\"large\" />\r\n       </IconButton>\r\n      </TableCell>\r\n     </TableRow>\r\n    </TableHead>\r\n    <TableBody>\r\n     {props.store.list.map(row => (\r\n      <StyledTableRow key={row.id}>\r\n       {props.cols.map(params => (\r\n        <>\r\n         <TableCell>{row[params.field]}</TableCell>\r\n        </>\r\n       ))}\r\n\r\n       <TableCell align=\"right\">\r\n        <IconButton aria-label=\"edit\" onClick={() => props.doEdit(row.id)}>\r\n         <EditIcon fontSize=\"large\" />\r\n        </IconButton>\r\n        <IconButton aria-label=\"delete\" onClick={() => props.doDelete(row.id)}>\r\n         <DeleteIcon fontSize=\"large\" />\r\n        </IconButton>\r\n       </TableCell>\r\n      </StyledTableRow>\r\n     ))}\r\n    </TableBody>\r\n   </Table>\r\n   <PAGINATION />\r\n  </ >\r\n );\r\n}","import React, { useState } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\n\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\nimport CodeGroupsService from '../../api/codeGroups/CodeGroupsService';\nimport CustomTableGrid from '../common/CustomTableGrid'\n\nexport default function CodeGroupsListComponent(props) {\n  const [store, setStore] = useState({\n    INIT_STATUS: INIT_STATUS.INIT,\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  });\n\n  const doRetrieve = () => {\n    CodeGroupsService.getList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\n      .then(response => {\n        console.log(response)\n        let data = {\n          INIT_STATUS: INIT_STATUS.LOAD,\n          list: response.data.pagingList.content,\n          searchValue: store.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            currentPage: response.data.pagingList.pageable.pageNumber,\n            totalElements: response.data.pagingList.totalElements,\n            totalPage: response.data.pagingList.totalPage\n          }\n        }\n        setStore(data);\n      })\n  }\n  const doEdit = (id) => {\n    console.log(`[CodeGroupsComponent.edit] id=${id}`)\n    props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}/${id}`);\n  }\n\n  const doDelete = (id) => {\n    console.log(`[CodeGroupsComponent.delete] id=${id}`)\n    CodeGroupsService.delete(id)\n      .then(response => {\n        console.log(`[CodeGroupsComponent.delete] response==>`, response)\n        doRetrieve();\n      })\n  }\n\n  const doHandleChangePage = (e, newPage) => {\n    // let paging = this.state.paging;\n    // paging.currentPage = newPage\n    // this.setState({\n    //   paging: paging\n    // });\n    store.paging.currentPage = newPage\n    setStore(store);\n\n    doRetrieve();\n  }\n\n  const doHandleChangeRowsPerPage = (e) => {\n    let paging = store.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    setStore(store)\n    doRetrieve();\n  }\n\n  const doSearch = (searchValue) => {\n    store.searchValue = searchValue\n    doRetrieve();\n  }\n\n  const cols = [\n    {\n      field: 'code',\n      headerName: 'Code',\n    },\n    {\n      field: 'value',\n      headerName: 'Value',\n    },\n    {\n      field: 'description',\n      headerName: 'Description',\n    }\n  ];\n\n  return (\n    <>\n      <Box pb={3}><Typography variant=\"h4\">Code Groups List</Typography></Box>\n\n      <CustomTableGrid\n        store={store}\n        cols={cols}\n        // list={this.state.list}\n        // searchValue={this.state.searchValue}\n        // paging={this.state.paging}\n        doHandleChangePage={doHandleChangePage}\n        doHandleChangeRowsPerPage={doHandleChangeRowsPerPage}\n        doRetrieve={doRetrieve}\n        doEdit={doEdit}\n        doDelete={doDelete}\n        doSearch={doSearch}\n      />\n    </ >\n  );\n}\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\n\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nimport CodeGroupsService from '../../api/codeGroups/CodeGroupsService';\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\nimport { useAuth } from '../../security/AuthenticationProvider';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default function CodeGroupsDetailComponent(props) {\n\n  const history = useHistory();\n  const { register, handleSubmit, reset } = useForm();\n  const [userObj] = useAuth();\n  const [message, setMessage] = useState('Loading. Please wait...');\n\n  const [store, setStore] = useState({\n    INIT_STATUS: ((props.match.params.id === -1) ? INIT_STATUS.INIT : INIT_STATUS.LOAD),\n    'school': { 'id': userObj.schoolId },\n    'id': props.match.params.id,\n    'priority': 1,\n    'code': '',\n    'value': '',\n    'description': '',\n    'json': '',\n    'listService': {}\n  });\n\n\n  useEffect(() => {\n    console.log(`[CodeGroupsDetailComponent.useEffect] store==>`, store)\n    console.log(`[CodeGroupsDetailComponent.useEffect] userObj==>`, userObj)\n    //retrieve();\n    if (store.INIT_STATUS === INIT_STATUS.LOAD) {\n      retrieve();\n    } if (store.INIT_STATUS === INIT_STATUS.RESET) {\n      reset(store)\n    }\n  }, [store]);\n\n\n  const getBlankDetails = () => {\n    return {\n      'message': '',\n      'school': { 'id': userObj.schoolId },\n      'id': '',\n      'priority': 1,\n      'code': '',\n      'value': '',\n      'description': '',\n      'json': '',\n      'optionsList': {}\n    }\n  }\n  const retrieve = () => {\n    console.log(`[CodeGroupsDetailComponent.retrieve] id==>${props.match.params.id}`)\n    setMessage('Loading. Please wait...');\n    CodeGroupsService.get(props.match.params.id)\n      .then(response => {\n        console.log(`[CodeGroupsDetailComponent.retrieve] response==>`, response)\n        let thestate = getBlankDetails();\n        if (props.match.params.id !== -1) {\n          thestate = response.data.entity;\n        }\n        thestate.school = { 'id': userObj.schoolId };\n        thestate.INIT_STATUS = INIT_STATUS.RESET;\n\n        //thestate.optionsList = response.data.optionsList\n        setStore(thestate)\n        setMessage('');\n        console.log(`[CodeGroupsDetailComponent.retrieve] store==>`, store)\n      }).catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'CodeGroupsDetailComponent.retrieve', 'CodeGroupsService.get'));\n  }\n  const setError = (error, errorCode, formMethod, serviceName) => {\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName);\n    setMessage(errMsg);\n  }\n\n  function save(data) {\n    console.log(`[CodeGroupsDetailComponent.save] data==>`, data)\n    CodeGroupsService.save(data).then(response => {\n      console.log(`[CodeGroupsDetailComponent.save] response==>`, response)\n      history.push(PAGE_URL.CODE_GROUPS_LIST);\n    }).catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'));\n  }\n\n  return (\n    <>\n      {console.log(`[CodeGroupsDetailComponent.render] store==>`, store)}\n      <Typography variant=\"h4\">CodeGroups Detail</Typography>\n      {message && <Alert severity=\"info\">{message}</Alert>}\n\n\n      <form onSubmit={handleSubmit(save)}>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={9}>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\n          </Grid>\n        </Grid>\n\n        <TextField type=\"hidden\"\n          name=\"id\"\n          inputRef={register}\n          defaultValue={store.id}\n        />\n        <TextField type=\"hidden\"\n          name=\"school.id\"\n          inputRef={register}\n          defaultValue={store.school.id}\n        />\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"code\"\n              name=\"code\"\n              label=\"Code\"\n              fullWidth\n              autoComplete=\"code-groups-code\"\n              autoFocus\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.code}\n            />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <TextField\n              required\n              id=\"value\"\n              name=\"value\"\n              label=\"Value\"\n              fullWidth\n              autoComplete=\"code-groups-value\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.code}\n            />\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <TextField\n              required\n              type=\"number\"\n              id=\"priority\"\n              name=\"priority\"\n              label=\"priority\"\n              fullWidth\n              autoComplete=\"code-groups-priority\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.priority}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <TextField\n              required\n              id=\"description\"\n              name=\"description\"\n              label=\"Description\"\n              fullWidth\n              autoComplete=\"code-groups-description\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.description}\n            />\n            <Grid item xs={12} sm={12}>&nbsp;</Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                multiline\n                rows={4}\n                id=\"json\"\n                name=\"json\"\n                label=\"JSON\"\n                fullWidth\n                autoComplete=\"code-groups-json\"\n                variant=\"filled\"\n                InputLabelProps={{ shrink: true }}\n                inputRef={register}\n                defaultValue={store.json}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={9}>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\n          </Grid>\n        </Grid>\n\n      </form>\n\n    </ >\n  )\n}\n\n\n","import React from 'react';\r\nimport faker from 'faker'\r\nimport { URL_BASE } from '../api/Utils'\r\nimport { useStyles } from '../forms/common/CSS'\r\n\r\nimport AuthenticationService from '../security/AuthenticationService'\r\nimport { Avatar, Box, Button, Divider, Grid } from '@material-ui/core';\r\n\r\nconst Dashboard = props => {\r\n  const classes = useStyles();\r\n  console.log(`process.env.NODE_ENV= ${process.env.NODE_ENV}`)\r\n  console.log(`URL_BASE= ${URL_BASE}`)\r\n\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.fashion(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.people(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.food(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      {\r\n        isUserLoggedIn &&\r\n        <>\r\n          <Box mx=\"auto\" py={5}><Divider /></Box>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <h2 className=\"featurette-heading\">First featurette heading. <span className=\"text-muted\">It’ll blow your mind.</span></h2>\r\n              <p className=\"lead\">{faker.random.words(50)}</p>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Avatar src={faker.image.business(500, 500)} className={classes.avatar_70} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box mx=\"auto\" py={5}><Divider /></Box>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Avatar src={faker.image.transport(500, 500)} className={classes.avatar_70} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <h2 className=\"featurette-heading\">Oh yeah, it’s that good. <span className=\"text-muted\">See for yourself.</span></h2>\r\n              <p className=\"lead\">{faker.random.words(20)}</p>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box mx=\"auto\" py={5}><Divider /></Box>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <h2 className=\"featurette-heading\">And lastly, this one. <span className=\"text-muted\">Checkmate.</span></h2>\r\n              <p className=\"lead\">{faker.random.words(30)}</p>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Avatar src={faker.image.sports(500, 500)} className={classes.avatar_70} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </>\r\n      }\r\n    </ >\r\n  )\r\n}\r\nexport default Dashboard;","import React from 'react';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../../security/AuthenticationService';\r\nimport { PAGE_URL } from '../../api/Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function NestedMenuComponent() {\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = (e) => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    // subheader={\r\n    //  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n    //   Menu\r\n    //  </ListSubheader>\r\n    // }\r\n    >\r\n      {\r\n        isUserLoggedIn && <>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Billing\" onClick={() => history.push(PAGE_URL.BILLING)} />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" onClick={() => history.push(PAGE_URL.USER_LIST)} />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <DraftsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Address\" onClick={() => history.push(PAGE_URL.ADDRESS_LIST)} />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Code Groups\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} />\r\n          </ListItem>\r\n          <ListItem button onClick={handleClick}>\r\n            <ListItemIcon>\r\n              <SendIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Student\" />\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" onClick={() => history.push(PAGE_URL.STUDENT_DETAIL + '/-1')} />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" onClick={() => history.push(PAGE_URL.STUDENT_LIST)} />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </>\r\n      }\r\n\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        {isUserLoggedIn && <ListItemText primary=\"Logout\" onClick={() => history.push(PAGE_URL.LOGOUT)} />}\r\n        {!isUserLoggedIn && <ListItemText primary=\"Login\" onClick={() => history.push(PAGE_URL.LOGIN)} />}\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NestedMenuComponent from './NestedMenuComponent';\r\n\r\nexport default function MenuComponent() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <MenuIcon />\r\n      </Button>\r\n\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <NestedMenuComponent />\r\n        {/* {\r\n          isUserLoggedIn && <>\r\n            \r\n            <MenuItem >\r\n              <Link to=\"/end-user-list\">Users</Link>\r\n            </MenuItem>\r\n            <MenuItem ><Link to=\"/address-list\">Address</Link></MenuItem>\r\n            <MenuItem ><Link to=\"/code-groups-list\">Code Groups</Link></MenuItem>\r\n            <Divider light />\r\n          </>\r\n        }\r\n        {!isUserLoggedIn && <MenuItem key=\"loginId\" ><Link to=\"/login\" >Login</Link></MenuItem>}\r\n        {isUserLoggedIn && <MenuItem key=\"logoutId\" ><Link to=\"/logout\" onClick={AuthenticationService.logout} >Logout</Link></MenuItem>} */}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React from 'react';\r\nimport { AppBar, IconButton, Toolbar, Typography, Avatar, Box, FormControlLabel, Switch } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useStyles } from './CSS';\r\nimport { PAGE_URL, URL_BASE } from '../../api/Utils'\r\nimport AuthenticationService from '../../security/AuthenticationService'\r\nimport { useAuth } from '../../security/AuthenticationProvider';\r\nimport MenuComponent from './MenuComponent';\r\n\r\nexport default function AppBarComponent(props) {\r\n const [userObj, setUserObj] = useAuth();\r\n\r\n // const [userObj, setUserObj] = useState({\r\n //  userName: '',\r\n //  userFullName: 'Guest',\r\n //  schoolName: '',\r\n //  schoolLogo: ''\r\n // });\r\n\r\n const classes = useStyles();\r\n // const userName = AuthenticationService.getLoginUserName();\r\n // const isLogin = AuthenticationService.isUserLoggedIn();\r\n\r\n // printme(userObj);\r\n\r\n return (\r\n  < div className={classes.appbar_root} >\r\n   {console.log('[AppBarComponent.return] userObj=>', userObj)}\r\n   <AppBar position=\"static\">\r\n    <Toolbar>\r\n     <IconButton\r\n      edge=\"start\"\r\n      className={classes.appbar_menuButton}\r\n      color=\"inherit\"\r\n      aria-label=\"open drawer\"\r\n     >\r\n      <MenuComponent />\r\n     </IconButton>\r\n\r\n     {userObj && <Avatar src={(URL_BASE + PAGE_URL.LOGO_URL + userObj.schoolLogo)} />}\r\n\r\n     <Typography className={classes.appbar_title} variant=\"h6\" noWrap>\r\n      <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n       {userObj && <b>{userObj.schoolName}</b>}\r\n      </Link>\r\n     </Typography>\r\n     {userObj && <div>Welcome <b>{userObj.userFullName}</b></div>}\r\n\r\n     {/* <div className={classes.appbar_search}>\r\n      <div className={classes.appbar_searchIcon}>\r\n       <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n       placeholder=\"Search…\"\r\n       classes={{\r\n        root: classes.appbar_inputRoot,\r\n        input: classes.appbar_inputInput,\r\n       }}\r\n       inputProps={{ 'aria-label': 'search' }}\r\n      />\r\n     </div> */}\r\n\r\n     <Box pl={5}>\r\n      <FormControlLabel control={<Switch checked={props.darkMode} onChange={props.toggleDarkMode} />} />\r\n     </Box>\r\n    </Toolbar>\r\n   </AppBar>\r\n  </div >\r\n );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Divider, FormControlLabel, FormLabel, Grid, MenuItem, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\n\r\nconst StudentDetailHtml = props => {\r\n  // const { register, handleSubmit, errors, reset, setValue } = useForm();\r\n  const { control, register, handleSubmit, reset } = useForm();\r\n  // const [counter, setCounter] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // setCounter(counter + 1);\r\n    // console.log(`[StudentDetailHtml.useEffect] props.store.initStatus=>${props.store.initStatus}, counter=${counter}`);\r\n    if (props.store.initStatus === INIT_STATUS.LOAD) {\r\n      props.onRetrieve(props.store.storeId);\r\n    } if (props.store.initStatus === INIT_STATUS.RESET) {\r\n      reset(props.store)\r\n    }\r\n  }, [props.store])\r\n\r\n  const BUTTONS = () => {\r\n    return (\r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.STUDENT_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.STUDENT_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" gutterBottom>Student Detail</Typography>\r\n      {/* {counter > 0 && <Alert severity=\"error\">Counter={counter}, Init Status: {props.store.initStatus}</Alert>} */}\r\n      {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n        <BUTTONS />\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={props.store.id}\r\n        />\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"school.id\"\r\n          inputRef={register}\r\n          defaultValue={props.store.school.id} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"lrn\"\r\n              name=\"lrn\"\r\n              label=\"LRN\"\r\n              fullWidth\r\n              autoComplete=\"lrn\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lrn}\r\n            />\r\n          </Grid><Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"studentId\"\r\n              name=\"studentId\"\r\n              label=\"Student Id\"\r\n              fullWidth\r\n              autoComplete=\"studentId\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.studentId}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.firstName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              autoComplete=\"family-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lastName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            {/* <InputLabel\r\n              variant=\"filled\" shrink htmlFor=\"level\">Level</InputLabel> */}\r\n            {/* <FormLabel component=\"level\">Level</FormLabel> */}\r\n            <Controller\r\n              as={\r\n                // <Select\r\n                //   // aria-label=\"level\"\r\n                //   InputLabelProps={{ shrink: true }}\r\n                //   label=\"Level\"\r\n                //   fullWidth\r\n                //   variant=\"filled\">\r\n                //   {props.store.optionsList.studentLevelList.map(m => (\r\n                //     <MenuItem key={m.id} value={m.id}>\r\n                //       {m.description}\r\n                //     </MenuItem>\r\n                //   ))}\r\n                // </Select>\r\n                <TextField id=\"level\"\r\n                  required\r\n                  select\r\n                  name=\"level.id\"\r\n                  label=\"Grade Level\"\r\n                  fullWidth\r\n                  autoComplete=\"student level\"\r\n                  variant=\"filled\"\r\n                  inputRef={register}\r\n                  defaultValue={props.store.level.id}\r\n                // error={!!errors.name}\r\n                >\r\n                  {props.store.optionsList.studentLevelList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"level.id\"\r\n              control={control}\r\n              defaultValue={props.store.level}\r\n              options={props.store.optionsList.studentLevelList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthDate\"\r\n              name=\"birthDate\"\r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              fullWidth\r\n              autoComplete=\"birth-date\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.birthDate}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthPlace\"\r\n              name=\"birthPlace\"\r\n              label=\"Birth Place\"\r\n              fullWidth\r\n              autoComplete=\"birth-place\"\r\n              InputLabelProps={{ shrink: true }}\r\n              variant=\"filled\"\r\n              inputRef={register}\r\n              defaultValue={props.store.birthPlace}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            {/* <label >Gender</label> */}\r\n            {/* <FormLabel component=\"legend\">Gender</FormLabel>\r\n            <RadioGroup row\r\n              label=\"Gender\"\r\n              name=\"gender\"\r\n              variant=\"filled\"\r\n              defaultValue={props.store.gender} >\r\n              <FormControlLabel\r\n                value=\"Male\"\r\n                control={<Radio color=\"primary\" variant=\"filled\" />}\r\n                label=\"Male\" variant=\"filled\"\r\n                labelPlacement=\"end\"\r\n                inputRef={register}\r\n              />\r\n              <FormControlLabel\r\n                value=\"Female\"\r\n                control={<Radio />}\r\n                label=\"Female\"\r\n                variant=\"filled\"\r\n                labelPlacement=\"end\"\r\n                inputRef={register}\r\n              />\r\n            </RadioGroup> */}\r\n            <FormLabel component=\"gender\"\r\n              variant=\"filled\">Gender</FormLabel>\r\n            <Controller\r\n              as={\r\n                <RadioGroup row\r\n                  label=\"Gender\"\r\n                  aria-label=\"gender\"\r\n                  variant=\"filled\">\r\n                  <FormControlLabel\r\n                    value=\"Male\"\r\n                    control={<Radio\r\n                      variant=\"filled\" />}\r\n                    label=\"Male\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                    labelPlacement=\"end\"\r\n                    variant=\"filled\"\r\n                  />\r\n                </RadioGroup>\r\n              }\r\n              name=\"gender\"\r\n              fullWidth\r\n              defaultValue={props.store.gender}\r\n              inputRef={register}\r\n              variant=\"filled\"\r\n              control={control}\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"contactNo\"\r\n              name=\"contactNo\"\r\n              label=\"Contact No\"\r\n              fullWidth\r\n              autoComplete=\"contactNo\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.contactNo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" >Address:</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n\r\n            <TextField\r\n              id=\"address.address1\"\r\n              name=\"address1\"\r\n              label=\"Address line 1\"\r\n              fullWidth\r\n              autoComplete=\"shipping address1\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address1}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"address.address2\"\r\n              name=\"address2\"\r\n              label=\"Address line 2\"\r\n              fullWidth\r\n              autoComplete=\"shipping address2\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address2}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.city\"\r\n              name=\"city\"\r\n              label=\"City\"\r\n              fullWidth\r\n              autoComplete=\"shipping address city\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.city}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.zip\"\r\n              name=\"zipCode\"\r\n              label=\"Zip / Postal code\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-code\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.zipCode}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField editable={false}\r\n              required\r\n              id=\"address.country\"\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-country\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.country}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}><Typography variant=\"h6\" >Parent/Guardian:</Typography></Grid>\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"fathersName\"\r\n              name=\"fathersName\"\r\n              label=\"Father's Name\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"fathersOccupation\"\r\n              name=\"fathersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"mothersName\"\r\n              name=\"mothersName\"\r\n              label=\"Mother's Name\"\r\n              fullWidth\r\n              autoComplete=\"mothersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"mothersOccupation\"\r\n              name=\"mothersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"mothersOccupation\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersOccupation}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"parentCivilStatus\"\r\n              name=\"parentCivilStatus\"\r\n              label=\"Parent CivilStatus\"\r\n              fullWidth\r\n              autoComplete=\"parentCivilStatus\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.parentCivilStatus}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} />\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"guardianName\"\r\n              name=\"guardianName\"\r\n              label=\"Guardian Name\"\r\n              fullWidth\r\n              autoComplete=\"guardianName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.guardianName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <BUTTONS />\r\n\r\n      </form>\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\nexport default StudentDetailHtml;","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\n\nexport const ENTITY = \"student\";\n\nclass StudentService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new StudentService();\n\n\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport Utils, { INIT_STATUS, ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport StudentDetailHtml from './StudentDetailHtml.js';\r\nimport StudentService from '../../api/student/StudentService'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../../security/AuthenticationProvider';\r\n\r\nexport default function StudentDetailComponent(props) {\r\n  const history = useHistory();\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [userObj] = useAuth();\r\n\r\n  const [store, setStore] = useState({\r\n    initStatus: ((props.match.params.id === -1) ? INIT_STATUS.INIT : INIT_STATUS.LOAD),\r\n    school: { 'id': userObj.schoolId },\r\n    id: '',\r\n    entityId: props.match.params.id,\r\n    firstName: '',\r\n    lastName: '',\r\n    birthDate: moment().format('YYYY-MM-DD'),\r\n    birthPlace: '',\r\n    gender: '',\r\n    contactNo: '',\r\n    level: { 'id': '' },\r\n    address1: '',\r\n    address2: '',\r\n    city: '',\r\n    zipCode: '',\r\n    country: 'Philippines',\r\n    fathersName: '',\r\n    fathersOccupation: '',\r\n    mothersName: '',\r\n    mothersOccupation: '',\r\n    parentCivilStatus: '',\r\n    guardianName: '',\r\n    optionsList: {\r\n      studentLevelList: []\r\n    }\r\n  });\r\n\r\n  const onInitFormData = (data) => {\r\n    if (data.birthDate) {\r\n      data.birthDate = moment(data.birthDate).format('YYYY-MM-DD');\r\n    }\r\n    if (!data.level) {\r\n      data.level = { 'id': '' };\r\n    }\r\n    if (!data.optionsList) {\r\n      data.optionsList = {\r\n        studentLevelList: []\r\n      }\r\n    }\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log('[StudentDetailComponent.onSubmitForm] data==>', data)\r\n\r\n    setMessage(``);\r\n    StudentService.save(data).then(response => onSubmitFormResponseAction(response))\r\n      .catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'StudentDetailComponent.onSubmitForm', 'StudentService.save'));\r\n  }\r\n\r\n  const onSubmitFormResponseAction = response => {\r\n    console.log(`[StudentDetailComponent.onSubmitFormSaveAction] params.id=${props.match.params.id}, response==>`, response)\r\n    //let data = response.data;\r\n    history.push(PAGE_URL.STUDENT_LIST)\r\n    // onInitFormData(data);\r\n\r\n    // data.initStatus = INIT_STATUS.RESET;\r\n\r\n    // setEntity(data);\r\n    // console.log(`[StudentDetailComponent.onSubmitForm] entity=>`, entity)\r\n\r\n    // setMessage(`Student ${data.id} saved successfully!`);\r\n\r\n  }\r\n\r\n  const onRetrieve = (id) => {\r\n    console.log(`[StudentDetailComponent.onRetrieve] id=${id}, props.id=${props.match.params.id}`, store)\r\n\r\n    setMessage(`Loading. Please wait...`);\r\n    StudentService.get(id ? id : props.match.params.id).then(response => onRetrieveResponseAction(response, id))\r\n      .catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'StudentDetailComponent.onRetrieve', 'StudentService.get'));\r\n  }\r\n\r\n  const onRetrieveResponseAction = (response, id) => {\r\n    console.log(`[StudentDetailComponent.onRetrieveResponseAction] id=${id}, response==>`, response)\r\n    let data = response.data.entity;\r\n    if (!data) {\r\n      data = {};\r\n    }\r\n\r\n    console.log(`[StudentDetailComponent.onRetrieveResponseAction] data==>`, data)\r\n    data.optionsList = response.data.listService\r\n    data.school = { 'id': userObj.schoolId };\r\n    onInitFormData(data);\r\n\r\n    data.initStatus = INIT_STATUS.RESET;\r\n    setStore(data);\r\n    setMessage(``);\r\n  }\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName);\r\n    setMessage(errMsg);\r\n  }\r\n  return (\r\n    <StudentDetailHtml\r\n      store={store}\r\n      message={message}\r\n      onSubmitForm={onSubmitForm}\r\n      onRetrieve={onRetrieve}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableCell, TableBody, TablePagination, FormControl, Input, Grid, IconButton, Box } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport StudentService from '../../api/student/StudentService'\nimport { PAGE_URL, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\n\nexport default class StudentListComponent extends React.Component {\n  state = {\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  }\n  componentDidMount = () => {\n    this.doRetrieve();\n  }\n  doRetrieve = () => {\n    StudentService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          list: response.data.pagingList.content,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            totalElements: response.data.pagingList.totalElements,\n            currentPage: response.data.pagingList.pageable.pageNumber\n          }\n        })\n      })\n  }\n  edit = (id) => {\n    console.log(`[StudentComponent.edit] id=${id}`)\n    this.props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}/${id}`);\n  }\n  delete = (id) => {\n    console.log(`[StudentComponent.delete] id=${id}`)\n    StudentService.delete(id)\n      .then(response => {\n        console.log(`[StudentComponent.delete] response==>`, response)\n        this.doRetrieve();\n      })\n  }\n\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.doRetrieve();\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.doRetrieve();\n  }\n\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      console.log(`[StudentListComponent.handleKeyDown] searchValue=${this.state.searchValue}`)\n      console.log(`2 [StudentListComponent.handleKeyDown] ${e.target.value}, state=>`, this.state)\n      this.doRetrieve();\n    }\n  }\n\n  render = () => {\n    return (\n      <>\n        <Box pb={3}><Typography variant=\"h4\">Student List</Typography></Box>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <FormControl variant=\"filled\">\n              <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n                onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n                endAdornment={<SearchIcon onClick={() => this.doRetrieve()} />}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TablePagination\n              component=\"div\"\n              count={this.state.paging.totalElements}\n              page={this.state.paging.currentPage}\n              onChangePage={this.handleChangePage}\n              rowsPerPage={this.state.paging.rowsPerPage}\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n          </Grid>\n        </Grid>\n\n        <Table>\n          <TableHead>\n            <StyledTableHeadRow>\n              <TableCell>Student ID</TableCell>\n              <TableCell>LRN</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Gender</TableCell>\n              <TableCell>Grade Level</TableCell>\n              <TableCell align=\"right\">\n                Action\n                <IconButton aria-label=\"add\" onClick={() => this.edit(-1)}>\n                  <AddIcon fontSize=\"large\" />\n                </IconButton>\n              </TableCell>\n            </StyledTableHeadRow>\n          </TableHead>\n          <TableBody>\n            {this.state.list.map(row => (\n              <StyledTableRow key={row.id}>\n                <TableCell>{row.studentId}</TableCell>\n                <TableCell>{row.lrn}</TableCell>\n                <TableCell>{row.firstName} {row.lastName}</TableCell>\n                <TableCell>{row.gender}</TableCell>\n                <TableCell>{row.level && row.level.description}</TableCell>\n\n                <TableCell align=\"right\">\n                  <IconButton aria-label=\"edit\" onClick={() => this.edit(row.id)}>\n                    <EditIcon fontSize=\"large\" />\n                  </IconButton>\n                  <IconButton aria-label=\"delete\" onClick={() => this.delete(row.id)}>\n                    <DeleteIcon fontSize=\"large\" />\n                  </IconButton>\n                </TableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </ >\n    );\n  }\n}\n\n\n\n\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport { Box, Button, Divider, Grid, MenuItem, Paper, Table, TableBody, TableCell, TableHead, TextField, Typography, IconButton, Select, TablePagination, TableContainer } from '@material-ui/core';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\n\r\nimport { INIT_STATUS, PAGE_URL, StyledTableHeadRow, StyledTableRow } from '../../api/Utils'\r\nimport { useStyles } from '../common/CSS'\r\n\r\nexport default function BillingSearchHtml(props) {\r\n        const classes = useStyles();\r\n        const history = useHistory();\r\n\r\n        const { control, register, handleSubmit, reset } = useForm();\r\n        const [counter, setCounter] = useState(0);\r\n        useEffect(() => {\r\n                setCounter(counter + 1);\r\n                console.log(`[BillingSearchHtml.useEffect] counter=${counter}, INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n                if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES) {\r\n                        props.doPayables();\r\n                } else if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                        reset(props.store)\r\n                }\r\n        }, [props.store])\r\n\r\n\r\n        const SearchResultsBody = () => {\r\n                return (\r\n                        <>\r\n                                <Box py={3}><Divider /></Box>\r\n                                <Box pb={3}><Typography variant=\"h5\">Search Results</Typography></Box>\r\n                                <PaginationSection />\r\n                                <TableContainer component={Paper}>\r\n                                        <Table>\r\n                                                <TableHead>\r\n                                                        <StyledTableHeadRow>\r\n                                                                <TableCell>Student ID</TableCell>\r\n                                                                <TableCell>Name</TableCell>\r\n                                                                <TableCell>Grade Level</TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                        <IconButton aria-label=\"add\" onClick={() => props.doEdit(-1)}>\r\n                                                                                <AddIcon fontSize=\"large\" />\r\n                                                                        </IconButton>\r\n                                                                </TableCell>\r\n                                                        </StyledTableHeadRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                        {props.store.list.map(row => (\r\n                                                                <StyledTableRow key={row.id}>\r\n                                                                        <TableCell variant=\"head\">{row.studentId}</TableCell>\r\n                                                                        <TableCell>{row.firstName} {row.lastName}</TableCell>\r\n                                                                        <TableCell>{row.level.description}</TableCell>\r\n                                                                        <TableCell align=\"right\">\r\n                                                                                <IconButton aria-label=\"payment\" href={PAGE_URL.BILLING_PAYABLES_URL + '/' + row.id}>\r\n                                                                                        <AccountBalanceWalletIcon fontSize=\"large\" />\r\n                                                                                </IconButton>\r\n                                                                                <IconButton aria-label=\"edit\" onClick={() => props.doEdit(row.id)}>\r\n                                                                                        <EditIcon fontSize=\"large\" />\r\n                                                                                </IconButton>\r\n                                                                                <IconButton aria-label=\"delete\" onClick={() => props.doDelete(row.id)}>\r\n                                                                                        <DeleteIcon fontSize=\"large\" />\r\n                                                                                </IconButton>\r\n                                                                        </TableCell>\r\n                                                                </StyledTableRow>\r\n                                                        ))}\r\n                                                </TableBody>\r\n                                        </Table>\r\n                                </TableContainer>\r\n                                <PaginationSection />\r\n                        </>\r\n                )\r\n        }\r\n\r\n        const PaginationSection = () => {\r\n                return (\r\n                        <TablePagination\r\n                                component=\"div\"\r\n                                page={props.store.paging.currentPage}\r\n                                count={props.store.paging.totalElements}\r\n                                rowsPerPage={props.store.paging.rowsPerPage}\r\n                                onChangePage={props.doHandleChangePage}\r\n                                onChangeRowsPerPage={props.doHandleChangeRowsPerPage}\r\n                        />\r\n                )\r\n        }\r\n        const PayablesSection = () => {\r\n                return (\r\n                        <>\r\n                                <Box py={3}><Divider /></Box>\r\n                                <Box pb={3}><Typography variant=\"h5\">Student Information</Typography></Box>\r\n                                <Paper elevation={3} variant=\"outlined\" >\r\n                                        <Box py={3} px={3}>\r\n                                                <Grid container spacing={3}>\r\n                                                        <Grid item xs={12} sm={2}>Student Id</Grid>\r\n                                                        <Grid item xs={12} sm={10}>{props.store.entity.studentId}</Grid>\r\n                                                        <Grid item xs={12} sm={2}>Student Name</Grid>\r\n                                                        <Grid item xs={12} sm={10}>{props.store.entity.firstName + ' ' + props.store.entity.lastName}</Grid>\r\n                                                        <Grid item xs={12} sm={2}>Level</Grid>\r\n                                                        <Grid item xs={12} sm={10}>{props.store.entity.level.description}</Grid>\r\n                                                </Grid>\r\n                                        </Box>\r\n                                </Paper>\r\n                                <Box py={3}><Divider /></Box>\r\n                                <Box pb={3}><Typography variant=\"h5\">Payables</Typography></Box>\r\n                                <TableContainer component={Paper}>\r\n                                        <Table>\r\n                                                <TableHead>\r\n                                                        <StyledTableHeadRow>\r\n                                                                <TableCell variant=\"head\">Payables</TableCell>\r\n                                                                <TableCell variant=\"head\" align=\"right\">Total</TableCell>\r\n                                                                <TableCell variant=\"head\" align=\"right\">Paid</TableCell>\r\n                                                                <TableCell variant=\"head\" align=\"right\">Balance</TableCell>\r\n                                                                <TableCell variant=\"head\" align=\"right\">Amount to Pay</TableCell>\r\n                                                        </StyledTableHeadRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                        {props.store.payables.map((row, i) => (\r\n                                                                <StyledTableRow>\r\n                                                                        <TableCell>{row.name}</TableCell>\r\n                                                                        <TableCell align=\"right\">{row.regular}</TableCell>\r\n                                                                        <TableCell align=\"right\">0</TableCell>\r\n                                                                        <TableCell align=\"right\">0</TableCell>\r\n                                                                        <TableCell align=\"right\">0</TableCell>\r\n                                                                </StyledTableRow>\r\n                                                        ))}\r\n                                                        <StyledTableRow>\r\n                                                                <TableCell colSpan=\"4\" align=\"right\">Total</TableCell>\r\n                                                                <TableCell align=\"right\">0</TableCell>\r\n                                                        </StyledTableRow>\r\n                                                </TableBody>\r\n                                        </Table>\r\n                                </TableContainer>\r\n                        </>\r\n                )\r\n        }\r\n\r\n        return (\r\n                <>\r\n                        <Box pb={3}><Typography variant=\"h4\">Billing</Typography></Box>\r\n\r\n                        <form onSubmit={handleSubmit(props.doRetrieve)}>\r\n                                <Paper elevation={3} variant=\"outlined\" >\r\n                                        <Box my={3} mx={3}>\r\n                                                <Grid container spacing={3}>\r\n                                                        <Grid item xs={12} sm={2}><Typography variant=\"h5\">Search By</Typography></Grid>\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Controller\r\n                                                                        as={<Select>\r\n                                                                                {props.store.optionsList.billingSearchBy.map(m => (\r\n                                                                                        <MenuItem key={m.id} value={m.value}>\r\n                                                                                                {m.label}\r\n                                                                                        </MenuItem>\r\n                                                                                ))}\r\n                                                                        </Select>}\r\n                                                                        name=\"searchBy\"\r\n                                                                        control={control}\r\n                                                                        defaultValue={props.store.searchBy}\r\n                                                                        options={props.store.optionsList.billingSearchBy}\r\n                                                                />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                                <TextField id=\"searchValue\"\r\n                                                                        required\r\n                                                                        name=\"searchValue\"\r\n                                                                        // label=\"Search Value\"\r\n                                                                        fullWidth\r\n                                                                        autoComplete=\"billing-search-value\"\r\n                                                                        inputRef={register}\r\n                                                                        defaultValue={props.store.searchValue}\r\n                                                                />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12} sm={1}>\r\n                                                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SearchIcon />}>Search</Button>\r\n                                                        </Grid>\r\n                                                </Grid>\r\n                                        </Box>\r\n                                </Paper>\r\n                        </form>\r\n                        {props.store.searchFlag && <SearchResultsBody />}\r\n                        {props.store.payablesFlag && <PayablesSection />}\r\n                </>\r\n        )\r\n}","import axios from \"axios\";\nimport { API_URL_BASE } from \"../Utils\";\n\n\nclass BillingService {\n\n getListBy = (by, searchValue, page, pageSize) => {\n  const theurl = `${API_URL_BASE}billing/search/${by}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n getStudentPayables = (id) => {\n  const theurl = `${API_URL_BASE}billing/payables/${id}`\n  return axios.get(theurl);\n }\n}\n\nexport default new BillingService();\n\n\n","import React, { useState } from 'react';\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\n\r\nimport BillingSearchHtml from './BillingSearchHtml';\r\nimport BillingService from '../../api/billing/BillingService'\r\nimport StudentService from '../../api/student/StudentService'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function BillingSearchComponent(props) {\r\n  const history = useHistory();\r\n\r\n  const optionsList = {\r\n    billingSearchBy: [{\r\n      id: '1',\r\n      value: 'STUDENT_ID',\r\n      label: 'Student ID'\r\n    }, {\r\n      id: '2',\r\n      value: 'STUDENT_NAME',\r\n      label: 'Student Name'\r\n    }]\r\n  }\r\n\r\n  const [store, setStore] = useState({\r\n    INIT_STATUS: (props.match.params.id ? INIT_STATUS.PAYABLES : INIT_STATUS.INIT),\r\n    searchFlag: (props.match.params.id ? false : true),\r\n    payablesFlag: (props.match.params.id ? true : false),\r\n    list: [],\r\n    searchValue: '',\r\n    searchBy: 'STUDENT_ID',\r\n    entity: {\r\n      studentId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      level: {\r\n        id: '',\r\n        value: '',\r\n        description: ''\r\n      }\r\n    },\r\n    payables: [],\r\n    optionsList: optionsList,\r\n    paging: {\r\n      rowsPerPage: 25,\r\n      totalElements: 0,\r\n      currentPage: 0\r\n    }\r\n  });\r\n\r\n  const doInitFormData = data => {\r\n    data.optionsList = optionsList;\r\n\r\n    if (!data.currentPage) {\r\n      data.paging = {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0\r\n      };\r\n    }\r\n\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n    if (!data.payables) {\r\n      data.payables = [];\r\n    }\r\n  }\r\n\r\n  const doRetrieve = (data) => {\r\n    console.log(`[BillingSearchComponent.doRetrieve] data==>`, data)\r\n    BillingService.getListBy(data.searchBy, data.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\r\n      .then(response => {\r\n        console.log(`[BillingSearchComponent.doRetrieve BillingService.getListBy] response==>`, response)\r\n        let formData = {\r\n          INIT_STATUS: INIT_STATUS.RESET,\r\n          searchValue: data.searchValue,\r\n          searchBy: data.searchBy,\r\n          searchFlag: true,\r\n          payablesFlag: false,\r\n          list: response.data.content,\r\n          optionsList: optionsList,\r\n          paging: {\r\n            rowsPerPage: response.data.size,\r\n            totalElements: response.data.totalElements,\r\n            currentPage: response.data.pageable.pageNumber,\r\n          }\r\n        }\r\n        doInitFormData(formData);\r\n        setStore(formData)\r\n      });\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    let paging = store.paging;\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n    setStore(store)\r\n    doRetrieve();\r\n  }\r\n  const doHandleChangePage = (e, newPage) => {\r\n    store.paging.currentPage = newPage\r\n    setStore(store);\r\n\r\n    doRetrieve({\r\n      searchBy: store.searchBy,\r\n      searchValue: store.searchValue,\r\n      currentPage: store.paging.currentPage,\r\n      rowsPerPage: store.paging.rowsPerPage\r\n    });\r\n  }\r\n\r\n  const doEdit = (id) => {\r\n    history.push(PAGE_URL.STUDENT_DETAIL_URL + '/' + id)\r\n  }\r\n\r\n  const doPayables = () => {\r\n    BillingService.getStudentPayables(props.match.params.id).then(response => {\r\n      console.log(`[BillingSearchComponent.doPayables BillingService.getStudentPayables] response==>`, response)\r\n      let formData = {\r\n        entity: response.data.student,\r\n        payables: response.data.payables,\r\n        searchFlag: false,\r\n        payablesFlag: true\r\n      }\r\n      doInitFormData(formData);\r\n      setStore(formData);\r\n    })\r\n  }\r\n  return (\r\n    <BillingSearchHtml\r\n      store={store}\r\n      doEdit={doEdit}\r\n      doRetrieve={doRetrieve}\r\n      doPayables={doPayables}\r\n      doHandleChangePage={doHandleChangePage}\r\n      doHandleChangeRowsPerPage={doHandleChangeRowsPerPage} />\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { Container, CssBaseline } from '@material-ui/core';\r\n\r\nimport ErrorComponent from './api/ErrorComponent'\r\nimport FooterComponent from './forms/common/FooterComponent'\r\nimport EndUserListComponent from './forms/endUser/EndUserListComponent';\r\nimport EndUserDetailComponent from './forms/endUser/EndUserDetailComponent';\r\nimport AddressListComponent from './forms/address/AddressListComponent';\r\nimport AddressDetailComponent from './forms/address/AddressDetailComponent';\r\n\r\nimport AuthenticatedRoute from './security/AuthenticatedRoute'\r\nimport SignInComponent from './security/SignInComponent';\r\nimport LogoutComponent from './security/LogoutComponent'\r\nimport CodeGroupsListComponent from './forms/codeGroups/CodeGroupsListComponent';\r\nimport CodeGroupsDetailComponent from './forms/codeGroups/CodeGroupsDetailComponent';\r\nimport Dashboard from './forms/Dashboard';\r\nimport AppBarComponent from './forms/common/AppBarComponent';\r\nimport StudentDetailComponent from './forms/student/StudentDetailComponent';\r\nimport StudentListComponent from './forms/student/StudentListComponent';\r\n\r\nimport BillingSearchComponent from './forms/billing/BillingSearchComponent';\r\n\r\nimport { PAGE_URL, INIT_STATUS, THEME } from './api/Utils';\r\nimport { useStyles } from './forms/common/CSS'\r\nimport { useAuth } from './security/AuthenticationProvider';\r\n\r\nimport AuthenticationService from './security/AuthenticationService';\r\n\r\nconst AppRouting = () => {\r\n const [store, setStore] = useState({ 'INIT_STATUS': INIT_STATUS.INIT_STATUS });\r\n const [userObj, setUserObj] = useAuth();\r\n\r\n useEffect(() => {\r\n  console.log(`[AuthenticationService.useEffect] userObj=>`, userObj)\r\n  if (store.INIT_STATUS === INIT_STATUS.INIT_STATUS) {\r\n   //initialize theme\r\n   initTheme();\r\n\r\n   //initialize user\r\n   setUserObj(AuthenticationService.getLoggedUserObj());\r\n\r\n   // update INIT_STATUS to DONE to prevent inifinite loop\r\n   setStore({\r\n    INIT_STATUS: INIT_STATUS.DONE\r\n   });\r\n  }\r\n });\r\n const initTheme = () => {\r\n  const themeDarkMode = localStorage.getItem(THEME.THEME_STORAGE_NAME);\r\n  console.log(`[AuthenticationService.useEffect] themeDarkMode=${themeDarkMode}, userObj=>`, userObj)\r\n\r\n  setDarkMode(themeDarkMode === 'Y' ? true : false);\r\n }\r\n\r\n const [darkMode, setDarkMode] = useState(false);\r\n\r\n const theme = createMuiTheme({\r\n  palette: {\r\n   type: darkMode ? THEME.DARK_MODE : THEME.LIGHT_MODE,\r\n  },\r\n });\r\n const toggleDarkMode = () => {\r\n  setDarkMode(!darkMode);\r\n  localStorage.setItem(THEME.THEME_STORAGE_NAME, !darkMode ? 'Y' : 'N');\r\n }\r\n\r\n // render = () => {\r\n const classes = useStyles();\r\n\r\n return (\r\n  <MuiThemeProvider theme={theme}>\r\n   <CssBaseline />\r\n\r\n   <div className=\"AppRouting\">\r\n    <Router>\r\n     <>\r\n      {/* <AppBarDrawerComponent /> */}\r\n\r\n      <AppBarComponent darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\r\n\r\n      <Container component=\"main\" className={classes.container}>\r\n       <Switch>\r\n        <Route path={PAGE_URL.ROOT} exact component={Dashboard} />\r\n        <Route path={PAGE_URL.INDEX} exact component={Dashboard} />\r\n\r\n        <Route path={PAGE_URL.LOGOUT} component={LogoutComponent} />\r\n        <Route path={PAGE_URL.LOGIN} component={SignInComponent} />\r\n\r\n        <Route path={PAGE_URL.STUDENT_LIST} component={StudentListComponent} />\r\n        <Route path={PAGE_URL.STUDENT_DETAIL} component={StudentDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING_PAYABLES} exact component={BillingSearchComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING} exact component={BillingSearchComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.USER_LIST} exact component={EndUserListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_DETAIL} exact component={EndUserDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.ADDRESS_LIST} exact component={AddressListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ADDRESS_DETAIL} exact component={AddressDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_ADDRESS_DETAIL} exact component={AddressDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_LIST} exact component={CodeGroupsListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL} exact component={CodeGroupsDetailComponent} />\r\n        <Route component={ErrorComponent} />\r\n       </Switch>\r\n      </Container>\r\n      <FooterComponent />\r\n     </>\r\n    </Router>\r\n   </div>\r\n  </MuiThemeProvider>\r\n );\r\n // }\r\n}\r\n\r\nexport default AppRouting;","import React from 'react';\nimport './App.css';\nimport { AuthenticationProvider } from './security/AuthenticationProvider';\n\nimport AppRouting from './AppRouting'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AuthenticationProvider>\n        <AppRouting />\n      </AuthenticationProvider>\n    </div >\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}