{"version":3,"sources":["api/CommonSlice.js","api/school/SchoolSlice.js","api/codeGroups/CodeGroupsSlice.js","api/endUser/UsersSlice.js","api/student/StudentSlice.js","api/gradeLevelPayables/GradeLevelSlice.js","api/accountPayablesSettings/AccountPayablesSettingsSlice.js","api/billing/BillingSlice.js","api/processing/ProcessingSlice.js","api/store.js","api/ErrorComponent.jsx","forms/common/FooterComponent.jsx","forms/common/PaginationComponent.js","forms/common/CustomTableGrid.js","api/endUser/EndUserService.jsx","forms/common/TitleComponent.jsx","providers/GlobalVariableProvider.js","api/useMessageAlert.js","forms/common/ConfirmMsgDialog.js","forms/endUser/EndUserListComponent.jsx","forms/endUser/EndUserDetailHtml.js","forms/endUser/EndUserDetailComponent.jsx","security/useSecurityServices.js","security/AuthenticatedRoute.jsx","forms/common/CSS.js","security/SignInHtml.js","security/SignInComponent.js","security/LogoutComponent.jsx","api/codeGroups/CodeGroupsService.js","forms/codeGroups/CodeGroupsListComponent.js","forms/codeGroups/CodeGroupsDetailComponent.jsx","forms/dashboard/Chart.js","forms/dashboard/StackedBarChart.js","forms/dashboard/CustomContentOfTooltip.js","forms/dashboard/Dashboard.jsx","forms/common/MenuListItems.js","forms/common/MiniDrawer.js","api/useTheme.js","forms/common/AppBarComponent.js","forms/student/StudentDetailHtml.js","api/student/StudentService.jsx","forms/student/StudentDetailComponent.js","forms/student/StudentListComponent.jsx","api/school/SchoolService.js","forms/school/SchoolDetailComponent.jsx","forms/school/SchoolListComponent.js","forms/common/SubTitleComponent.jsx","forms/billing/SearchResultsHtmlComponent.js","forms/common/SelectGrid.js","forms/billing/PayablesHtmlComponent.js","forms/billing/BillingHtmlComponent.js","forms/billing/SavePayablesConfimationHtml.js","forms/billing/BillingComponent.js","api/billing/BillingService.jsx","api/accountPayablesSettings/AccountPayablesSettingsService.jsx","forms/accountPayables/AccountPayablesSettingsListComponent.js","forms/accountPayables/AccountPayablesSettingsParentComponent.jsx","forms/accountPayables/AccountPayablesSettingsDetailComponent.jsx","api/gradeLevelPayables/GradeLevelPayablesService.js","forms/gradeLevelPayables/GradeLevelPayablesListComponent.js","forms/gradeLevelPayables/GradeLevelAccountPayablesSettingsListComponent.js","forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent.jsx","forms/common/GlobalAlertMsgDialog.js","forms/closePeriod/ClosePeriodComponent.jsx","api/processing/ProcessingService.js","AppRouting.jsx","App.js","serviceWorker.js","index.js","api/Utils.js"],"names":["resetSelectedItemCommon","state","action","blankSelectedItem","selectedItem","setSelectedItemCommon","payload","updateSelectedItemCommon","temp","setPageableCommon","pageable","setPageableEntityCommon","blankPageable","list","setOptionsListCommon","optionsList","INIT_STATUS","INIT","searchValue","paging","rowsPerPage","totalElements","currentPage","totalPage","currentPeriod","periodList","SchoolSlice","createSlice","name","initialState","reducers","resetSelectedItem","setSelectedItem","data","values","initForm","updateSelectedItem","setPageable","setPageableEntity","setOptionsList","actions","selectPageable","school","selectSelectedItem","CodeGroupsSlice","codeGroups","id","schoolList","UsersSlice","setSearchValue","users","defaultPageable","level","studentLevelList","StudentSlice","birthDate","moment","format","students","period","active","text","levelList","applyToAllList","GradeLevelSlice","console","log","accountPayablesSettings","length","map","i","status","tempList","row","filter","item","rowTemp","push","tempList2","sort","o1","o2","priority","gradeLevels","paymentPeriod","paymentPeriodList","AccountPayablesSettingsSlice","billingSearchBy","value","label","searchBy","searchFlag","payablesFlag","studentId","firstName","lastName","description","blankConfirmPayables","entity","payables","payablesByInvoiceNo","open","BillingSlice","confirmPayables","updatePageable","updatePageableCommon","setConfirmPayables","updateConfirmPayables","billing","ProcessingSlice","indexOf","processing","configureStore","reducer","SchoolReducer","CodeGroupsReducer","UsersReducer","StudentReducer","GradeLevelReducer","AccountPayablesSettingsReducer","BillingReducer","ProcessingReducer","ErrorComponent","render","className","React","Component","Copyright","Box","mx","pt","Divider","Typography","variant","color","align","Date","getFullYear","FooterComponent","mt","PaginationComponent","props","TablePagination","rowsPerPageOptions","component","page","count","onChangePage","onChangeRowsPerPage","CustomTableGrid","showPaging","showSearch","showAction","register","useForm","useState","counter","setCounter","Grid","container","spacing","xs","sm","FormControl","Input","defaultValue","store","onKeyDown","e","key","doSearch","target","preventDefault","doHandleKeyDown","placeholder","inputRef","endAdornment","onClick","doRetrieve","children","TableContainer","Paper","elevation","Table","TableHead","cols","params","headerName","field","IconButton","aria-label","doNew","fontSize","TableBody","TableCell","doEdit","doDelete","doHandleChangePage","doHandleChangeRowsPerPage","ENTITY","TitleComponent","pb","GlobalVariableContext","createContext","useGlobalVariable","context","useContext","Error","GlobalVariableProvider","USER_TEMP","userName","userFullName","schoolName","schoolAddress","schoolLogo","schoolId","userLogin","setUserLogin","ui","darkMode","alert","title","severity","msg","globalProps","setGlobalProps","clearUser","setAlertProps","prop","setUIProps","Provider","useMessageAlert","showMsgAlert","getFormatedErrorMessage","error","errorCode","formMethod","serviceName","JSON","stringify","errMsg","message","response","headers","closeMsgAlert","showErrorMsgAlert","showErrorAlert","showInfoAlert","showWarningAlert","showSuccessAlert","ConfirmMsgDialog","closeDialog","type","OPTIONS","YESNO","setReturnValue","setDialogSelection","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","Alert","DialogContent","DialogContentText","DialogActions","Button","YES","NO","OKCANCEL","OK","CANCEL","EndUserListComponent","dispatch","useDispatch","currPageable","useSelector","deleteDialogOpen","setDeleteDialogOpen","deleteId","setDeleteId","useEffect","retrieve","pageSize","axios","get","Utils","urlListPattern","getList","then","LOAD","pagingList","content","size","pageNumber","catch","ERROR_CODE","LIST_ERROR","delete","urlDeletePattern","deleteItem","newPage","selected","history","PAGE_URL","USER_DETAIL_URL","EndUserDetailHtml","control","handleSubmit","setStatus","useHistory","entityId","RESET","onSubmit","onSubmitForm","startIcon","href","USER_LIST","TextField","required","fullWidth","autoComplete","autoFocus","InputLabelProps","shrink","password","as","select","MenuItem","options","EndUserDetailComponent","setMessage","match","urlOptionsPattern","listService","RETRIEVE_ERROR","post","urlSavePattern","save","SAVE_ERROR","myInterceptor","useSecurityServices","getJwtTokenHeader","jwtToken","getJwtToken","sessionStorage","getItem","JWT_TOKEN","setupAxiosInterceptors","authHeader","interceptors","request","use","a","config","isUserLoggedIn","authorization","getSessionStorageLoginUser","AUTH_USER","getLoggedUserObj","user","parse","AUTH_USER_OBJ","initAxios","jwtTokenHeader","initUser","lu","executeJwtAuthenticationService","username","AUTH_URL_BASE","registerJwtSucessfulLogin","setItem","logout","eject","removeItem","AuthenticatedRoute","isLoggedin","to","useStyles","makeStyles","theme","backgroundColor","palette","mode","grey","flexGrow","height","overflow","paddingTop","paddingBottom","login_paper","marginTop","display","flexDirection","alignItems","login_avatar","margin","secondary","main","login_form","width","login_submit","avatar_40","avatar_70","SignInHtml","classes","Container","maxWidth","Avatar","formData","onSignon","submit","SignInComponent","userDetails","isLoggedIn","token","LOGIN_ERROR","LogoutComponent","CodeGroupsListComponent","DELETE_ERROR","CODE_GROUPS_DETAIL_URL","CodeGroupsDetailComponent","CODE_GROUPS_LIST","code","multiline","rows","json","uv","pv","amt","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","PureComponent","jsfiddleUrl","stackId","fill","getIntroOfPage","CustomTooltip","Dashboard","process","URL_BASE","isLogin","barSize","root","background","paper","nested","paddingLeft","MenuListItems","setStore","List","ListItem","button","BILLING","ListItemIcon","ListItemText","primary","ACCOUNT_PAYABLES_SETTINGS_LIST","GRADE_LEVEL_PAYABLES_LIST","STUDENT_LIST","SCHOOL_LIST","sourceName","isopen","doHandleClick","Collapse","in","timeout","unmountOnExit","disablePadding","CLOSE_PERIOD_DETAIL_URL","LOGOUT","LOGIN","useStylesDrawer","drawer","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","MiniDrawer","useTheme","Drawer","clsx","doHandleDrawerClose","direction","THEME","initTheme","localStorage","toggleDarkMode","AppBarComponent","useAppTheme","appBar","zIndex","appBarShift","marginLeft","menuButton","marginRight","hide","useStylesAppBar","setDrawerOpen","AppBar","position","Toolbar","edge","src","LOGO_URL","noWrap","style","textDecoration","pl","FormControlLabel","Switch","checked","onChange","StudentDetailHtml","reset","onRetrieve","BUTTONS","STUDENT_DETAIL_URL","lrn","birthPlace","FormLabel","RadioGroup","Radio","labelPlacement","gender","contactNo","address1","address2","city","zipCode","editable","country","fathersName","mothersName","mothersOccupation","parentCivilStatus","guardianName","StudentDetailComponent","StudentListComponent","SchoolDetailComponent","SCHOOL_DETAIL_URL","logo","address","SchoolListComponent","currPageableSchools","SubTitleComponent","SearchResultsHtmlComponent","CustomTableHead","CustomTableBody","doPayables","doShowPayables","SelectGrid","rest","require","StyledTableRow","StyledTableHeadRow","StyledTableHeadCell","StyledGrid","cell","minWidth","PayablesHtmlComponent","total","setTotal","setPayables","periodId","currentState","setCurrentState","changeSelectStateByPeriod","changeSelectState","PAYABLES_RESET","resetPayables","doUpdateCurrPageable","DONE","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","hasNext","py","px","paymentBalance","totalBalance","toLocaleString","undefined","balances","balance","doShowSaveBillingDialog","invoiceDate","studentPayables","amount","paid","aps","payment","onBlur","el","replaceAll","numValue","Number","onPaymentBlur","InputProps","startAdornment","InputAdornment","colSpan","multilineRows","textValue","billingByInvoice","invoiceNo","payablesMap","BillingHtmlComponent","my","Select","m","doShowSaveConfirmDialog","SavePayablesConfimationHtml","confirmStore","componentRef","useRef","handlePrint","useReactToPrint","current","ConfirmPage","balanceTotal","paymentTotal","PrintableInvoicePage","ref","border","saveDialog","BillingComponent","vertical","horizontal","snackbar","setSnackbar","setConfirmStore","doInitFormData","by","API_URL_BASE","doSavePayables","student","doOpenSnackBar","doInitConfirmStore","doCloseSnackbar","getStudentPayablesByPeriod","optionsListTemp","confirmStoreTemp","comment","Snackbar","autoHideDuration","anchorOrigin","activeId","getOptions","AccountPayablesSettingsListComponent","activeList","setFilter","doInitOptions","applyToAll","ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL","AccountPayablesSettingsParentComponent","setParent","parent","renderCount","AccountPayablesSettingsDetailComponent","GradeLevelPayablesListComponent","b","GRADE_LEVEL_PAYABLES_DETAIL_URL","GradeLevelAccountPayablesSettingsListComponent","setGradeLevelPayables","doAddItem","GradeLevelPayablesDetailsComponent","URL_OPTIONS","onRetrieveResponseAction","GridActionButtons","disabled","onChangePeriod","FormGroup","Checkbox","handleCheckboxChange","GlobalAlertMsgDialog","ClosePeriodComponent","getListClosePeriod","getOptionsByPeriod","saveClosePeriod","patch","ProcessingService","periodFrom","periodTo","confirmDialogOpen","setConfirmDialogOpen","doValidateParameters","errorMsg","join","doProcesses","fromPeriodId","toPeriodId","createdDate","useStylesRouting","AppRouting","CssBaseline","path","ROOT","exact","INDEX","STUDENT_DETAIL","BILLING_PAYABLES","USER_DETAIL","CODE_GROUPS_DETAIL","SCHOOL_DETAIL","ACCOUNT_PAYABLES_SETTINGS_DETAIL","GRADE_LEVEL_PAYABLES_DETAIL","App","createMuiTheme","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","PAYABLES","URL_BASE_DEV","URL_LIST","URL_DELETE","URL_DETAILS","URL_SAVE","UPDATE_ERROR","REQUIRED_DESCRIPTION","REQUIRED_5_DESCRIPTION","REQUIRED_TARGET_DATE","DASHBOARD","BILLING_PAYABLES_URL","ADDRESS_LIST","ADDRESS_DETAIL","USER_ADDRESS_DETAIL","ADDRESS_TYPE","USER","STUDENT","PARENT","withStyles","fontWeight","head","TableRow","hover","fontStyle","body","StyledTableCell","urlDetailsPattern"],"mappings":"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","file":"static/js/main.806551b0.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\nexport const resetSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem\r\n }\r\n}\r\n\r\nexport const setSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem,\r\n  ...action.payload\r\n }\r\n}\r\n\r\nexport const updateSelectedItemCommon = (state, action) => {\r\n let temp = {\r\n  ...state.selectedItem,\r\n  ...action.payload\r\n }\r\n state.selectedItem = temp\r\n}\r\n\r\nexport const setPageableCommon = (state, action) => {\r\n state.pageable = action.payload\r\n}\r\n\r\nexport const updatePageableCommon = (state, action) => {\r\n state.pageable = {\r\n  ...state.pageable,\r\n  ...action.payload\r\n }\r\n}\r\n\r\nexport const setPageableEntityCommon = (state, action, blankPageable) => {\r\n let temp = {\r\n  ...blankPageable\r\n }\r\n temp.list = [action.payload]\r\n state.pageable = temp\r\n}\r\nexport const setSearchValueCommon = (state, action) => {\r\n state.searchValue = action.payload\r\n}\r\n\r\nexport const setOptionsListCommon = (state, action) => {\r\n state.selectedItem = {\r\n  ...state.selectedItem,\r\n  optionsList: { ...action.payload }\r\n }\r\n}\r\n\r\nexport default function CommonSlice() {\r\n\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\nimport { INIT_STATUS } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nexport const blankSelectedItem = {\r\n\tcurrentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tperiodList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.currentPeriod == null) {\r\n\t\tdata.currentPeriod = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const SchoolSlice = createSlice({\r\n\tname: 'school',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, updateSelectedItem, setOptionsList } = SchoolSlice.actions\r\n\r\nexport const selectPageable = state => state.school.pageable\r\nexport const selectSelectedItem = state => state.school.selectedItem\r\nexport const selectSearchValue = state => state.school.searchValue\r\n\r\nexport default SchoolSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\toptionsList: {\r\n\t}\r\n}\r\nexport const CodeGroupsSlice = createSlice({\r\n\tname: 'codeGroups',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity } = CodeGroupsSlice.actions\r\n\r\nexport const selectPageable = state => state.codeGroups.pageable\r\nexport const selectSelectedItem = state => state.codeGroups.selectedItem\r\nexport const selectSearchValue = state => state.codeGroups.searchValue\r\n\r\n\r\nexport default CodeGroupsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tschool: { id: '' },\r\n\toptionsList: {\r\n\t\tschoolList: [],\r\n\t}\r\n}\r\n\r\nexport const UsersSlice = createSlice({\r\n\tname: 'users',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem } = UsersSlice.actions\r\n\r\nexport const selectPageable = state => state.users.pageable\r\nexport const selectSelectedItem = state => state.users.selectedItem\r\nexport const selectSearchValue = state => state.users.searchValue\r\n\r\n\r\nexport default UsersSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\toptionsList: {\r\n\t\tstudentLevelList: []\r\n\t}\r\n}\r\n\r\nexport const StudentSlice = createSlice({\r\n\tname: 'students',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tbirthDate: moment(action.payload.birthDate).format('YYYY-MM-DD'),\r\n\t\t\t\toptionsList: {\r\n\t\t\t\t\tstudentLevelList: []\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, setSearchValue, updateSelectedItem, setOptionsList } = StudentSlice.actions\r\n\r\nexport const selectPageable = state => state.students.pageable\r\nexport const selectSelectedItem = state => state.students.selectedItem\r\nexport const selectSearchValue = state => state.students.searchValue\r\n\r\n\r\nexport default StudentSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, setPageableCommon, setPageableEntityCommon, updateSelectedItemCommon } from '../CommonSlice';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\tperiod: { 'id': '' },\r\n\tactive: true,\r\n\ttext: false,\r\n\tlist: [],\r\n\toptionsList: {\r\n\t\tlevelList: [],\r\n\t\tperiodList: [],\r\n\t\tapplyToAllList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.period == null) {\r\n\t\tdata.period = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const GradeLevelSlice = createSlice({\r\n\tname: 'gradeLevels',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconsole.log(`[GradeLevelSlice.setSelectedItem] action=`, action)\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t\tconsole.log(`[GradeLevelSlice.setSelectedItem] state.selectedItem=`, state.selectedItem)\r\n\t\t},\r\n\r\n\t\tsetOptionsList: (state, action) => {\r\n\t\t\tconsole.log(`[GradeLevelSlice.setOptionsList] START =====>`)\r\n\t\t\tconsole.log(`[GradeLevelSlice.setOptionsList] action=>`, action)\r\n\t\t\tconst optionsList = action.payload.optionsList\r\n\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...state.selectedItem,\r\n\t\t\t\tlist: [],\r\n\t\t\t\toptionsList: { ...optionsList }\r\n\t\t\t}\r\n\r\n\t\t\tlet list = action.payload.accountPayablesSettings? action.payload.accountPayablesSettings : []\r\n\t\t\tlet applyToAllList = optionsList.applyToAllList;\r\n\t\t\tif (list.length === 0) {\r\n\t\t\t\tlist = [...applyToAllList];\r\n\t\t\t\tlist.map(i => i.status = 'NEW');\r\n\t\t\t} else {\r\n\t\t\t\tlet tempList = [];\r\n\t\t\t\tapplyToAllList.map(row => {\r\n\t\t\t\t\tconst filterCount = list.filter(item => row.id === item.id).length;\r\n\t\t\t\t\tif (filterCount === 0) {\r\n\t\t\t\t\t\tlet rowTemp = {\r\n\t\t\t\t\t\t\t...row,\r\n\t\t\t\t\t\t\tstatus: 'NEW'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttempList.push(rowTemp)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn row\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet tempList2 = [\r\n\t\t\t\t\t...tempList,\r\n\t\t\t\t\t...list\r\n\t\t\t\t];\r\n\t\t\t\tlist = tempList2;\r\n\t\t\t}\r\n\t\t\tlist = list.sort((o1, o2) => {\r\n\t\t\t\treturn o1.priority - o2.priority;\r\n\t\t\t})\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...state.selectedItem,\r\n\t\t\t\tlist: list,\r\n\t\t\t\toptionsList: { ...optionsList }\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\t// updateSelectedItem: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...state.selectedItem,\r\n\t\t// \t\t...action.payload\r\n\t\t// \t}\r\n\t\t// \tstate.selectedItem = temp\r\n\t\t// },\r\n\r\n\t\t// setPageable: (state, action) => {\r\n\t\t// \tstate.pageable = action.payload\r\n\t\t// },\r\n\r\n\t\t// setPageableEntity: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...blankPageable\r\n\t\t// \t}\r\n\t\t// \ttemp.list = [action.payload]\r\n\t\t// \tstate.pageable = temp\r\n\t\t// },\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, resetSelectedItem, setOptionsList, updateSelectedItem, setPageable, setPageableEntity, setSearchValue } = GradeLevelSlice.actions\r\n\r\nexport const selectPageable = state => state.gradeLevels.pageable\r\nexport const selectSelectedItem = state => state.gradeLevels.selectedItem\r\nexport const selectSearchValue = state => state.gradeLevels.searchValue\r\n\r\n\r\nexport default GradeLevelSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tperiod: { 'id': 'All' },\r\n\tactive: { 'id': 'All' },\r\n\tpaymentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tpaymentPeriodList: [],\r\n\t\tperiodList: []\r\n\t}\r\n}\r\nexport const AccountPayablesSettingsSlice = createSlice({\r\n\tname: 'accountPayablesSettings',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setOptionsList } = AccountPayablesSettingsSlice.actions\r\n\r\nexport const selectPageable = state => state.accountPayablesSettings.pageable\r\nexport const selectSelectedItem = state => state.accountPayablesSettings.selectedItem\r\nexport const selectSearchValue = state => state.accountPayablesSettings.searchValue\r\n\r\n\r\nexport default AccountPayablesSettingsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon, updatePageableCommon } from '../CommonSlice'\r\n\r\n\r\nexport const optionsList = {\r\n\tbillingSearchBy: [{\r\n\t\tid: '1',\r\n\t\tvalue: 'LRN',\r\n\t\tlabel: 'LRN'\r\n\t}, {\r\n\t\tid: '2',\r\n\t\tvalue: 'STUDENT_NAME',\r\n\t\tlabel: 'Student Name'\r\n\t}]\r\n}\r\nexport const blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tsearchBy: '',\r\n\tsearchFlag: true,\r\n\tpayablesFlag: false,\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t},\r\n\toptionsList: optionsList\r\n}\r\nconst blankSelectedItem = {\r\n\tstudentId: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\tlevel: {\r\n\t\tid: '',\r\n\t\tvalue: '',\r\n\t\tdescription: ''\r\n\t},\r\n\tschool: {\r\n\t\tid: ''\r\n\t}\r\n}\r\n\r\nconst blankConfirmPayables = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tentity: {\r\n\t\tstudentId: '',\r\n\t\tfirstName: '',\r\n\t\tlastName: '',\r\n\t\tlevel: {\r\n\t\t\tid: '',\r\n\t\t\tvalue: '',\r\n\t\t\tdescription: ''\r\n\t\t}\r\n\t},\r\n\tpayables: [],\r\n\tpayablesByInvoiceNo: [],\r\n\topen: false\r\n}\r\n\r\nexport const BillingSlice = createSlice({\r\n\tname: 'billing',\r\n\tinitialState: {\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t},\r\n\t\tconfirmPayables: {\r\n\t\t\t...blankConfirmPayables\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tupdatePageable: (state, action) => updatePageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\r\n\t\tsetConfirmPayables: (state, action) => {\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] action.payload==>`, action.payload)\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] 1 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t\tstate.confirmPayables = {\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] 2 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t},\r\n\t\tupdateConfirmPayables: (state, action) => {\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] action.payload==>`, action.payload)\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] 1 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t\tstate.confirmPayables = {\r\n\t\t\t\t...state.confirmPayables,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] 2 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, updatePageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem, setConfirmPayables, updateConfirmPayables } = BillingSlice.actions\r\n\r\nexport const selectPageable = state => state.billing.pageable\r\nexport const selectSelectedItem = state => state.billing.selectedItem\r\nexport const selectSearchValue = state => state.billing.searchValue\r\nexport const selectConfirmPayables = state => state.billing.confirmPayables\r\n\r\n\r\nexport default BillingSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, setPageableCommon, setPageableEntityCommon, updateSelectedItemCommon } from '../CommonSlice';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\tperiod: { 'id': '' },\r\n\tactive: true,\r\n\tlist: [],\r\n\toptionsList: {\r\n\t\tlevelList: [],\r\n\t\tperiodList: [],\r\n\t\tapplyToAllList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.period == null) {\r\n\t\tdata.period = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const ProcessingSlice = createSlice({\r\n\tname: 'processing',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetOptionsList: (state, action) => {\r\n\t\t\tconsole.log(`[ProcessingSlice.setOptionsList] action=`, action)\r\n\t\t\tconst optionsList = action.payload\r\n\t\t\tlet list = state.selectedItem.accountPayablesSettings ? state.selectedItem.accountPayablesSettings : []\r\n\t\t\tlet applyToAllList = optionsList.applyToAllList;\r\n\t\t\tif (list.length === 0) {\r\n\t\t\t\tlist = [...applyToAllList]\r\n\t\t\t\tlist.map(i => i.status = 'NEW')\r\n\t\t\t} else {\r\n\t\t\t\tlet temp = [];\r\n\t\t\t\tlet tempList = [];\r\n\r\n\t\t\t\tlist.map(({ id }) => temp.push(id));\r\n\t\t\t\tapplyToAllList.map(row => {\r\n\t\t\t\t\tif (temp.indexOf(row.id) === -1) {\r\n\t\t\t\t\t\tlet rowTemp = {\r\n\t\t\t\t\t\t\t...row,\r\n\t\t\t\t\t\t\tstatus: 'NEW'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttempList.push(rowTemp)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn row\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet tempList2 = [\r\n\t\t\t\t\t...tempList,\r\n\t\t\t\t\t...list\r\n\t\t\t\t];\r\n\t\t\t\tlist = tempList2;\r\n\t\t\t}\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...state.selectedItem,\r\n\t\t\t\tlist: list,\r\n\t\t\t\toptionsList: { ...optionsList }\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\t// updateSelectedItem: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...state.selectedItem,\r\n\t\t// \t\t...action.payload\r\n\t\t// \t}\r\n\t\t// \tstate.selectedItem = temp\r\n\t\t// },\r\n\r\n\t\t// setPageable: (state, action) => {\r\n\t\t// \tstate.pageable = action.payload\r\n\t\t// },\r\n\r\n\t\t// setPageableEntity: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...blankPageable\r\n\t\t// \t}\r\n\t\t// \ttemp.list = [action.payload]\r\n\t\t// \tstate.pageable = temp\r\n\t\t// },\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, resetSelectedItem, setOptionsList, updateSelectedItem, setPageable, setPageableEntity, setSearchValue } = ProcessingSlice.actions\r\n\r\nexport const selectPageable = state => state.processing.pageable\r\nexport const selectSelectedItem = state => state.processing.selectedItem\r\nexport const selectSearchValue = state => state.processing.searchValue\r\n\r\n\r\nexport default ProcessingSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport SchoolReducer from './school/SchoolSlice';\r\nimport CodeGroupsReducer from './codeGroups/CodeGroupsSlice';\r\nimport UsersReducer from './endUser/UsersSlice';\r\nimport StudentReducer from './student/StudentSlice';\r\nimport GradeLevelReducer from './gradeLevelPayables/GradeLevelSlice';\r\nimport AccountPayablesSettingsReducer from './accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport BillingReducer from './billing/BillingSlice';\r\nimport ProcessingReducer from './processing/ProcessingSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        school: SchoolReducer,\r\n        codeGroups: CodeGroupsReducer,\r\n        users: UsersReducer,\r\n        students: StudentReducer,\r\n        gradeLevels: GradeLevelReducer,\r\n        accountPayablesSettings: AccountPayablesSettingsReducer,\r\n        billing: BillingReducer,\r\n        processing: ProcessingReducer\r\n    },\r\n});","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"container\">Oooops!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorComponent;","import { Box, Divider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FooterComponent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nfunction Copyright() {\r\n    return (\r\n        <>\r\n            <Box mx=\"auto\" pt={3}><Divider />\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\r\n                    Sara Project{' '} {' © '}\r\n                    {new Date().getFullYear()}\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nexport default FooterComponent;","import { TablePagination } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst PaginationComponent = (props) => {\r\n return (\r\n  <TablePagination rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n   component=\"div\"\r\n   page={props.paging.currentPage}\r\n   count={props.paging.totalElements}\r\n   rowsPerPage={props.paging.rowsPerPage}\r\n   onChangePage={props.onChangePage}\r\n   onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n  />\r\n )\r\n}\r\nexport default PaginationComponent;","\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Table, TableHead, TableCell, TableBody, FormControl, Input, Grid, IconButton, TableContainer, Paper } from '@material-ui/core';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils'\r\nimport PaginationComponent from './PaginationComponent';\r\n\r\nexport default function CustomTableGrid(props) {\r\n const { showPaging = true, showSearch = true, showAction = true } = props;\r\n\r\n const { register } = useForm();\r\n const [counter, setCounter] = useState(0);\r\n\r\n const doHandleKeyDown = (e) => {\r\n  if (e.key === 'Enter') {\r\n   props.doSearch(e.target.value)\r\n   e.preventDefault();\r\n  }\r\n  setCounter(counter + 1)\r\n }\r\n\r\n return (\r\n  <>\r\n   <Grid container spacing={3}>\r\n    {\r\n     showSearch &&\r\n     <Grid item xs={12} sm={8}>\r\n      <FormControl variant=\"filled\">\r\n       <Input name=\"searchValue\"\r\n        defaultValue={props.store.searchValue}\r\n        onKeyDown={e => doHandleKeyDown(e)}\r\n        placeholder=\"Search\"\r\n        inputRef={register}\r\n        endAdornment={<SearchIcon onClick={() => props.doRetrieve()} />}\r\n       />\r\n       {props.children}\r\n      </FormControl>\r\n     </Grid>\r\n    }\r\n\r\n    {\r\n     showPaging &&\r\n     <Grid item xs={12} sm={4}>\r\n      <PaginationComponent\r\n       paging={props.store.paging}\r\n       onChangePage={props.onChangePage}\r\n       onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n      />\r\n     </Grid>\r\n    }\r\n\r\n   </Grid>\r\n\r\n   <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n    <Table>\r\n     <TableHead>\r\n      <StyledTableHeadRow>\r\n       {props.cols.map(params => (\r\n        <>\r\n         <StyledTableHeadCell key={params.field}>{params.headerName}</StyledTableHeadCell>\r\n        </>\r\n       ))}\r\n       {showAction && <StyledTableHeadCell align=\"right\">\r\n        Action\r\n        <IconButton aria-label=\"add\" onClick={() => props.doNew()}>\r\n         <AddIcon fontSize=\"large\" />\r\n        </IconButton>\r\n       </StyledTableHeadCell>}\r\n\r\n      </StyledTableHeadRow>\r\n     </TableHead>\r\n     <TableBody>\r\n      {props.store.list.map(row => (\r\n       <StyledTableRow key={row.id}>\r\n        {props.cols.map(params => (\r\n         <TableCell>{params.render ? params.render(row) : row[params.field]}</TableCell>\r\n        ))}\r\n        {showAction && <TableCell align=\"right\">\r\n         <IconButton aria-label=\"edit\" onClick={() => props.doEdit(row)}>\r\n          <EditIcon fontSize=\"large\" />\r\n         </IconButton>\r\n         <IconButton aria-label=\"delete\" onClick={() => props.doDelete(row.id)}>\r\n          <DeleteIcon fontSize=\"large\" />\r\n         </IconButton>\r\n        </TableCell>}\r\n\r\n       </StyledTableRow>\r\n      ))}\r\n     </TableBody>\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   {props.showPaging && <PaginationComponent\r\n    paging={props.store.paging}\r\n    doHandleChangePage={props.doHandleChangePage}\r\n    doHandleChangeRowsPerPage={props.doHandleChangeRowsPerPage}\r\n   />}\r\n\r\n  </ >\r\n );\r\n}","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"user\";\r\n\r\nconst sort = \"lastName, firstName\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => {\r\n console.log(`[EndUserService.save] data=`, data)\r\n return axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n}\r\n\r\n\r\nconst EndUserService = () => {\r\n const test = () => {\r\n\r\n }\r\n return [test]\r\n}\r\n\r\nexport default EndUserService\r\n\r\n\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst TitleComponent = (props) => {\r\n return (\r\n  <Box pb={1}>\r\n   <Typography variant=\"h4\">\r\n    {props.children}\r\n   </Typography>\r\n  </Box>\r\n )\r\n}\r\n\r\nexport default TitleComponent","import { createContext, useContext, useState } from 'react';\r\n\r\nconst GlobalVariableContext = createContext();\r\n\r\nfunction useGlobalVariable() {\r\n    const context = useContext(GlobalVariableContext)\r\n    if (!context) {\r\n        throw new Error(`useGlobalVariable must be used within an GlobalVariableProvider`)\r\n    }\r\n    return context;\r\n}\r\n\r\nfunction GlobalVariableProvider(props) {\r\n    const USER_TEMP = {\r\n        userName: '',\r\n        userFullName: 'Guest',\r\n        schoolName: 'SARA PROJECT',\r\n        schoolAddress: '',\r\n        schoolLogo: '',\r\n        schoolId: '',\r\n    }\r\n    const [userLogin, setUserLogin] = useState(USER_TEMP)\r\n    const [globalProps, setGlobalProps] = useState({\r\n        ui: {\r\n            darkMode: false\r\n        },\r\n        alert: {\r\n            title: '',\r\n            label: 'Ok',\r\n            open: false,\r\n            severity: 'info',\r\n            msg: '',\r\n            value: {}\r\n        }\r\n    })\r\n\r\n    const clearUser = () => {\r\n        setUserLogin(USER_TEMP)\r\n    }\r\n\r\n    const setAlertProps = (prop) => {\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            alert: {\r\n                ...globalProps.alert,\r\n                ...prop\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const setUIProps = (prop) => {\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            ui: {\r\n                ...globalProps.ui,\r\n                ...prop\r\n            }\r\n        })\r\n    }\r\n\r\n    const value = {\r\n        globalProps: globalProps,\r\n        USER_TEMP: USER_TEMP,\r\n        userLogin: userLogin,\r\n        clearUser: clearUser,\r\n        setUserLogin: setUserLogin,\r\n        setAlertProps: setAlertProps,\r\n        setUIProps: setUIProps\r\n    }\r\n    return <GlobalVariableContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { GlobalVariableProvider, useGlobalVariable }\r\n\r\n","\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nconst useMessageAlert = () => {\r\n\r\n    const { globalProps, setAlertProps, } = useGlobalVariable();\r\n\r\n    const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n        showMsgAlert('Error', errMsg, 'error')\r\n    }\r\n\r\n    const showErrorAlert = (msg) => {\r\n        showMsgAlert('Error', msg, 'error')\r\n    }\r\n\r\n    const showInfoAlert = (msg) => {\r\n        showMsgAlert('Information', msg, 'info')\r\n    }\r\n\r\n    const showWarningAlert = (msg) => {\r\n        showMsgAlert('Warning', msg, 'warning')\r\n    }\r\n\r\n    const showSuccessAlert = (msg) => {\r\n        showMsgAlert('Alert', msg, 'success')\r\n    }\r\n\r\n    const showMsgAlert = (title, msg, severity) => {\r\n        setAlertProps({\r\n            title: title,\r\n            open: true,\r\n            severity: severity,\r\n            msg: msg\r\n        })\r\n    }\r\n    const closeMsgAlert = () => {\r\n        setAlertProps({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    const getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        console.error(`[useMessageAlert.getFormatedErrorMessage] error=>`, JSON.stringify(error));\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.error(`[${formMethod}] ${serviceName} error `, JSON.stringify(error));\r\n\r\n        if (error.message) {\r\n            console.error(`[useMessageAlert.getFormatedErrorMessage] error.message=>`, JSON.stringify(error.message));\r\n            errMsg = error.message\r\n        }\r\n\r\n        if (error.response) {\r\n            console.error(`[useMessageAlert.getFormatedErrorMessage] error.response=>`, JSON.stringify(error.response));\r\n            // Request made and server responded\r\n            console.log('error.response.data', error.response.data);\r\n            console.log('error.response.status', error.response.status);\r\n            console.log('error.response.headers', error.response.headers);\r\n            if (error.response.data.error && error.response.data.status) {\r\n                errMsg = `[${error.response.data.status}: ${error.response.data.error}] - ${error.response.data.message}`\r\n            } else {\r\n                errMsg = `${error.response.data}`\r\n            }\r\n        }\r\n\r\n        console.error(`[${formMethod}] ${serviceName} error msg: ${errMsg}`);\r\n        return errMsg;\r\n    }\r\n\r\n    return {\r\n        props: globalProps.alert,\r\n        getFormatedErrorMessage: getFormatedErrorMessage,\r\n        closeMsgAlert: closeMsgAlert,\r\n        showErrorMsgAlert: showErrorMsgAlert,\r\n        showErrorAlert: showErrorAlert,\r\n        showInfoAlert: showInfoAlert,\r\n        showWarningAlert: showWarningAlert,\r\n        showSuccessAlert: showSuccessAlert\r\n    }\r\n}\r\nexport default useMessageAlert","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { OPTIONS } from '../../api/Utils';\r\n\r\nexport default function ConfirmMsgDialog(props) {\r\n    const { open, closeDialog, title, msg, type = OPTIONS.YESNO } = props\r\n\r\n    const setReturnValue = (value) => {\r\n        props.closeDialog();\r\n        props.setDialogSelection(value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {console.log(`[ConfirmMsgDialog.return] type=${type}`)}\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <Alert severity=\"info\" align=\"right\">\r\n                        <Typography variant=\"h6\">\r\n                            {title}\r\n                        </Typography>\r\n                    </Alert>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {msg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    {type === OPTIONS.YESNO && <>\r\n                        <Button onClick={() => setReturnValue(OPTIONS.YES)}>{OPTIONS.YES}</Button>\r\n                        <Button onClick={() => setReturnValue(OPTIONS.NO)}>{OPTIONS.NO}</Button>\r\n                    </>}\r\n                    {type === OPTIONS.OKCANCEL && <>\r\n                        <Button onClick={() => setReturnValue(OPTIONS.OK)}>{OPTIONS.OK}</Button>\r\n                        <Button onClick={() => setReturnValue(OPTIONS.CANCEL)}>{OPTIONS.CANCEL}</Button>\r\n                    </>}\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nimport { PAGE_URL, INIT_STATUS, ERROR_CODE, OPTIONS } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/endUser/EndUserService';\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/endUser/UsersSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function EndUserListComponent(props) {\r\n\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.getList'))\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}/-1`);\r\n  }\r\n\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'firstName',\r\n      headerName: 'First Name',\r\n    },\r\n    {\r\n      field: 'lastName',\r\n      headerName: 'Last Name',\r\n      render: function (row) {\r\n        return row.firstName + ' ' + row.lastName;\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Users</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { Box, Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst EndUserDetailHtml = props => {\r\n      const { control, register, handleSubmit } = useForm();\r\n      const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n      const history = useHistory();\r\n\r\n      useEffect(() => {\r\n            if (status === INIT_STATUS.LOAD) {\r\n                  props.doRetrieve(props.store.entityId);\r\n                  setStatus(INIT_STATUS.RESET)\r\n            }\r\n      }, [props.store])\r\n\r\n      return (\r\n            <>\r\n                  {console.log(`[EndUserDetailHtml.return] props.store==>`, props.store)}\r\n                  <TitleComponent>User Detail</TitleComponent>\r\n                  {props.message && <Alert severity=\"info\">{props.message}</Alert>}\r\n                  <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                        <TextField type=\"hidden\"\r\n                              name=\"id\"\r\n                              inputRef={register}\r\n                              defaultValue={props.store.id}\r\n                        />\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"userName\"\r\n                                          name=\"userName\"\r\n                                          label=\"User Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-userName\"\r\n                                          variant=\"filled\"\r\n                                          autoFocus\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.userName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          id=\"password\"\r\n                                          type=\"password\"\r\n                                          name=\"password\"\r\n                                          label=\"Password\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-password\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.password}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"firstName\"\r\n                                          name=\"firstName\"\r\n                                          label=\"First Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-firstName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.firstName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={612}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"lastName\"\r\n                                          name=\"lastName\"\r\n                                          label=\"Last Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-lastName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.lastName}\r\n                                    />\r\n                              </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                              <Box pt={3}>\r\n                                    {/* <TextField id=\"school\"\r\n                                          select\r\n                                          required\r\n                                          name=\"school.id\"\r\n                                          label=\"School\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-school\"\r\n                                          variant=\"filled\"\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.school.id}\r\n                                          error={!!errors.name}\r\n                                    >\r\n                                          {props.store.optionsList.schoolList.map(row => (\r\n                                                <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                          ))}\r\n                                    </TextField> */}\r\n                                    <Controller\r\n                                          as={\r\n                                                <TextField id=\"school\"\r\n                                                      required\r\n                                                      select\r\n                                                      label=\"School\"\r\n                                                      fullWidth\r\n                                                      autoComplete=\"student-school\"\r\n                                                      variant=\"filled\"\r\n                                                      InputLabelProps={{ shrink: true }}\r\n                                                      inputRef={register}\r\n                                                // error={!!errors.name}\r\n                                                >\r\n                                                      {props.store.optionsList.schoolList.map(row => (\r\n                                                            <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                                      ))}\r\n                                                </TextField>\r\n                                          }\r\n                                          name=\"school.id\"\r\n                                          control={control}\r\n                                          defaultValue={props.store.school.id}\r\n                                          options={props.store.optionsList.studentLevelList}\r\n                                    />\r\n                              </Box>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                  </form>\r\n            </ >\r\n      );\r\n};\r\n\r\nexport default EndUserDetailHtml;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getOptions, save } from '../../api/endUser/EndUserService';\r\nimport EndUserDetailHtml from './EndUserDetailHtml';\r\nimport { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport { resetSelectedItem, selectSelectedItem, setOptionsList, setPageableEntity } from '../../api/endUser/UsersSlice';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function EndUserDetailComponent(props) {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n\r\n    setMessage(`Loading. Please wait...`);\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage(``);\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'EndUserDetailComponent.doRetrieve', 'EndUserService.getOptions'))\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage(``);\r\n        props.history.push(PAGE_URL.USER_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'EndUserDetailComponent.onSubmitForm', 'EndUserService.save'))\r\n  }\r\n\r\n\r\n  return (\r\n    <EndUserDetailHtml store={selectedItem}\r\n      doRetrieve={doRetrieve}\r\n      onSubmitForm={onSubmitForm}\r\n      message={message} />\r\n\r\n  );\r\n}\r\n\r\n\r\n","import axios from \"axios\"\r\nimport { AUTH_URL_BASE, AUTH_USER, AUTH_USER_OBJ, JWT_TOKEN } from \"../api/Utils\"\r\n\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nlet myInterceptor\r\n\r\nconst useSecurityServices = () => {\r\n const { userLogin, setUserLogin, clearUser } = useGlobalVariable();\r\n\r\n const initAxios = () => {\r\n  if (isUserLoggedIn()) {\r\n   let jwtTokenHeader = getJwtTokenHeader()\r\n   setupAxiosInterceptors(jwtTokenHeader);\r\n  }\r\n }\r\n\r\n const initUser = () => {\r\n  let lu = getLoggedUserObj()\r\n  if (lu == null) {\r\n   clearUser()\r\n  } else {\r\n   setUserLogin(lu);\r\n  }\r\n\r\n }\r\n\r\n const executeJwtAuthenticationService = (username, password) => {\r\n  console.log('[useSecurityServices.executeJwtAuthenticationService]');\r\n\r\n  return axios.post(`${AUTH_URL_BASE}`, { username, password })\r\n }\r\n\r\n const registerJwtSucessfulLogin = (userLogin, jwtToken) => {\r\n  console.log('[useSecurityServices.registerJwtSucessfulLogin] jwtToken=', jwtToken);\r\n  console.log('[useSecurityServices.registerJwtSucessfulLogin] userObj=', userLogin);\r\n  sessionStorage.setItem(AUTH_USER_OBJ, JSON.stringify(userLogin));\r\n  sessionStorage.setItem(AUTH_USER, userLogin.userName);\r\n  sessionStorage.setItem(JWT_TOKEN, jwtToken);\r\n\r\n\r\n  let jwtTokenHeader = getJwtTokenHeader()\r\n  setupAxiosInterceptors(jwtTokenHeader);\r\n }\r\n\r\n const getJwtTokenHeader = () => {\r\n  let jwtToken = getJwtToken();\r\n  let jwtTokenHeader = `Bearer ${jwtToken}`;\r\n  return jwtTokenHeader;\r\n }\r\n\r\n const getJwtToken = () => sessionStorage.getItem(JWT_TOKEN)\r\n\r\n const setupAxiosInterceptors = (authHeader) => {\r\n  console.log('[useSecurityServices.setupAxiosInterceptors] init..');\r\n  console.log(`[useSecurityServices.setupAxiosInterceptors] authHeader: ${authHeader}`);\r\n  myInterceptor = axios.interceptors.request.use(\r\n   async config => {\r\n    if (isUserLoggedIn()) {\r\n     config.headers.authorization = authHeader;\r\n    }\r\n    return config;\r\n   }\r\n  );\r\n  console.log('[useSecurityServices.setupAxiosInterceptors] done!');\r\n }\r\n\r\n const isUserLoggedIn = () => {\r\n  let user = getSessionStorageLoginUser()\r\n  return (user != null);\r\n }\r\n\r\n const getSessionStorageLoginUser = () => sessionStorage.getItem(AUTH_USER)\r\n\r\n const getLoggedUserObj = () => {\r\n  let user = JSON.parse(sessionStorage.getItem(AUTH_USER_OBJ));\r\n  console.error('[useSecurityServices.getLoggedUserObj] 1 user=>', user);\r\n  if (!user) {\r\n   user = null;\r\n  }\r\n  console.error('[useSecurityServices.getLoggedUserObj] 2 user=>', user);\r\n  return user;\r\n  // return {}\r\n }\r\n\r\n const logout = () => {\r\n  axios.interceptors.request.eject(myInterceptor);\r\n  sessionStorage.removeItem(AUTH_USER);\r\n  sessionStorage.removeItem(AUTH_USER_OBJ);\r\n  sessionStorage.removeItem(JWT_TOKEN);\r\n\r\n  clearUser()\r\n  console.log('[useSecurityServices.logout]  userLogin=>', userLogin);\r\n }\r\n\r\n return {\r\n  initAxios: initAxios,\r\n  initUser: initUser,\r\n  executeJwtAuthenticationService: executeJwtAuthenticationService,\r\n  registerJwtSucessfulLogin: registerJwtSucessfulLogin,\r\n  getLoggedUserObj: getLoggedUserObj,\r\n  isUserLoggedIn: isUserLoggedIn,\r\n  logout: logout\r\n }\r\n\r\n}\r\n\r\nexport default useSecurityServices;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport useSecurityServices from './useSecurityServices'\r\n\r\nconst AuthenticatedRoute = (props) => {\r\n    const { isUserLoggedIn } = useSecurityServices()\r\n\r\n    const isLoggedin = isUserLoggedIn()\r\n    console.log(`[AuthenticatedRoute] isLoggedin=>`, isLoggedin)\r\n    if (isLoggedin) {\r\n        return <Route {...props} />;\r\n    } else {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        backgroundColor:\r\n            theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    login_paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    login_avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    login_form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login_submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n    avatar_40: {\r\n        width: theme.spacing(40),\r\n        height: theme.spacing(40),\r\n    },\r\n    avatar_70: {\r\n        width: theme.spacing(70),\r\n        height: theme.spacing(70),\r\n    }\r\n}));\r\n\r\nclass CSS {\r\n\r\n}\r\n\r\nexport default new CSS();","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useStyles } from '../forms/common/CSS'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst SignInHtml = props => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  function onSubmitForm(formData) {\r\n    props.onSignon(formData.userName, formData.password);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.login_paper}>\r\n        <Avatar className={classes.login_avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n        <form className={classes.login_form} onSubmit={handleSubmit(onSubmitForm)}>\r\n\r\n          <TextField type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userName\"\r\n            label=\"User Name\"\r\n            name=\"userName\"\r\n            autoComplete=\"userName\"\r\n            autoFocus\r\n            inputRef={register}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignInHtml;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { ERROR_CODE } from '../api/Utils.js';\r\nimport useMessageAlert from \"../api/useMessageAlert\"\r\nimport SignInHtml from './SignInHtml.js';\r\nimport useSecurityServices from './useSecurityServices.js';\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nexport default function SignInComponent() {\r\n\r\n  const { userLogin, setUserLogin } = useGlobalVariable();\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const { executeJwtAuthenticationService, registerJwtSucessfulLogin } = useSecurityServices()\r\n\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const onSignon = (userName, password) => {\r\n    console.error(`[SignInComponent.onSignon] userName=${userName}`)\r\n    setMessage('');\r\n\r\n    executeJwtAuthenticationService(userName, password)\r\n      .then(response => {\r\n        const userDetails = {\r\n          ...response.data.userDetails,\r\n          isLoggedIn: true\r\n        }\r\n        registerJwtSucessfulLogin(userDetails, response.data.token)\r\n        setUserLogin(userDetails);// setUserObj(userDetails)\r\n\r\n        console.error(`[SignInComponent.onSignon useSec.registerJwtSucessfulLogin] userDetails=`, userDetails)\r\n        console.error(`[SignInComponent.onSignon useSec.registerJwtSucessfulLogin] userLogin=`, userLogin)\r\n\r\n        setMessage('Login Successful!');\r\n        history.push(`/`);\r\n      })\r\n      // .catch(error => showErrorMsgAlert(error, ERROR_CODE.LOGIN_ERROR, 'SignInComponent.onSignon', 'useAuthServices.executeJwtAuthenticationService'))\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LOGIN_ERROR, 'SignInComponent.onSignon', 'useAuthServices.executeJwtAuthenticationService'))\r\n  }\r\n  return (\r\n    <SignInHtml message={message} onSignon={onSignon} />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport useSecurityServices from './useSecurityServices'\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nexport default function LogoutComponent() {\r\n    const { userLogin } = useGlobalVariable();\r\n    const { logout } = useSecurityServices()\r\n\r\n    useEffect(() => {\r\n        console.log('[LogoutComponent.useEffect]: userLogin', userLogin);\r\n        logout();\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <h1>You are logged out</h1>\r\n            <div className=\"container\">\r\n                Thank you. Come again!\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"codeGroups\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function CodeGroupsService() {\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList } from '../../api/codeGroups/CodeGroupsService';\r\nimport { selectPageable, resetSelectedItem, setPageable, setSelectedItem } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert  from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function CodeGroupsListComponent(props) {\r\n  const {showErrorMsgAlert} = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'CodeGroupsListComponent.retrieve', 'CodeGroupsService.getList'))\r\n\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}/-1`)\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.DELETE_ERROR, 'CodeGroupsListComponent.doDelete', 'CodeGroupsService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'code',\r\n      headerName: 'Code',\r\n    },\r\n    {\r\n      field: 'value',\r\n      headerName: 'Value',\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Code Groups List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nimport { selectSelectedItem, resetSelectedItem, setPageableEntity } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport { save } from '../../api/codeGroups/CodeGroupsService';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function CodeGroupsDetailComponent(props) {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem, status]);\r\n\r\n  const doSave = data => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.CODE_GROUPS_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[CodeGroupsDetailComponent.render] selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Code Groups Detail</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id=\"code\"\r\n              name=\"code\"\r\n              label=\"Code\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-code\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.code}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={5}>\r\n            <TextField\r\n              required\r\n              id=\"value\"\r\n              name=\"value\"\r\n              label=\"Value\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-value\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.value}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"priority\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-priority\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-description\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n            <Grid item xs={12} sm={12}>&nbsp;</Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                multiline\r\n                rows={4}\r\n                id=\"json\"\r\n                name=\"json\"\r\n                label=\"JSON\"\r\n                fullWidth\r\n                autoComplete=\"code-groups-json\"\r\n                variant=\"filled\"\r\n                InputLabelProps={{ shrink: true }}\r\n                inputRef={register}\r\n                defaultValue={selectedItem.json}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Chart extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\r\n\r\n  render() {\r\n    return (\r\n      <LineChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\nexport default class StackedBarChart extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/90v76x08/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 20, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n    <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\n\r\nconst getIntroOfPage = (label) => {\r\n if (label === 'Page A') {\r\n  return \"Page A is about men's clothing\";\r\n } if (label === 'Page B') {\r\n  return \"Page B is about women's dress\";\r\n } if (label === 'Page C') {\r\n  return \"Page C is about women's bag\";\r\n } if (label === 'Page D') {\r\n  return 'Page D is about household goods';\r\n } if (label === 'Page E') {\r\n  return 'Page E is about food';\r\n } if (label === 'Page F') {\r\n  return 'Page F is about baby food';\r\n }\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n if (active) {\r\n  return (\r\n   <div className=\"custom-tooltip\">\r\n    <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n    <p className=\"intro\">{getIntroOfPage(label)}</p>\r\n    <p className=\"desc\">Anything you want can be displayed here.</p>\r\n   </div>\r\n  );\r\n }\r\n\r\n return null;\r\n};\r\n\r\nexport default class CustomContentOfTooltip extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/vxq4ep63/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 5, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip content={<CustomTooltip />} />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" barSize={20} fill=\"#8884d8\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React from 'react';\r\nimport faker from 'faker'\r\nimport { URL_BASE } from '../../api/Utils'\r\nimport { useStyles } from '../common/CSS'\r\n\r\nimport { Avatar, Box, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport Chart from './Chart';\r\nimport StackedBarChart from './StackedBarChart';\r\nimport CustomContentOfTooltip from './CustomContentOfTooltip';\r\n\r\nimport useSecurityServices from '../../security/useSecurityServices'\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  console.log(`[Dashboard] process.env.NODE_ENV= ${process.env.NODE_ENV}`)\r\n  console.log(`[Dashboard] URL_BASE= ${URL_BASE}`)\r\n\r\n  const useSec = useSecurityServices()\r\n  const isLogin = useSec.isUserLoggedIn()\r\n\r\n  console.log(`[Dashboard] isLogin=${isLogin}`)\r\n  return (\r\n    <Typography variant=\"h4\">Welcome to Sara Project</Typography>\r\n    // <> {\r\n    //   !isLogin &&\r\n    //   <Grid container spacing={3}>\r\n    //     <Grid item xs={12} sm={4}>\r\n    //       <Avatar src={faker.image.fashion(140, 140)} className={classes.avatar_40} />\r\n    //       <h2>{faker.commerce.productName()}</h2>\r\n    //       <p>{faker.random.words(30)}</p>\r\n    //       <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n    //     </Grid>\r\n    //     <Grid item xs={12} sm={4}>\r\n    //       <Avatar src={faker.image.people(140, 140)} className={classes.avatar_40} />\r\n    //       <h2>{faker.commerce.productName()}</h2>\r\n    //       <p>{faker.random.words(30)}</p>\r\n    //       <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n    //     </Grid>\r\n    //     <Grid item xs={12} sm={4}>\r\n    //       <Avatar src={faker.image.food(140, 140)} className={classes.avatar_40} />\r\n    //       <h2>{faker.commerce.productName()}</h2>\r\n    //       <p>{faker.random.words(30)}</p>\r\n    //       <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n    //     </Grid>\r\n    //   </Grid>\r\n    // }\r\n\r\n    //   {\r\n    //     isLogin &&\r\n    //     <>\r\n    //       <Box component={Paper} elevation={3} variant=\"elevation\" px={3} py={3} m=\"auto\">\r\n    //         <Typography variant=\"h4\">Chart samples click <a href=\"https://recharts.org/en-US/examples\">here</a></Typography>\r\n    //         <Grid container spacing={5}>\r\n    //           <Grid item xs={12} sm={4}>\r\n    //             <Chart />\r\n    //           </Grid>\r\n    //           <Grid item xs={12} sm={4}>\r\n    //             <StackedBarChart />\r\n    //           </Grid>\r\n    //           <Grid item xs={12} sm={4}>\r\n    //             <CustomContentOfTooltip />\r\n    //           </Grid>\r\n    //         </Grid>\r\n    //       </Box>\r\n    //     </>\r\n    //   }\r\n    // </ >\r\n  )\r\n}","import React from 'react';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PAGE_URL } from '../../api/Utils'\r\nimport { Divider } from '@material-ui/core';\r\nimport useSecurityServices from '../../security/useSecurityServices';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function MenuListItems() {\r\n  const { isUserLoggedIn } = useSecurityServices()\r\n  const isLoggedIn = isUserLoggedIn();\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [store, setStore] = React.useState({});\r\n\r\n  const doHandleClick = (sourceName) => {\r\n    console.log(`[MenuListItems.doHandleClick] sourceName=${sourceName}, store=>`, store)\r\n\r\n    let isopen = store[sourceName] ? false : true;\r\n    setStore({\r\n      ...store,\r\n      [sourceName]: isopen\r\n    })\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    // subheader={\r\n    //  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n    //   Menu\r\n    //  </ListSubheader>\r\n    // }\r\n    >\r\n      {\r\n        isLoggedIn && <>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.BILLING)}>\r\n            <ListItemIcon>\r\n              <AccountBalanceWalletIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Billing\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Payables Settings\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIndIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Level Payables\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.STUDENT_LIST)}>\r\n            <ListItemIcon>\r\n              <LocalLibraryIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Student\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.SCHOOL_LIST)} >\r\n            <ListItemIcon>\r\n              <SchoolIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"School\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.USER_LIST)} >\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)}>\r\n            <ListItemIcon>\r\n              <CodeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Code Groups\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => doHandleClick(\"processing\")}>\r\n            <ListItemIcon>\r\n              <AllInclusiveIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Processing\" />\r\n            {store.processing ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.processing} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.CLOSE_PERIOD_DETAIL_URL)} >\r\n                <ListItemIcon>\r\n                  <ArchiveIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Close Period\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested} >\r\n                <ListItemIcon>\r\n                  <SystemUpdateAltIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Generate Billing\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </>\r\n      }\r\n\r\n      {isLoggedIn &&\r\n        <>\r\n          <Divider />\r\n          <ListItem button onClick={() => history.push(PAGE_URL.LOGOUT)} >\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </>\r\n      }\r\n\r\n      {!isLoggedIn &&\r\n        <ListItem button onClick={() => history.push(PAGE_URL.LOGIN)} >\r\n          <ListItemIcon>\r\n            <VpnKeyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Login\" />\r\n        </ListItem>}\r\n\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuListItems from './MenuListItems';\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStylesDrawer = makeStyles((theme) => ({\r\n drawer: {\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: 'nowrap',\r\n },\r\n drawerOpen: {\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n },\r\n drawerClose: {\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: theme.spacing(7) + 1,\r\n  [theme.breakpoints.up('sm')]: {\r\n   width: theme.spacing(9) + 1,\r\n  },\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n const classes = useStylesDrawer();\r\n const theme = useTheme();\r\n\r\n return (\r\n  <Drawer\r\n   variant=\"permanent\"\r\n   className={clsx(classes.drawer, {\r\n    [classes.drawerOpen]: props.drawerOpen,\r\n    [classes.drawerClose]: !props.drawerOpen,\r\n   })}\r\n   classes={{\r\n    paper: clsx({\r\n     [classes.drawerOpen]: props.drawerOpen,\r\n     [classes.drawerClose]: !props.drawerOpen,\r\n    }),\r\n   }}\r\n  >\r\n   <div className={classes.toolbar}>\r\n    <IconButton onClick={props.doHandleDrawerClose}>\r\n     {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n    </IconButton>\r\n   </div>\r\n   <Divider />\r\n   <MenuListItems />\r\n  </Drawer>\r\n );\r\n}\r\n","\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nexport const THEME = {\r\n DARK_MODE: 'dark',\r\n LIGHT_MODE: 'light',\r\n THEME_STORAGE_NAME: 'THEME_DARK_MODE'\r\n}\r\n\r\nexport const useTheme = () => {\r\n\r\n const { globalProps, setUIProps } = useGlobalVariable();\r\n\r\n const initTheme = () => {\r\n  const darkMode = localStorage.getItem(THEME.THEME_STORAGE_NAME);\r\n  setUIProps({\r\n   darkMode: darkMode === 'Y' ? true : false\r\n  });\r\n }\r\n\r\n const toggleDarkMode = () => {\r\n  setUIProps({\r\n   darkMode: !globalProps.ui.darkMode\r\n  });\r\n  localStorage.setItem(THEME.THEME_STORAGE_NAME, !globalProps.ui.darkMode ? 'Y' : 'N');\r\n }\r\n\r\n return {\r\n  props: globalProps.ui,\r\n  initTheme: initTheme,\r\n  toggleDarkMode: toggleDarkMode\r\n }\r\n}\r\n","\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { AppBar, IconButton, Toolbar, Typography, Avatar, Box, FormControlLabel, Switch, makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nimport { PAGE_URL, URL_BASE } from '../../api/Utils'\r\nimport MiniDrawer from './MiniDrawer';\r\nimport { useTheme } from '../../api/useTheme';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider'\r\n\r\nexport default function AppBarComponent() {\r\n const { userLogin } = useGlobalVariable();\r\n\r\n const useAppTheme = useTheme()\r\n\r\n const drawerWidth = 240;\r\n const useStylesAppBar = makeStyles((theme) => ({\r\n  root: {\r\n   display: 'flex',\r\n  },\r\n  appBar: {\r\n   zIndex: theme.zIndex.drawer + 1,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n   }),\r\n  },\r\n  appBarShift: {\r\n   marginLeft: drawerWidth,\r\n   width: `calc(100% - ${drawerWidth}px)`,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n   }),\r\n  },\r\n  menuButton: {\r\n   marginRight: 36,\r\n  },\r\n  hide: {\r\n   display: 'none',\r\n  },\r\n  title: {\r\n   flexGrow: 1,\r\n   display: 'none',\r\n   [theme.breakpoints.up('sm')]: {\r\n    display: 'block',\r\n    paddingLeft: theme.spacing(1)\r\n   },\r\n   //backgroundColor: fade(theme.palette.common.white, 0.25),\r\n  },\r\n }));\r\n // const [userObj, setUserObj] = useState({\r\n //  userName: '',\r\n //  userFullName: 'Guest',\r\n //  schoolName: '',\r\n //  schoolLogo: ''\r\n // });\r\n\r\n const classes = useStylesAppBar();\r\n // const userName = AuthenticationService.getLoginUserName();\r\n // const isLogin = AuthenticationService.isUserLoggedIn();\r\n\r\n // printme(userObj);\r\n\r\n const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n const doHandleDrawerOpen = () => {\r\n  setDrawerOpen(true);\r\n  console.log(`[AppBarComponent.doHandleDrawerOpen] drawerOpen=>${drawerOpen}`)\r\n }\r\n const doHandleDrawerClose = () => {\r\n  setDrawerOpen(false);\r\n  console.log(`[AppBarComponent.doHandleDrawerClose] doHandleDrawerClose=>${drawerOpen}`)\r\n }\r\n return (\r\n  < div className={classes.root} >\r\n   {console.log('[AppBarComponent.return] userLogin=>', userLogin)}\r\n   <AppBar\r\n    position=\"fixed\"\r\n    className={clsx(classes.appBar, {\r\n     [classes.appBarShift]: drawerOpen,\r\n    })}>\r\n    <Toolbar>\r\n     <IconButton\r\n      color=\"inherit\"\r\n      aria-label=\"open drawer\"\r\n      onClick={doHandleDrawerOpen}\r\n      edge=\"start\"\r\n      className={clsx(classes.menuButton, {\r\n       [classes.hide]: drawerOpen,\r\n      })}\r\n     >\r\n      <MenuIcon />\r\n     </IconButton>\r\n\r\n     {userLogin && userLogin.schoolLogo && <Avatar src={(URL_BASE + PAGE_URL.LOGO_URL + userLogin.schoolLogo)} />}\r\n     {(!userLogin || !userLogin.schoolLogo) && <SchoolIcon />}\r\n\r\n     <Typography className={classes.title} variant=\"h6\" noWrap>\r\n      <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n       {userLogin && <b>{userLogin.schoolName}</b>}\r\n      </Link>\r\n     </Typography>\r\n     {userLogin && <div>Welcome <b>{userLogin.userFullName}</b></div>}\r\n\r\n     <Box pl={5}>\r\n      <FormControlLabel control={<Switch checked={useAppTheme.props.darkMode} onChange={() => useAppTheme.toggleDarkMode()} />} />\r\n     </Box>\r\n    </Toolbar>\r\n   </AppBar>\r\n   <MiniDrawer drawerOpen={drawerOpen} doHandleDrawerClose={doHandleDrawerClose} />\r\n  </div >\r\n );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Divider, FormControlLabel, FormLabel, Grid, MenuItem, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst StudentDetailHtml = props => {\r\n\r\n  const { control, register, handleSubmit, reset } = useForm();\r\n  const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setCounter(counter + 1);\r\n    console.log(`[StudentDetailHtml.useEffect] status=>${status}, counter=${counter}`);\r\n    if (status === INIT_STATUS.LOAD) {\r\n      props.onRetrieve();\r\n      setStatus(INIT_STATUS.RESET)\r\n    }\r\n    reset(props.store)\r\n  }, [props.store])\r\n\r\n  const BUTTONS = () => {\r\n    return (\r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.STUDENT_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.STUDENT_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <TitleComponent>Student Detail</TitleComponent>\r\n      {props.message && <Alert severity=\"info\">{props.message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n        <BUTTONS />\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={props.store.id}\r\n        />\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"lrn\"\r\n              name=\"lrn\"\r\n              label=\"LRN\"\r\n              fullWidth\r\n              autoComplete=\"lrn\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lrn}\r\n            />\r\n          </Grid>\r\n          {/* <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"studentId\"\r\n              name=\"studentId\"\r\n              label=\"Student Id\"\r\n              fullWidth\r\n              autoComplete=\"studentId\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.studentId}\r\n            />\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.firstName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              autoComplete=\"family-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lastName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"level\"\r\n                  required\r\n                  select\r\n                  name=\"level.id\"\r\n                  label=\"Grade Level\"\r\n                  fullWidth\r\n                  autoComplete=\"student level\"\r\n                  variant=\"filled\"\r\n                  inputRef={register}\r\n                >\r\n                  {props.store.optionsList.studentLevelList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"level.id\"\r\n              control={control}\r\n              defaultValue={props.store.level.id}\r\n              options={props.store.optionsList.studentLevelList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthDate\"\r\n              name=\"birthDate\"\r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              fullWidth\r\n              autoComplete=\"birth-date\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.birthDate}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"birthPlace\"\r\n              name=\"birthPlace\"\r\n              label=\"Birth Place\"\r\n              fullWidth\r\n              autoComplete=\"birth-place\"\r\n              InputLabelProps={{ shrink: true }}\r\n              variant=\"filled\"\r\n              inputRef={register}\r\n              defaultValue={props.store.birthPlace}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <FormLabel component=\"gender\"\r\n              variant=\"filled\">Gender</FormLabel>\r\n            <Controller\r\n              as={\r\n                <RadioGroup row\r\n                  label=\"Gender\"\r\n                  aria-label=\"gender\"\r\n                  variant=\"filled\">\r\n                  <FormControlLabel\r\n                    value=\"Male\"\r\n                    control={<Radio\r\n                      variant=\"filled\" />}\r\n                    label=\"Male\"\r\n                    labelPlacement=\"end\"\r\n                    defaultValue={props.store.gender}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                    labelPlacement=\"end\"\r\n                    variant=\"filled\" defaultValue={props.store.gender}\r\n                  />\r\n                </RadioGroup>\r\n              }\r\n              name=\"gender\"\r\n              fullWidth\r\n              defaultValue={props.store.gender}\r\n              inputRef={register}\r\n              variant=\"filled\"\r\n              control={control}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={5}>\r\n            <TextField\r\n              required\r\n              id=\"contactNo\"\r\n              name=\"contactNo\"\r\n              label=\"Contact No\"\r\n              fullWidth\r\n              autoComplete=\"contactNo\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.contactNo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" >Address:</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n\r\n            <TextField\r\n              id=\"address.address1\"\r\n              name=\"address1\"\r\n              label=\"Address line 1\"\r\n              fullWidth\r\n              autoComplete=\"shipping address1\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address1}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"address.address2\"\r\n              name=\"address2\"\r\n              label=\"Address line 2\"\r\n              fullWidth\r\n              autoComplete=\"shipping address2\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address2}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.city\"\r\n              name=\"city\"\r\n              label=\"City\"\r\n              fullWidth\r\n              autoComplete=\"shipping address city\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.city}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.zip\"\r\n              name=\"zipCode\"\r\n              label=\"Zip / Postal code\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-code\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.zipCode}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField editable={false}\r\n              required\r\n              id=\"address.country\"\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-country\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.country}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}><Typography variant=\"h6\" >Parent/Guardian:</Typography></Grid>\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"fathersName\"\r\n              name=\"fathersName\"\r\n              label=\"Father's Name\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"fathersOccupation\"\r\n              name=\"fathersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"mothersName\"\r\n              name=\"mothersName\"\r\n              label=\"Mother's Name\"\r\n              fullWidth\r\n              autoComplete=\"mothersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"mothersOccupation\"\r\n              name=\"mothersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"mothersOccupation\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersOccupation}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"parentCivilStatus\"\r\n              name=\"parentCivilStatus\"\r\n              label=\"Parent CivilStatus\"\r\n              fullWidth\r\n              autoComplete=\"parentCivilStatus\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.parentCivilStatus}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} />\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"guardianName\"\r\n              name=\"guardianName\"\r\n              label=\"Guardian Name\"\r\n              fullWidth\r\n              autoComplete=\"guardianName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.guardianName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <BUTTONS />\r\n\r\n      </form>\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\nexport default StudentDetailHtml;","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"student\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlDetailsPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport  const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport  const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function StudentService  () {\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport StudentDetailHtml from './StudentDetailHtml.js';\r\nimport { save, getOptions } from '../../api/student/StudentService'\r\nimport { selectSelectedItem, setOptionsList, setPageableEntity, resetSelectedItem } from '../../api/student/StudentSlice';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function StudentDetailComponent(props) {\r\n\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log('[StudentDetailComponent.onSubmitForm] data==>', data)\r\n\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        props.history.push(PAGE_URL.STUDENT_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'StudentDetailComponent.onSubmitForm', 'StudentService.save'));\r\n  }\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[StudentDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    setMessage(`Loading. Please wait...`);\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage(``)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'StudentDetailComponent.onRetrieve', 'StudentService.getOptions'));\r\n  }\r\n\r\n  return (\r\n    <StudentDetailHtml\r\n      store={selectedItem}\r\n      message={message}\r\n      onSubmitForm={onSubmitForm}\r\n      onRetrieve={onRetrieve}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils';\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/student/StudentService'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/student/StudentSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function StudentListComponent(props) {\r\n\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [currPageable]);\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.retrieve', 'StudentService.getList'))\r\n\r\n\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[StudentListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.doDelete', 'StudentService.deleteItem'))\r\n  }\r\n\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  const cols = [\r\n    // {\r\n    //   field: 'studentId',\r\n    //   headerName: 'Student ID',\r\n    // },\r\n    {\r\n      field: 'lrn',\r\n      headerName: 'LRN',\r\n    },\r\n    {\r\n      headerName: 'Name',\r\n      render: function (row) {\r\n        return <>\r\n          {row.firstName} {row.lastName}\r\n        </>\r\n      }\r\n    },\r\n    {\r\n      field: 'gender',\r\n      headerName: 'Gender',\r\n    },\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return <>\r\n          {row.level && row.level.description}\r\n        </>\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Student List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"school\";\r\nconst sort = \"schoolYear,name\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\n\r\nexport default function SchoolService() {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport TitleComponent from '../common/TitleComponent'\r\n\r\nimport { save, getOptions } from '../../api/school/SchoolService'\r\nimport {\r\n  selectSelectedItem,\r\n  setSelectedItem,\r\n  setPageableEntity,\r\n  updateSelectedItem,\r\n  blankSelectedItem,\r\n  setOptionsList,\r\n  resetSelectedItem,\r\n} from '../../api/school/SchoolSlice'\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function SchoolDetailComponent(props) {\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { control, register, handleSubmit } = useForm()\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...')\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT)\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      `[SchoolDetailComponent.useEffect] status=${status}, selectedItem==>`,\r\n      selectedItem\r\n    )\r\n\r\n    if (selectedItem.currentPeriod == null) {\r\n      dispatch(\r\n        updateSelectedItem({\r\n          currentPeriod: { id: '' },\r\n        })\r\n      )\r\n    }\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(setSelectedItem(blankSelectedItem))\r\n      }\r\n      doRetrieve()\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem])\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n\r\n    setMessage('Loading. Please wait...')\r\n\r\n    getOptions().then((response) => {\r\n      dispatch(setOptionsList(response.data.listService))\r\n      setMessage('')\r\n    })\r\n      .catch((error) =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.RETRIEVE_ERROR,\r\n          'SchoolDetailComponent.doRetrieve',\r\n          'SchoolService.getOptions'\r\n        )\r\n      )\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log(\r\n      `[SchoolDetailComponent.onSubmitForm] data = `, data\r\n    )\r\n    setMessage('Saving...')\r\n    console.log(\r\n      `[SchoolDetailComponent.onSubmitForm] message = `, message\r\n    )\r\n    save(data)\r\n      .then((response) => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.SCHOOL_LIST)\r\n      })\r\n      .catch((error) =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.SAVE_ERROR,\r\n          'SchoolDetailComponent.save',\r\n          'SchoolService.save'\r\n        )\r\n      )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(\r\n        `[SchoolDetailComponent.render] selectedItem ==> `,\r\n        selectedItem\r\n      )}\r\n      <TitleComponent>School Detail</TitleComponent>\r\n      {message && <Alert severity='info'>{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(onSubmitForm)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          type='hidden'\r\n          name='id'\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id='name'\r\n              name='name'\r\n              label='Name'\r\n              fullWidth\r\n              autoComplete='school-name'\r\n              autoFocus\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"currentPeriod\"\r\n                  required\r\n                  select\r\n                  label=\"Current Period\"\r\n                  fullWidth\r\n                  autoComplete=\"school-currentPeriod\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.periodList.map(({ id, description }) => (\r\n                    <MenuItem key={id} value={id}>{description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"currentPeriod.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.currentPeriod.id}\r\n              options={selectedItem.optionsList.periodList}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id='logo'\r\n              name='logo'\r\n              label='Logo'\r\n              fullWidth\r\n              autoComplete='school-logo'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.logo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id='address'\r\n              name='address'\r\n              label='Address'\r\n              fullWidth\r\n              autoComplete='school-address'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.address}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport { deleteItem, getList } from '../../api/school/SchoolService'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem, } from '../../api/school/SchoolSlice'\r\nimport TitleComponent from '../common/TitleComponent'\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog'\r\n\r\nexport default function SchoolListComponent(props) {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const dispatch = useDispatch()\r\n  const currPageableSchools = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [])\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage).then(\r\n      ({ data }) =>\r\n        dispatch(\r\n          setPageable({\r\n            INIT_STATUS: INIT_STATUS.LOAD,\r\n            list: data.pagingList.content,\r\n            searchValue: searchValue,\r\n            paging: {\r\n              rowsPerPage: data.pagingList.size,\r\n              currentPage: data.pagingList.pageable.pageNumber,\r\n              totalElements: data.pagingList.totalElements,\r\n              totalPage: data.pagingList.totalPage,\r\n            },\r\n          })\r\n        )).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n\r\n\r\n  const doRetrieve = () =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: currPageableSchools.paging,\r\n    })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}`)\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}/-1`)\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[SchoolListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) =>\r\n    deleteItem(id)\r\n      .then(doRetrieve())\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n  const doHandleChangePage = (e, newPage) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        currentPage: newPage,\r\n      },\r\n    })\r\n\r\n  const doHandleChangeRowsPerPage = (e) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0,\r\n      },\r\n    })\r\n\r\n  const doSearch = (searchValue) =>\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n      },\r\n    })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n    },\r\n    {\r\n      headerName: 'Current Period',\r\n      render: function (row) {\r\n        return row.currentPeriod ? row.currentPeriod.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'logo',\r\n      headerName: 'Logo',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Schools</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageableSchools}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </>\r\n  )\r\n}\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst SubTitleComponent = (props) => {\r\n return (\r\n  <>\r\n   <Box>\r\n    <Typography variant=\"h5\">{props.children}</Typography>\r\n   </Box>\r\n  </>\r\n )\r\n}\r\n\r\nexport default SubTitleComponent","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead } from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\n\r\nimport { PAGE_URL, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\nimport PaginationComponent from '../common/PaginationComponent';\r\nimport SubTitleComponent from '../common/SubTitleComponent';\r\n\r\nconst SearchResultsHtmlComponent = (props) => {\r\n const { list, paging } = props.store;\r\n const history = useHistory();\r\n\r\n\r\n const doEditUser = id => history.push(PAGE_URL.STUDENT_DETAIL_URL + '/' + id)\r\n\r\n const doShowPayables = (row) => props.doPayables(row.id, row.school.currentPeriod.id)\r\n\r\n const CustomTableHead = () => {\r\n  return (<>\r\n   <TableHead>\r\n    <StyledTableHeadRow>\r\n     <StyledTableHeadCell>LRN</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Name</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Grade Level</StyledTableHeadCell>\r\n\r\n    </StyledTableHeadRow>\r\n   </TableHead>\r\n  </>)\r\n }\r\n const CustomTableBody = () => {\r\n  return (<>\r\n   <TableBody>\r\n    {list.map(row => (\r\n     <StyledTableRow key={row.id}>\r\n      <TableCell variant=\"head\">{row.lrn}</TableCell>\r\n      <TableCell>{row.firstName} {row.lastName}</TableCell>\r\n      <TableCell>{row.level.description}</TableCell>\r\n      <TableCell align=\"right\">\r\n       <IconButton aria-label=\"payment\" onClick={() => doShowPayables(row)}>\r\n        <AccountBalanceWalletIcon fontSize=\"large\" />\r\n       </IconButton>\r\n       <IconButton aria-label=\"edit\" onClick={() => doEditUser(row.id)}>\r\n        <EditIcon fontSize=\"large\" />\r\n       </IconButton>\r\n      </TableCell>\r\n     </StyledTableRow>\r\n    ))}\r\n   </TableBody>\r\n  </>)\r\n }\r\n\r\n return (\r\n  <>\r\n   {console.log(`[SearchResultsHtmlComponent.useEffect] props.store=>`, props.store)}\r\n   <SubTitleComponent>Search Results</SubTitleComponent>\r\n   {/* <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   /> */}\r\n\r\n   <TableContainer component={Paper}>\r\n    <Table>\r\n     <CustomTableHead />\r\n     <CustomTableBody />\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   />\r\n  </>\r\n )\r\n}\r\n\r\nexport default SearchResultsHtmlComponent;","import React from 'react';\r\nimport { Grid, MenuItem, TextField } from \"@material-ui/core\";\r\n\r\nexport default function SelectGrid({ sm, name, label, options, ...rest }) {\r\n return (<>\r\n  <Grid item xs={12} sm={sm}>\r\n   <TextField id={name}\r\n    select\r\n    name={name}\r\n    label={label}\r\n    variant=\"filled\"\r\n    fullWidth\r\n    InputLabelProps={{ shrink: true }}\r\n    autoComplete={label + \"-\" + name}\r\n    {...rest}\r\n   >\r\n    {options.map(({ id, description }) => (\r\n     <MenuItem key={id} value={id}>{description}</MenuItem>\r\n    ))}\r\n   </TextField>\r\n  </Grid>\r\n </>)\r\n}","\r\nimport React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Box, Paper, Grid, TextField, Table, TableContainer, TableHead, TableCell, TableBody, Button, InputAdornment } from \"@material-ui/core\"\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport SubTitleComponent from '../common/SubTitleComponent'\r\nimport SelectGrid from '../common/SelectGrid'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst { StyledTableRow, StyledTableHeadRow, StyledTableHeadCell, StyledGrid, INIT_STATUS } = require(\"../../api/Utils\")\r\nconst useStyles = makeStyles({\r\n  cell: {\r\n    minWidth: 150,\r\n    width: 150,\r\n  },\r\n});\r\n\r\nconst PayablesHtmlComponent = (props) => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit, reset } = useForm()\r\n\r\n  const [total, setTotal] = useState(0)\r\n  const [payables, setPayables] = useState({})\r\n  const [currentState, setCurrentState] = useState({\r\n    period: {\r\n      id: props.store.periodId\r\n    }\r\n  })\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[PayablesHtmlComponent.changeSelectState] name=${name}, value=${value}`)\r\n    setCurrentState({\r\n      [name]: { id: value }\r\n    })\r\n    console.log(`[PayablesHtmlComponent.changeSelectState] currentState=>`, currentState)\r\n  }\r\n\r\n\r\n  const changeSelectStateByPeriod = (e) => {\r\n    changeSelectState(e)\r\n    const { value } = e.target\r\n    // props.doUpdateCurrPageable({\r\n    //   ...props.store.studentPayables,\r\n    //   studentPayables: {\r\n    //     payables: []\r\n    //   },\r\n    //   searchFlag: true,\r\n    //   payablesFlag: false,\r\n    // })\r\n    props.doPayables(props.store.entity.id, value)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(`[PayablesHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n    console.log(`[PayablesHtmlComponent.useEffect] currentState => `, currentState)\r\n    console.log(`[PayablesHtmlComponent.useEffect] props.store.periodId => `, props.store.periodId)\r\n    if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES_RESET) {\r\n      resetPayables();\r\n      props.doUpdateCurrPageable({\r\n        INIT_STATUS: INIT_STATUS.DONE\r\n      })\r\n      // setCurrentState({\r\n      //   period: { id: props.store.periodId }\r\n      // })\r\n\r\n      reset(props.store);\r\n    }\r\n  }, [props.store])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  const resetPayables = () => {\r\n    console.log(`[PayablesHtmlComponent.resetPayables] payables => `, payables);\r\n    setTotal(0);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let data = {\r\n      ...payables\r\n    }\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        data[`payables[${i}].payment`] = formatter.format(0);\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setPayables(data);\r\n  }\r\n\r\n  const onPaymentBlur = (e) => {\r\n    const el = e.target\r\n    let value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    el.value = formatter.format(value);\r\n\r\n    console.log(`[PayablesHtmlComponent.onPaymentBlur] value = ${value}, payables => `, payables)\r\n    value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    let numValue = Number(value);\r\n    let data = {\r\n      ...payables,\r\n    };\r\n\r\n    data[el.name] = numValue;\r\n    setPayables(data);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let total = 0;\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        total = total + payment;\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setTotal(formatter.format(total));\r\n    console.log(`[PayablesHtmlComponent.onPaymentBlur] total = ${total}, payables => `, payables)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[PayablesHtmlComponent.return] props.store => `, props.store)}\r\n      <SubTitleComponent>Student Information</SubTitleComponent>\r\n      <Paper elevation={3} variant=\"elevation\" >\r\n        <Box py={1} px={2}>\r\n          <StyledGrid container spacing={1}>\r\n            <StyledGrid item xs={12} sm={2}>LRN</StyledGrid>\r\n            <StyledGrid item xs={12} sm={10}>{props.store.entity.lrn}</StyledGrid>\r\n            <StyledGrid item xs={12} sm={2}>Student Name</StyledGrid>\r\n            <StyledGrid item xs={12} sm={10}>{props.store.entity.firstName + ' ' + props.store.entity.lastName}</StyledGrid>\r\n            <StyledGrid item xs={12} sm={2}>Level</StyledGrid>\r\n            <StyledGrid item xs={12} sm={10}>{props.store.entity.level.description}</StyledGrid>\r\n          </StyledGrid>\r\n        </Box>\r\n      </Paper>\r\n      <SubTitleComponent>Old Accounts</SubTitleComponent>\r\n      <TableContainer component={Paper} elevation={1} variant=\"elevation\" >\r\n        <Table>\r\n          <TableHead>\r\n            <StyledTableHeadRow>\r\n              <StyledTableHeadCell key={0} variant=\"head\" style={{ width: \"10%\" }}>Total: P{props.store.paymentBalance.totalBalance.toLocaleString(undefined, {\r\n                maximumFractionDigits: 2,\r\n                minimumFractionDigits: 2\r\n              })}</StyledTableHeadCell>\r\n              {\r\n                props.store.paymentBalance.balances.map(({ id, name, balance }) => (\r\n                  <StyledTableHeadCell key={`$balances${id}`} variant=\"head\" align=\"right\" style={{ width: \"20%\" }}>{name}: P{balance.toLocaleString(undefined, {\r\n                    maximumFractionDigits: 2,\r\n                    minimumFractionDigits: 2\r\n                  })}</StyledTableHeadCell>\r\n                ))\r\n              }\r\n              <StyledTableHeadCell></StyledTableHeadCell>\r\n            </StyledTableHeadRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <form onSubmit={handleSubmit(props.doShowSaveBillingDialog)}>\r\n        <TextField\r\n          type=\"hidden\"\r\n          name=\"id\"\r\n          value={props.store.entity.id}\r\n          inputRef={register}\r\n        />\r\n        <SubTitleComponent>Payables</SubTitleComponent>\r\n        <Box py={3} px={3}>\r\n          <Grid container spacing={3}>\r\n            <SelectGrid sm={3} required name=\"period\" label=\"Period\"\r\n              value={currentState.period.id}\r\n              options={props.store.optionsList.periodList}\r\n              onChange={e => changeSelectStateByPeriod(e)} />\r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField\r\n                  required\r\n                  id=\"invoiceDate\"\r\n                  name=\"invoiceDate\"\r\n                  label=\"Invoice Date\"\r\n                  type=\"date\"\r\n                  fullWidth\r\n                  autoComplete=\"invoice-date\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                  defaultValue={props.store.invoiceDate}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} align=\"right\">Paid</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" >Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.studentPayables.payables.map((row, i) => (\r\n                  <>\r\n                    <TextField\r\n                      type=\"hidden\"\r\n                      name={`payables[${i}].student.id`}\r\n                      value={props.store.entity.id}\r\n                      inputRef={register}\r\n                    />\r\n                    <TextField\r\n                      type=\"hidden\"\r\n                      name={`payables[${i}].balance`}\r\n                      value={row.balance}\r\n                      inputRef={register}\r\n                    />\r\n                    <TextField\r\n                      type=\"hidden\"\r\n                      name={`payables[${i}].order`}\r\n                      value={i}\r\n                      inputRef={register}\r\n                    />\r\n                    <TextField\r\n                      type=\"hidden\"\r\n                      name={`payables[${i}].code`}\r\n                      value={row.code}\r\n                      inputRef={register}\r\n                    />\r\n                    <TextField\r\n                      type=\"hidden\"\r\n                      name={`payables[${i}].amount`}\r\n                      value={row.amount}\r\n                      inputRef={register}\r\n                    />\r\n                    <TextField\r\n                      type=\"hidden\"\r\n                      name={`payables[${i}].name`}\r\n                      value={row.name}\r\n                      inputRef={register}\r\n                    />\r\n                    <TextField\r\n                      type=\"hidden\"\r\n                      name={`payables[${i}].paid`}\r\n                      value={row.paid}\r\n                      inputRef={register}\r\n                    />\r\n                    <StyledTableRow key={`pabayables${i}`}>\r\n                      {!row.aps.text &&\r\n                        <>\r\n                          <TableCell>{row.aps ? row.aps.label : row.name}</TableCell>\r\n                          {row.code === 'balance' &&\r\n                            <>\r\n                              <TableCell align=\"right\"></TableCell>\r\n                              <TableCell align=\"right\"></TableCell>\r\n                              <TableCell align=\"right\"></TableCell>\r\n                              <TableCell align=\"right\">({row.payment})</TableCell>\r\n                            </>\r\n                          }\r\n\r\n                          {row.code !== 'balance' && !row.aps.text &&\r\n                            <>\r\n                              <TableCell align=\"right\">P{row.amount.toLocaleString(undefined, {\r\n                                maximumFractionDigits: 2,\r\n                                minimumFractionDigits: 2\r\n                              })}</TableCell>\r\n                              <TableCell align=\"right\">P{row.paid.toLocaleString(undefined, {\r\n                                maximumFractionDigits: 2,\r\n                                minimumFractionDigits: 2\r\n                              })}</TableCell>\r\n                              <TableCell align=\"right\">P{row.balance.toLocaleString(undefined, {\r\n                                maximumFractionDigits: 2,\r\n                                minimumFractionDigits: 2\r\n                              }\r\n                              )}</ TableCell>\r\n                              <TableCell align=\"right\">\r\n                                <TextField id={row.code}\r\n                                  type=\"currency\"\r\n                                  name={`payables[${i}].payment`}\r\n                                  onBlur={e => onPaymentBlur(e)}\r\n                                  fullWidth\r\n                                  inputRef={register}\r\n                                  // disabled={row.balance === 0}\r\n                                  defaultValue={row.payment}\r\n                                  InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">P</InputAdornment>,\r\n                                  }} />\r\n                              </TableCell>\r\n                            </>}\r\n                        </>\r\n                      }\r\n                      {row.aps.text &&\r\n                        <TableCell colSpan=\"5\">\r\n                          {row.aps.text && row.aps.multilineRows > 0 &&\r\n                            <TextField id={row.code}\r\n                              type=\"currency\"\r\n                              name={`payables[${i}].textValue`}\r\n                              label={row.aps ? row.aps.label : row.name}\r\n                              fullWidth\r\n                              inputRef={register}\r\n                              // disabled={row.balance === 0}\r\n                              defaultValue={row.textValue}\r\n                              multiline\r\n                              multilineRows={row.aps.multilineRows} />\r\n                          }\r\n                          {row.aps.text && row.aps.multilineRows === 0 &&\r\n                            <TextField id={row.code}\r\n                              type=\"currency\"\r\n                              name={`payables[${i}].textValue`}\r\n                              label={row.aps ? row.aps.label : row.name}\r\n                              fullWidth\r\n                              inputRef={register}\r\n                              // disabled={row.balance === 0}\r\n                              defaultValue={row.textValue}\r\n                              variant=\"filled\" />\r\n                          }\r\n                        </TableCell>\r\n                      }\r\n                    </StyledTableRow>\r\n\r\n                  </>\r\n                ))\r\n\r\n              }\r\n\r\n              <StyledTableRow>\r\n                <TableCell colSpan=\"4\" align=\"right\">Total</TableCell>\r\n                <TableCell align=\"right\">{total}</TableCell>\r\n              </StyledTableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box pt={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={10}>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save Payment</Button>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Reciept</Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Box>\r\n      </form>\r\n\r\n      <SubTitleComponent>Invoice</SubTitleComponent>\r\n      <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n        <Table>\r\n          <TableHead>\r\n            <StyledTableHeadRow>\r\n              <StyledTableHeadCell variant=\"head\" style={{ width: \"15%\" }} >Date</StyledTableHeadCell>\r\n              <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Invoice #</StyledTableHeadCell>\r\n              {\r\n                props.store.billingByInvoice.accountPayablesSettings.map(({ id, label }) => (\r\n                    <StyledTableHeadCell key={id} variant=\"head\" align=\"right\">{label}</StyledTableHeadCell>\r\n                ))\r\n              }\r\n            </StyledTableHeadRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              props.store.billingByInvoice.list.map(({ invoiceNo, invoiceDate, payablesMap }) => (\r\n                  <StyledTableRow key={invoiceNo}>\r\n                    <TableCell className={classes.cell}>{moment(invoiceDate).format('L')}</TableCell>\r\n                    <TableCell>{invoiceNo}</TableCell>\r\n                    {\r\n                      props.store.billingByInvoice.accountPayablesSettings.map(({ id }) => (\r\n                          <>\r\n                            {\r\n                              payablesMap[id] && payablesMap[id].aps.text &&\r\n                              <TableCell key={`list${id}`}>\r\n                                {payablesMap[id].textValue}\r\n                              </TableCell>\r\n                            }\r\n                            {\r\n                              !(payablesMap[id] && payablesMap[id].aps.text) &&\r\n                              <TableCell key={`list${id}`} align=\"right\">\r\n                                {(payablesMap[id] ? payablesMap[id].payment : 0).toLocaleString(undefined, {\r\n                                  maximumFractionDigits: 2,\r\n                                  minimumFractionDigits: 2\r\n                                })}\r\n                              </TableCell>\r\n                            }\r\n\r\n                          </>\r\n                      ))\r\n                    }\r\n                  </ StyledTableRow>\r\n              ))\r\n            }\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  )\r\n}\r\nexport default PayablesHtmlComponent;","import React, { useEffect } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport { Box, Button, Grid, MenuItem, Paper, TextField, Typography, Select } from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { INIT_STATUS } from '../../api/Utils'\r\nimport SearchResultsHtmlComponent from './SearchResultsHtmlComponent';\r\nimport PayablesHtmlComponent from './PayablesHtmlComponent';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function BillingHtmlComponent(props) {\r\n        const { control, register, handleSubmit, reset } = useForm();\r\n\r\n        useEffect(() => {\r\n                console.log(`[BillingHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n                // if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES) {\r\n                //         props.doPayables();\r\n                // } else if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                //         reset(props.store)\r\n                // }\r\n                if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                        reset(props.store)\r\n                }\r\n        }, [props.store])\r\n\r\n        return (\r\n                <>\r\n                        {console.log(`[BillingHtmlComponent.return], INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)}\r\n                        <TitleComponent>Payment</TitleComponent>\r\n\r\n                        <form onSubmit={handleSubmit(props.doRetrieve)}>\r\n                                <Paper elevation={3} variant=\"elevation\" >\r\n                                        <Box my={3} mx={3}>\r\n                                                <Grid container spacing={3}>\r\n                                                        <Grid item xs={12} sm={2}><Typography variant=\"h6\">Search By</Typography></Grid>\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Controller\r\n                                                                        as={<Select fullWidth >\r\n                                                                                {props.store.optionsList.billingSearchBy.map(m => (\r\n                                                                                        <MenuItem key={m.id} value={m.value}>\r\n                                                                                                {m.label}\r\n                                                                                        </MenuItem>\r\n                                                                                ))}\r\n                                                                        </Select>}\r\n                                                                        required\r\n                                                                        name=\"searchBy\"\r\n                                                                        control={control}\r\n                                                                        defaultValue={props.store.searchBy}\r\n                                                                        options={props.store.optionsList.billingSearchBy}\r\n                                                                />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                                <TextField id=\"searchValue\"\r\n                                                                        required\r\n                                                                        name=\"searchValue\"\r\n                                                                        // label=\"Search Value\"\r\n                                                                        fullWidth\r\n                                                                        autoComplete=\"billing-search-value\"\r\n                                                                        inputRef={register}\r\n                                                                        defaultValue={props.store.searchValue}\r\n                                                                />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SearchIcon />}>Search</Button>\r\n                                                        </Grid>\r\n                                                </Grid>\r\n                                        </Box>\r\n                                </Paper>\r\n                        </form>\r\n                        {props.store.searchFlag &&\r\n                                <SearchResultsHtmlComponent\r\n                                        store={props.store}\r\n                                        onChangePage={props.onChangePage}\r\n                                        onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n                                        doPayables={props.doPayables}\r\n                                        doUpdateCurrPageable={props.doUpdateCurrPageable}\r\n                                />}\r\n                        {props.store.payablesFlag &&\r\n                                <PayablesHtmlComponent\r\n                                        register={register}\r\n                                        handleSubmit={handleSubmit}\r\n                                        doShowSaveBillingDialog={props.doShowSaveConfirmDialog}\r\n                                        // doSavePayables={props.doSavePayables}\r\n                                        store={props.store}\r\n                                        doUpdateCurrPageable={props.doUpdateCurrPageable}\r\n                                        doPayables={props.doPayables} />}\r\n                </>\r\n        )\r\n}","\r\nimport React, { useEffect, useRef } from 'react';\r\nimport moment from 'moment'\r\n\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nimport { formatter, INIT_STATUS, StyledTableCell, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\n\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider'\r\n\r\nexport default function SavePayablesConfimationHtml(props) {\r\n\r\n  const { userLogin } = useGlobalVariable();\r\n  const { reset } = useForm(props.confirmStore);\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(`[SavePayablesConfimationHtml.useEffect] confirmStore=>`, props.confirmStore)\r\n    if (props.confirmStore.INIT_STATUS === INIT_STATUS.RESET) {\r\n      reset(props.confirmStore);\r\n    }\r\n    props.confirmStore.INIT_STATUS = INIT_STATUS.DONE;\r\n  }, [props.confirmStore])\r\n\r\n  const ConfirmPage = () => {\r\n    return (<>\r\n      {/* <div className={classes.root}>\r\n        <table width=\"100%\" border=\"0\" >\r\n          <tr >\r\n            <th align=\"right\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"right\" width=\"20%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr >\r\n            <th align=\"right\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"right\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n          </tr>\r\n        </table>\r\n      </div> */}\r\n      <Box pb={3}>\r\n        <Paper elevation={3} variant=\"elevation\" >\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}>Date</Grid>\r\n            <Grid item xs={12} sm={4}>{moment(props.confirmStore.invoiceDate).format('L')}</Grid>\r\n\r\n            <Grid item xs={12} sm={2}>LRN</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.lrn}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Box>\r\n      <TableContainer component={Paper} elevation={3} variant=\"elevation\">\r\n        {props.confirmStore.payables.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payables.map((row) => <>\r\n                {row.payment > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.payment)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell>\r\n                  {props.confirmStore.balanceTotal > 0 &&\r\n                    <Typography variant=\"h6\" color=\"textPrimary\">Remaining balance is {formatter.format(props.confirmStore.balanceTotal)}</Typography>\r\n                  }\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={3}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n              {props.confirmStore.invoiceNo && <>\r\n                <StyledTableRow>\r\n                  <StyledTableCell align=\"right\" colSpan={1}><Typography variant=\"h4\" color=\"textPrimary\">Invoice No: </Typography></StyledTableCell>\r\n                  <StyledTableCell align=\"left\" colSpan={2}>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n\r\n                  </StyledTableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n                  </TableCell>\r\n                </ StyledTableRow>\r\n              </>}\r\n            </TableBody>\r\n          </Table>\r\n        }\r\n      </TableContainer>\r\n    </>);\r\n  }\r\n\r\n  const PrintableInvoicePage = () => {\r\n    return (<>\r\n      <div ref={componentRef} className=\"root\">\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userLogin.schoolName}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userLogin.schoolAddress}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">&nbsp;</th>\r\n          </tr>\r\n\r\n          {/* <th align=\"left\">{(\"0000000000\" + props.confirmStore.invoiceNo).slice(-10)}</th> */}\r\n          {/* <tr>\r\n            <th align=\"left\" width=\"25%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n            <th align=\"left\" width=\"25%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr> */}\r\n\r\n          <tr>\r\n            <th align=\"left\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"left\" width=\"20%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"left\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n            <th align=\"left\"></th>\r\n            <th align=\"left\"></th>\r\n          </tr>\r\n        </table>\r\n        <br />\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th></th>\r\n            <th width=\"25%\" align=\"right\">Total</th>\r\n            <th width=\"25%\" align=\"right\">Balance</th>\r\n            <th width=\"25%\" align=\"right\">Amount Paid</th>\r\n          </tr>\r\n          {props.confirmStore.payablesByInvoiceNo.map((row) => <>\r\n            {row.paid != 0 &&\r\n              <tr>\r\n                <td align=\"left\">{row.name}</td>\r\n                <td align=\"right\">{formatter.format(row.amount)}</td>\r\n                <td align=\"right\">{formatter.format(row.balance)}</td>\r\n                <td align=\"right\">{formatter.format(row.paid)}</td>\r\n              </tr>\r\n            }\r\n          </>\r\n          )}\r\n          <tr>\r\n            <td></td>\r\n            <td colSpan={4} align=\"right\"><h3>Total Amount Paid: {formatter.format(props.confirmStore.paymentTotal)}</h3></td>\r\n          </tr>\r\n        </table>\r\n        {/* <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Student Name:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName} </TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>Invoice Date:</>}</TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>{props.confirmStore.invoiceDate}</>}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Student Id:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.studentId}</TableCell>\r\n              <TableCell>Level:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.level.description}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n        {props.confirmStore.payablesByInvoiceNo.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Invoice</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount Paid</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payablesByInvoiceNo.map((row, i) => <>\r\n                {row.paid > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.paid)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Invoice No: </Typography>\r\n                  <Typography variant=\"h4\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount paid is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        } */}\r\n      </div>\r\n    </>);\r\n  }\r\n  return (<>\r\n    {console.log(`[SavePayablesConfimationHtml.return] confirmStore=>`, props.confirmStore)}\r\n    <Dialog fullWidth=\"true\" maxWidth=\"md\"\r\n      open={props.open}\r\n      onClose={props.closeDialog}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{!props.confirmStore.invoiceNo && <Alert severity=\"info\" align=\"right\">{props.title}</Alert>}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {!props.confirmStore.invoiceNo && <ConfirmPage />}\r\n          {props.confirmStore.invoiceNo && <PrintableInvoicePage />}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button className=\"not-printable\" onClick={handlePrint} variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            <Button className=\"not-printable\" onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />}>Close</Button>\r\n          </>\r\n        }\r\n        {!props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />} > Cancel</Button>\r\n            <Button onClick={props.saveDialog} variant=\"contained\" color=\"primary\" autoFocus startIcon={<SaveIcon />} > Save</Button>\r\n          </>\r\n        }\r\n      </DialogActions>\r\n    </Dialog>\r\n  </>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport { ERROR_CODE, formatter, INIT_STATUS } from '../../api/Utils'\r\n\r\nimport BillingHtmlComponent from './BillingHtmlComponent';\r\nimport SavePayablesConfimationHtml from './SavePayablesConfimationHtml';\r\n\r\nimport { getListBy, getStudentPayablesByPeriod, save } from '../../api/billing/BillingService'\r\nimport { optionsList, selectPageable, setPageable, updatePageable } from '../../api/billing/BillingSlice';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function BillingComponent() {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    vertical: 'top',\r\n    horizontal: 'center'\r\n  })\r\n  const { message, open, vertical, horizontal } = snackbar\r\n\r\n\r\n  const [confirmStore, setConfirmStore] = useState({\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    entity: {\r\n      studentId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      level: {\r\n        id: '',\r\n        value: '',\r\n        description: ''\r\n      }\r\n    },\r\n    payables: [],\r\n    payablesByInvoiceNo: [],\r\n    open: false\r\n  })\r\n\r\n  const doInitFormData = data => {\r\n    //data.optionsList = optionsList;\r\n\r\n    if (!data.currentPage) {\r\n      data.paging = {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0\r\n      };\r\n    }\r\n\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n\r\n    if (!data.studentPayables) {\r\n      data.studentPayables = {\r\n        invoiceNo: '',\r\n        payables: [],\r\n        payablesByInvoiceNo: []\r\n      };\r\n    }\r\n    if (!data.studentPayables.payables) {\r\n      data.studentPayables.payables = [];\r\n    }\r\n    if (!data.studentPayables.payablesByInvoiceNo) {\r\n      data.studentPayables.payablesByInvoiceNo = [];\r\n    }\r\n  }\r\n\r\n  const doRetrieve = (data) => {\r\n    console.log(`[BillingComponent.doRetrieve] data==>`, data)\r\n    getListBy(data.searchBy, data.searchValue, currPageable.paging.currentPage, currPageable.paging.rowsPerPage)\r\n      .then(response => {\r\n        console.log(`[BillingComponent.doRetrieve BillingService.getListBy] response==>`, response)\r\n        let formData = {\r\n          ...currPageable,\r\n          INIT_STATUS: INIT_STATUS.RESET,\r\n          searchValue: data.searchValue,\r\n          searchBy: data.searchBy,\r\n          searchFlag: true,\r\n          payablesFlag: false,\r\n          list: response.data.content,\r\n          optionsList: optionsList,\r\n          paging: {\r\n            rowsPerPage: response.data.size,\r\n            totalElements: response.data.totalElements,\r\n            currentPage: response.data.pageable.pageNumber,\r\n          }\r\n        }\r\n        doInitFormData(formData);\r\n        dispatch(setPageable(formData))\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doRetrieve', 'BillingService.getListBy'));\r\n  }\r\n\r\n  const onChangeRowsPerPage = (e) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    let data = {\r\n      paging: paging\r\n    }\r\n    doUpdateCurrPageable(data)\r\n\r\n    doRetrieve();\r\n  }\r\n  const onChangePage = (e, newPage) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.currentPage = newPage\r\n\r\n    let data = {\r\n      paging: paging\r\n    }\r\n    doUpdateCurrPageable(data)\r\n\r\n    doRetrieve({\r\n      searchBy: data.searchBy,\r\n      searchValue: data.searchValue,\r\n      currentPage: data.paging.currentPage,\r\n      rowsPerPage: data.paging.rowsPerPage\r\n    });\r\n  }\r\n\r\n  const doUpdateCurrPageable = (formData) => {\r\n    dispatch(updatePageable(formData))\r\n  }\r\n  const doPayables = (id, periodId) => {\r\n    console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] id=${id}, periodId=${periodId}`)\r\n    getStudentPayablesByPeriod(id, periodId).then(response => {\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] response==>`, response)\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] response.data.optionsList==>`, response.data.optionsList)\r\n      let payables = response.data.studentPayables.payables;\r\n      payables.map((row) => {\r\n        // let value = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n        row.payment = formatter.format(row.payment);\r\n        return row\r\n      });\r\n\r\n      let optionsListTemp = {\r\n        ...response.data.optionsList,\r\n        ...optionsList\r\n      }\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] optionsListTemp==>`, optionsListTemp)\r\n      let formData = {\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        entity: response.data.student,\r\n        periodId: periodId,\r\n        studentPayables: {\r\n          ...response.data.studentPayables,\r\n          payables: payables\r\n        },\r\n        billingByInvoice: {\r\n          ...response.data.billingByInvoice\r\n        },\r\n        paymentBalance: {\r\n          ...response.data.paymentBalance\r\n        },\r\n\r\n        searchFlag: false,\r\n        payablesFlag: true\r\n      }\r\n\r\n      doInitFormData(formData);\r\n      formData.optionsList = optionsListTemp\r\n\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] formData==>`, formData)\r\n      doUpdateCurrPageable(formData)\r\n\r\n\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doPayables', 'BillingService.getStudentPayables'));\r\n  }\r\n  const doShowSaveConfirmDialog = (data) => {\r\n    console.log(`[BillingComponent.doShowSaveConfirmDialog] data==>`, data);\r\n    let paymentTotal = 0;\r\n    let balanceTotal = 0;\r\n    data.payables.map((row) => {\r\n      let balance = row.balance ? row.balance.replaceAll(',', '') : 0;\r\n      let payment = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n\r\n      row.balance = Number(balance);\r\n      row.payment = Number(payment);\r\n\r\n      balanceTotal += row.balance;\r\n      paymentTotal += row.payment;\r\n      return row\r\n    });\r\n\r\n    // doOpenSnackBar({\r\n    //   message: `Total amount is ${paymentTotal}`\r\n    // })\r\n\r\n    if (Number(paymentTotal) == 0) {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 1 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n\r\n      doOpenSnackBar({\r\n        message: `Total amount is ${paymentTotal}`\r\n      })\r\n    } else {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 2 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n      let confirmStoreTemp = {\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        open: true,\r\n        entity: currPageable.entity,\r\n        payables: data.payables,\r\n        payablesByInvoiceNo: [],\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: balanceTotal - paymentTotal,\r\n        invoiceNo: '',\r\n        periodId: currPageable.periodId,\r\n        comment: data.comment,\r\n        invoiceDate: data.invoiceDate\r\n      }\r\n      doInitConfirmStore(confirmStoreTemp);\r\n\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] confirmStoreTemp==>`, confirmStoreTemp);\r\n      setConfirmStore(confirmStoreTemp);\r\n    }\r\n\r\n  }\r\n  const doConfirmSavePayables = () => {\r\n    console.log(`[BillingComponent.doConfirmSavePayables] confirmStore==>`, confirmStore);\r\n    doSavePayables(confirmStore);\r\n  }\r\n\r\n  const doSavePayables = (data) => {\r\n    console.log(`[BillingComponent.doSavePayables] data==>`, data);\r\n\r\n    save(data.payables, data.entity.id, data.periodId, moment(data.invoiceDate)).then(response => {\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] response==>`, response)\r\n      let formData = {\r\n        INIT_STATUS: INIT_STATUS.PAYABLES_RESET,\r\n        entity: response.data.student,\r\n        studentPayables: response.data.studentPayables,\r\n        searchFlag: false,\r\n        payablesFlag: true,\r\n      }\r\n\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 1 formData==>`, formData)\r\n      doInitFormData(formData);\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 2 formData==>`, formData)\r\n      dispatch(updatePageable(formData));\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 3 formData==>`, formData)\r\n      let payablesByInvoiceNo = [\r\n        //...response.data.studentPayables.payablesByInvoiceNo\r\n      ]\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 0 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n      for (const row of response.data.studentPayables.payablesByInvoiceNo) {\r\n        let temp = {\r\n          ...row\r\n        }\r\n        payablesByInvoiceNo.push(temp)\r\n      }\r\n\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 1 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      let paymentTotal = 0;\r\n      payablesByInvoiceNo.map((row) => {\r\n        row.paid = Number(row.paid);\r\n        paymentTotal += row.paid;\r\n        return row\r\n      });\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 2 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      setConfirmStore({\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        payables: [],\r\n        invoiceDate: moment(response.data.studentPayables.invoiceDate).format('L'),\r\n        invoiceNo: response.data.studentPayables.invoiceNo,\r\n        payablesByInvoiceNo: payablesByInvoiceNo,\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: 0\r\n      });\r\n\r\n      doUpdateCurrPageable({\r\n        billingByInvoice: {\r\n          ...response.data.billingByInvoice\r\n        },\r\n      })\r\n\r\n      doOpenSnackBar({\r\n        message: 'Payables saved successfully!'\r\n      })\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doSavePayables', 'BillingService.save'));\r\n  }\r\n\r\n  const doCloseSaveBillingDialog = () => {\r\n    let confirmStoreTemp = {\r\n      ...confirmStore,\r\n      open: false\r\n    }\r\n    setConfirmStore(confirmStoreTemp);\r\n  }\r\n\r\n  const doInitConfirmStore = data => {\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n    if (!data.payables) {\r\n      data.payables = [];\r\n    }\r\n  }\r\n\r\n  const doOpenSnackBar = (state) => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: true,\r\n      ...state\r\n    })\r\n  }\r\n  const doCloseSnackbar = () => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: false,\r\n      message: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BillingHtmlComponent\r\n        store={currPageable}\r\n        doRetrieve={doRetrieve}\r\n        doPayables={doPayables}\r\n        onChangePage={onChangePage}\r\n        onChangeRowsPerPage={onChangeRowsPerPage}\r\n        doShowSaveConfirmDialog={doShowSaveConfirmDialog}\r\n        doSavePayables={doSavePayables}\r\n        doUpdateCurrPageable={doUpdateCurrPageable}\r\n      />\r\n      <SavePayablesConfimationHtml\r\n        confirmStore={confirmStore}\r\n        title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        closeDialog={doCloseSaveBillingDialog}\r\n        saveDialog={doConfirmSavePayables} />\r\n      {/* <SaveBillingDialog title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        <SavePayablesConfimationHtml confirmStore={confirmStore}/>\r\n      </SaveBillingDialog> */}\r\n\r\n\r\n      <Snackbar open={open}\r\n        autoHideDuration={6000}\r\n        onClose={doCloseSnackbar}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n      >\r\n        <Alert onClose={doCloseSnackbar} severity=\"success\">\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from \"../Utils\";\r\n\r\nexport const getListBy = (by, searchValue, page, pageSize) => axios.get(`${API_URL_BASE}billing/search/${by}?searchValue=${searchValue}&page=${page}&size=${pageSize}`)\r\n\r\nexport const getStudentPayables = (id) => axios.get(`${API_URL_BASE}billing/payables/${id}`)\r\nexport const getStudentPayablesByPeriod = (id, periodId) => axios.get(`${API_URL_BASE}billing/payables/${id}/period/${periodId}`)\r\n\r\nexport const save = (data, id, periodId, invoiceDate) => axios.post(`${Utils.urlSavePattern('billing')}/${id}/${periodId}/${invoiceDate}`, data)\r\n\r\nexport default function BillingService() {\r\n}","import axios from 'axios'\r\nimport Utils, { API_URL_BASE } from '../Utils'\r\n\r\nexport const ENTITY = 'accountPayablesSettings'\r\nconst sort = 'period,desc,priority,asc,description,amount'\r\nconst sort2 = 'priority,description,amount'\r\n\r\nexport const getList = (searchValue, page, pageSize, periodId, activeId) =>\r\n  axios.get(`${Utils.urlListPattern(ENTITY)}/period/${periodId}/${activeId}`, {\r\n    params: {\r\n      searchValue: searchValue,\r\n      page: page,\r\n      size: pageSize,\r\n      sort: sort\r\n    }\r\n  })\r\nexport const get = id => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = id =>\r\n  axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = data => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport const getActiveList = (period, searchValue, page, pageSize) =>\r\n  axios.get(`${Utils.urlListPattern(ENTITY)}/active/${period}`, {\r\n    params: {\r\n      searchValue: searchValue,\r\n      page: page,\r\n      size: pageSize,\r\n      sort: sort2\r\n    }\r\n  })\r\nexport const getApplyToAllList = () =>\r\n  axios.get(`${API_URL_BASE + ENTITY + '/applyToAllList'}`)\r\n\r\nexport default function AccountPayablesSettingsService () {}\r\n\r\n// class AccountPayablesSettingsService {\r\n\r\n//  getList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description, amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  get = (id) => {\r\n//   const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  delete = (id) => {\r\n//   const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\r\n//   return axios.delete(theurl);\r\n//  }\r\n//  save = (data) => {\r\n//   const theurl = `${Utils.urlSavePattern(ENTITY)}`\r\n//   return axios.post(theurl, data);\r\n//  }\r\n//  getActiveList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/active\"}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  getApplyToAllList = () => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/applyToAllList\"}`\r\n//   return axios.get(theurl);\r\n//  }\r\n// }\r\n\r\n// export default new AccountPayablesSettingsService();\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList, getOptions } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport { selectPageable, setPageable, setSelectedItem } from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\nimport SubTitleComponent from '../common/SubTitleComponent';\r\nimport { Box, Grid, Paper } from '@material-ui/core';\r\nimport SelectGrid from '../common/SelectGrid';\r\n\r\nexport default function AccountPayablesSettingsListComponent(props) {\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  const [optionsList, setOptionsList] = useState({\r\n    periodList: [],\r\n    activeList: []\r\n  });\r\n\r\n  const [filter, setFilter] = useState({\r\n    period: { id: 'All' },\r\n    active: { id: 'All' }\r\n  });\r\n\r\n  useEffect(() => {\r\n    doInitOptions()\r\n  }, []);\r\n\r\n  const doInitOptions = () => {\r\n    getOptions().then(response => {\r\n      let list = {\r\n        ...response.data.listService,\r\n        periodList: [{\r\n          \"id\": \"ALL\",\r\n          \"description\": \"All\",\r\n        },\r\n        ...response.data.listService.periodList],\r\n        activeList: [{\r\n          \"id\": \"All\",\r\n          \"description\": \"All\",\r\n        }, {\r\n          \"id\": \"Y\",\r\n          \"description\": \"Yes\",\r\n        },\r\n        {\r\n          \"id\": \"N\",\r\n          \"description\": \"No\",\r\n        }]\r\n\r\n      }\r\n\r\n      setOptionsList(list)\r\n    })\r\n  }\r\n\r\n  const retrieve = ({ searchValue, paging, periodId = filter.period, activeId = filter.active.id }) => getList(searchValue, paging.currentPage, paging.rowsPerPage, periodId, activeId)\r\n    .then(({ data }) => dispatch(setPageable({\r\n      INIT_STATUS: INIT_STATUS.LOAD,\r\n      list: data.pagingList.content,\r\n      searchValue: searchValue,\r\n      paging: {\r\n        rowsPerPage: data.pagingList.size,\r\n        currentPage: data.pagingList.pageable.pageNumber,\r\n        totalElements: data.pagingList.totalElements,\r\n        totalPage: data.pagingList.totalPage\r\n      }\r\n    })))\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsListComponent.retrieve', 'AccountPayablesSettingsService.getList'));\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    let data = {\r\n      ...selected\r\n    }\r\n    if (!data.period) {\r\n      data.period = { 'id': '' }\r\n    }\r\n    if (!data.paymentPeriod) {\r\n      data.paymentPeriod = { 'id': '' }\r\n    }\r\n    console.log(`[AccountPayablesSettingsListComponent.doEdit]  data=`, data)\r\n    dispatch(setSelectedItem(data))\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsListComponent.doDelete', 'AccountPayablesSettingsService.deleteItem'));\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod ? row.paymentPeriod.description : '';\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    },\r\n    {\r\n      field: 'applyToAll',\r\n      headerName: 'Apply To All',\r\n      render: function (row) {\r\n        return row.applyToAll ? 'Y' : 'N';\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N';\r\n      }\r\n    }\r\n  ];\r\n\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[AccountPayablesSettingsListComponent.changeSelectState] name=${name}, value=${value}`)\r\n    setFilter({\r\n      ...filter,\r\n      [name]: { id: value }\r\n    })\r\n    console.log(`[AccountPayablesSettingsListComponent.changeSelectState]  filter=`, filter)\r\n\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      },\r\n      periodId: (name === 'period' ? value : filter.period.id),\r\n      activeId: (name === 'active' ? value : filter.active.id)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Accounts Payables Settings List</TitleComponent>\r\n\r\n      <Box py={5}>\r\n        <Paper elevation={2} variant=\"elevation\" >\r\n          <Box pb={3} px={3}>\r\n            <SubTitleComponent>Filter</SubTitleComponent>\r\n            <Grid container spacing={3}>\r\n              <SelectGrid sm={2} name=\"period\" label=\"Period\" value={filter.period.id} options={optionsList.periodList}\r\n                onChange={e => changeSelectState(e)} />\r\n              <SelectGrid sm={1} name=\"active\" label=\"Active\" value={filter.active.id} options={optionsList.activeList}\r\n                onChange={e => changeSelectState(e)} />\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Box, IconButton } from '@material-ui/core'\r\n\r\nimport { Button, Grid } from '@material-ui/core'\r\n\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\n\r\nimport { ERROR_CODE, INIT_STATUS } from '../../api/Utils'\r\nimport { getList } from '../../api/accountPayablesSettings/AccountPayablesSettingsService'\r\nimport {\r\n  selectPageable,\r\n  setPageable,\r\n  selectSelectedItem,\r\n  setSelectedItem\r\n} from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice'\r\nimport useMessageAlert from '../../api/useMessageAlert'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nexport default function AccountPayablesSettingsParentComponent (props) {\r\n  const dispatch = useDispatch()\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const currPageable = useSelector(selectPageable)\r\n  const { showErrorMsgAlert } = useMessageAlert()\r\n\r\n  useEffect(() => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      },\r\n      periodId: selectedItem.period.id\r\n    })\r\n  }, [])\r\n\r\n  const retrieve = ({\r\n    searchValue,\r\n    paging,\r\n    periodId = selectedItem.period.id\r\n  }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage, periodId, 'y')\r\n      .then(({ data }) => {\r\n        if (data.pagingList) {\r\n          let list = data.pagingList.content\r\n          list = list.filter(item => item.id !== selectedItem.id)\r\n          return {\r\n            ...data,\r\n            pagingList: {\r\n              ...data.pagingList,\r\n              content: list\r\n            }\r\n          }\r\n        }\r\n        return data\r\n      })\r\n      .then(data =>\r\n        dispatch(\r\n          setPageable({\r\n            INIT_STATUS: INIT_STATUS.LOAD,\r\n            list: data.pagingList.content,\r\n            searchValue: searchValue,\r\n            paging: {\r\n              rowsPerPage: data.pagingList.size,\r\n              currentPage: data.pagingList.pageable.pageNumber,\r\n              totalElements: data.pagingList.totalElements,\r\n              totalPage: data.pagingList.totalPage\r\n            }\r\n          })\r\n        )\r\n      )\r\n      .catch(error =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.RETRIEVE_ERROR,\r\n          'AccountPayablesSettingsParentComponent.retrieve',\r\n          'AccountPayablesSettingsService.getList'\r\n        )\r\n      )\r\n\r\n  const doRetrieve = () =>\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Add',\r\n      render: function (row) {\r\n        return (\r\n          <IconButton aria-label='add' onClick={() => setParent(row)}>\r\n            <AddIcon fontSize='large' />\r\n          </IconButton>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description'\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount'\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority'\r\n    }\r\n  ]\r\n  const setParent = row => {\r\n    dispatch(\r\n      setSelectedItem({\r\n        ...selectedItem,\r\n        parent: row\r\n      })\r\n    )\r\n  }\r\n\r\n  const removeParent = () => {\r\n    setParent({ id: '' })\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) =>\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n\r\n  const doHandleChangeRowsPerPage = e =>\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n\r\n  const doSearch = searchValue =>\r\n    retrieve({\r\n      searchValue: searchValue,\r\n\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Box py={3}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12}>\r\n            Parent:{' '}\r\n            {selectedItem.parent ? selectedItem.parent.description : '<NONE>'}\r\n            <Button\r\n              color='primary'\r\n              type='button'\r\n              onClick={() => removeParent()}\r\n              startIcon={<RemoveIcon />}\r\n            ></Button>\r\n          </Grid>\r\n\r\n          <CustomTableGrid\r\n            store={currPageable}\r\n            cols={cols}\r\n            onChangePage={doHandleChangePage}\r\n            onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n            doRetrieve={doRetrieve}\r\n            doSearch={doSearch}\r\n            showAction={false}\r\n          />\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\n\r\nimport {\r\n  selectSelectedItem,\r\n  resetSelectedItem,\r\n  setPageableEntity,\r\n  setOptionsList\r\n} from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice'\r\n\r\nimport {\r\n  save,\r\n  getOptions\r\n} from '../../api/accountPayablesSettings/AccountPayablesSettingsService'\r\nimport TitleComponent from '../common/TitleComponent'\r\nimport useMessageAlert from '../../api/useMessageAlert'\r\nimport AccountPayablesSettingsParentComponent from './AccountPayablesSettingsParentComponent'\r\n\r\nlet renderCount = 0\r\n\r\nexport default function AccountPayablesSettingsDetailComponent (props) {\r\n  const { showErrorMsgAlert } = useMessageAlert()\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const { control, register, handleSubmit } = useForm({\r\n    id: '',\r\n    label: '',\r\n    description: 'test',\r\n    paymentPeriod: { id: '' },\r\n    amount: 0,\r\n    priority: 1,\r\n    applyToAll: true,\r\n    active: false,\r\n    text: false,\r\n    multilineRows: 0\r\n  })\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...')\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT)\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n    if (status === INIT_STATUS.LOAD) {\r\n      onRetrieve()\r\n      setStatus(INIT_STATUS.DONE)\r\n    }\r\n  }, [selectedItem, status])\r\n\r\n  const onRetrieve = () => {\r\n    console.log(\r\n      `[AccountPayablesSettingsDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`\r\n    )\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    setMessage(`Loading. Please wait...`)\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage('')\r\n      })\r\n      .catch(error =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.RETRIEVE_ERROR,\r\n          'AccountPayablesSettingsDetailComponent.onRetrieve',\r\n          'AccountPayablesSettingsService.getOptions'\r\n        )\r\n      )\r\n  }\r\n\r\n  const doSave = data => {\r\n    setMessage(`Saving...`)\r\n    data.parent = selectedItem.parent\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)\r\n      })\r\n      .catch(error =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.SAVE_ERROR,\r\n          'CodeGroupsDetailComponent.save',\r\n          'CodeGroupsService.save'\r\n        )\r\n      )\r\n  }\r\n\r\n  renderCount++\r\n  return (\r\n    <>\r\n      {console.log(\r\n        `[AccountPayablesSettingsDetailComponent.render] renderCount=${renderCount} selectedItem==>`,\r\n        selectedItem\r\n      )}\r\n      <TitleComponent>Account Payables Settings Details</TitleComponent>\r\n      {message && <Alert severity='info'>{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() =>\r\n                history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)\r\n              }\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          type='hidden'\r\n          name='id'\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id='description'\r\n              name='description'\r\n              label='Description'\r\n              fullWidth\r\n              autoComplete='account-payables-settings-description'\r\n              autoFocus\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id='label'\r\n              name='label'\r\n              label='Label'\r\n              fullWidth\r\n              autoComplete='account-payables-settings-label'\r\n              autoFocus\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.label}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField\r\n                  id='period'\r\n                  required\r\n                  select\r\n                  label='Period'\r\n                  required={selectedItem.id ? false : true}\r\n                  disabled={selectedItem.id ? true : false}\r\n                  fullWidth\r\n                  autoComplete='period'\r\n                  variant='filled'\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                  // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.periodList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>\r\n                      {row.description}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              required\r\n              name='period.id'\r\n              control={control}\r\n              defaultValue={selectedItem.period.id}\r\n              options={selectedItem.optionsList.periodList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField\r\n                  id='paymentPeriod'\r\n                  required\r\n                  select\r\n                  label='Payment Period'\r\n                  fullWidth\r\n                  autoComplete='paymentPeriod'\r\n                  variant='filled'\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                  // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.paymentPeriodList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>\r\n                      {row.description}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              required\r\n              name='paymentPeriod.id'\r\n              control={control}\r\n              defaultValue={selectedItem.paymentPeriod.id}\r\n              options={selectedItem.optionsList.paymentPeriodList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              type='number'\r\n              id='priority'\r\n              name='priority'\r\n              label='Priority'\r\n              fullWidth\r\n              autoComplete='account-payables-settings-priority'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              type='currency'\r\n              id='amount'\r\n              name='amount'\r\n              label='Amount'\r\n              fullWidth\r\n              autoComplete='account-payables-settings-amount'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.amount}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField\r\n                  id='applyToAll'\r\n                  required\r\n                  select\r\n                  label='Applicable to All'\r\n                  fullWidth\r\n                  autoComplete='applyToAll'\r\n                  variant='filled'\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                  // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>\r\n                    Yes\r\n                  </MenuItem>\r\n                  <MenuItem key={2} value={false}>\r\n                    No\r\n                  </MenuItem>\r\n                </TextField>\r\n              }\r\n              name='applyToAll'\r\n              control={control}\r\n              defaultValue={selectedItem.applyToAll}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Controller\r\n              as={\r\n                <TextField\r\n                  id='active'\r\n                  required\r\n                  select\r\n                  label='Active'\r\n                  fullWidth\r\n                  autoComplete='active'\r\n                  variant='filled'\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                  // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>\r\n                    Yes\r\n                  </MenuItem>\r\n                  <MenuItem key={2} value={false}>\r\n                    No\r\n                  </MenuItem>\r\n                </TextField>\r\n              }\r\n              name='active'\r\n              control={control}\r\n              defaultValue={selectedItem.active}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={1}>\r\n            <Controller\r\n              as={\r\n                <TextField\r\n                  id='text'\r\n                  select\r\n                  label='Text Flag'\r\n                  fullWidth\r\n                  variant='filled'\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                  // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>\r\n                    Yes\r\n                  </MenuItem>\r\n                  <MenuItem key={2} value={false}>\r\n                    No\r\n                  </MenuItem>\r\n                </TextField>\r\n              }\r\n              name='text'\r\n              control={control}\r\n              defaultValue={selectedItem.text}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              type='number'\r\n              id='multilineRows'\r\n              name='multilineRows'\r\n              label='Text Multiline Rows'\r\n              fullWidth\r\n              autoComplete='account-payables-settings-multilineRows'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.multilineRows}\r\n            />\r\n          </Grid>\r\n          {selectedItem.paymentPeriod && selectedItem.paymentPeriod.id && (\r\n            <AccountPayablesSettingsParentComponent />\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() =>\r\n                history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)\r\n              }\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE, URL_OPTIONS } from \"../Utils\";\r\n\r\n\r\nexport const ENTITY = \"gradeLevelPayables\";\r\nconst sort = \"priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize, periodId) => axios.get(`${Utils.urlListPattern(ENTITY)}/period/${periodId}`, {\r\n params: {\r\n  searchValue: searchValue,\r\n  page: page,\r\n  size: pageSize,\r\n  sort: sort\r\n }\r\n})\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const getOptionsByPeriod = (periodId) => axios.get(API_URL_BASE + ENTITY + URL_OPTIONS + `/period/${periodId}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function GradeLevelPayablesService() {\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { deleteItem, getList, getOptions } from '../../api/gradeLevelPayables/GradeLevelPayablesService';\r\nimport { selectPageable, setPageable, setSelectedItem, resetSelectedItem } from '../../api/gradeLevelPayables/GradeLevelSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\nimport { Box, Grid, Paper } from '@material-ui/core';\r\nimport SubTitleComponent from '../common/SubTitleComponent';\r\nimport SelectGrid from '../common/SelectGrid';\r\n\r\n\r\nexport default function GradeLevelPayablesListComponent(props) {\r\n\r\n\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  const [optionsList, setOptionsList] = useState({\r\n    periodList: []\r\n  });\r\n\r\n  const [filter, setFilter] = useState({\r\n    period: { id: 'All' }\r\n  });\r\n\r\n  const cols = [\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return row.level.description\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N'\r\n      }\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n\r\n    doInitOptions()\r\n  }, []);\r\n\r\n\r\n\r\n  const doInitOptions = () => {\r\n    getOptions().then(response => {\r\n      let list = {\r\n        ...response.data.listService,\r\n        periodList: [{\r\n          \"id\": \"ALL\",\r\n          \"description\": \"All\",\r\n        },\r\n        ...response.data.listService.periodList]\r\n      }\r\n\r\n      setOptionsList(list)\r\n    })\r\n  }\r\n\r\n\r\n  const retrieve = ({ searchValue, paging, periodId = filter.period.id }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage, periodId)\r\n      .then(({ data }) => {\r\n        console.log(`[GradeLevelPayablesListComponent.retrieve] data=`, data)\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.retrieve', 'GradeLevelPayablesService.getList'))\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n\r\n  const doEdit = (selected) => {\r\n    let aps = [...selected.accountPayablesSettings]\r\n    aps.sort((a, b) => {\r\n      return a.priority - b.priority;\r\n    })\r\n    dispatch(setSelectedItem({\r\n      ...selected,\r\n      accountPayablesSettings: [...aps]\r\n    }))\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.doDelete', 'GradeLevelPayablesService.deleteItem'))\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[AccountPayablesSettingsListComponent.changeSelectState] name=${name}, value=${value}`)\r\n    setFilter({\r\n      ...filter,\r\n      [name]: { id: value }\r\n    })\r\n    console.log(`[AccountPayablesSettingsListComponent.changeSelectState]  filter=`, filter)\r\n\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      },\r\n      periodId: value\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Grade Level Payables List</TitleComponent>\r\n\r\n      <Box py={5}>\r\n        <Paper elevation={2} variant=\"elevation\" >\r\n          <Box pb={3} px={3}>\r\n            <SubTitleComponent>Filter</SubTitleComponent>\r\n            <Grid container spacing={3}>\r\n              <SelectGrid sm={3} name=\"period\" label=\"Period\" value={filter.period.id} options={optionsList.periodList}\r\n                onChange={e => changeSelectState(e)} />\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        // list={this.state.list}\r\n        // searchValue={this.state.searchValue}\r\n        // paging={this.state.paging}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { getActiveList } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { ERROR_CODE } from '../../api/Utils';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function GradeLevelAccountPayablesSettingsListComponent(props) {\r\n\r\n  const { showErrorAlert, showErrorMsgAlert } = useMessageAlert();\r\n  const [store, setStore] = useState({\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n      rowsPerPage: 25,\r\n      totalElements: 0,\r\n      currentPage: 0\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    doRetrieve()\r\n  }, [props.selectedItem])\r\n\r\n  const doRetrieve = () => {\r\n    console.log(`[GradeLevelAccountPayablesSettingsListComponent.doRetrieve] props.selectedItem==>`, props.selectedItem)\r\n    if (!props.selectedItem.period || !props.selectedItem.period.id) {\r\n      showErrorAlert('Please select period')\r\n      return\r\n    }\r\n    getActiveList(props.selectedItem.period.id, store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\r\n      .then(response => {\r\n        let data = {\r\n          list: response.data.pagingList.content,\r\n          searchValue: store.searchValue,\r\n          paging: {\r\n            rowsPerPage: response.data.pagingList.size,\r\n            currentPage: response.data.pagingList.pageable.pageNumber,\r\n            totalElements: response.data.pagingList.totalElements,\r\n            totalPage: response.data.pagingList.totalPage\r\n          }\r\n        }\r\n        setStore(data);\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelAccountPayablesSettingsListComponent.retrieve', 'AccountPayablesSettingsService.getActiveList'))\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.currentPage = newPage\r\n    setStore(data);\r\n\r\n    doRetrieve();\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    setStore(data)\r\n    doRetrieve();\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    store.searchValue = searchValue\r\n    doRetrieve();\r\n  }\r\n  const doAddItem = (row) => {\r\n    props.setGradeLevelPayables(row);\r\n  }\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Add',\r\n      render: function (row) {\r\n        return (<IconButton aria-label=\"add\" onClick={() => doAddItem(row)}>\r\n          <AddIcon fontSize=\"large\" />\r\n        </IconButton>);\r\n      }\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod.description;\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'text',\r\n      headerName: 'text',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CustomTableGrid\r\n        store={store}\r\n        cols={cols}\r\n        showAction={false}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  IconButton\r\n} from '@material-ui/core'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport GradeLevelAccountPayablesSettingsListComponent from './GradeLevelAccountPayablesSettingsListComponent'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport SelectGrid from '../common/SelectGrid'\r\nimport {\r\n  save,\r\n  getOptionsByPeriod\r\n} from '../../api/gradeLevelPayables/GradeLevelPayablesService'\r\nimport {\r\n  selectSelectedItem,\r\n  setOptionsList,\r\n  updateSelectedItem,\r\n  resetSelectedItem,\r\n  setPageableEntity\r\n} from '../../api/gradeLevelPayables/GradeLevelSlice'\r\nimport TitleComponent from '../common/TitleComponent'\r\nimport useMessageAlert from '../../api/useMessageAlert'\r\n\r\nlet renderCount = 0\r\n\r\nexport default function GradeLevelPayablesDetailsComponent (props) {\r\n  const { showErrorMsgAlert } = useMessageAlert()\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [message, setMessage] = useState('Loading. Please wait...')\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT)\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    } else if (status === INIT_STATUS.LOAD) {\r\n      setStatus(INIT_STATUS.RESET)\r\n      onRetrieve()\r\n    }\r\n  }, [selectedItem, status])\r\n\r\n  const handleCheckboxChange = e => {\r\n    const { name, checked } = e.target\r\n\r\n    console.log(\r\n      `[GradeLevelPayablesDetailsComponent.handleCheckboxChange] name=${name}, checked=${checked}`\r\n    )\r\n    dispatch(\r\n      updateSelectedItem({\r\n        [name]: checked\r\n      })\r\n    )\r\n  }\r\n  const onRetrieve = () => {\r\n    doRetrieve('-1')\r\n  }\r\n\r\n  const doRetrieve = id => {\r\n    console.log(\r\n      `[GradeLevelPayablesDetailsComponent.onRetrieve] id=${id}, props.match.params.id==>${props.match.params.id}`\r\n    )\r\n\r\n    if (props.match.params.id === -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    // if (!selectedItem.period || !selectedItem.period.id) {\r\n    //   showErrorAlert('Please select period')\r\n    //   return\r\n    // }\r\n\r\n    setMessage(`Loading. Please wait...`)\r\n\r\n    const period = selectedItem.period && selectedItem.period.id? selectedItem.period.id:  id;//selectedItem.period? selectedItem.period.id : id;\r\n    getOptionsByPeriod(period)\r\n      .then(response => onRetrieveResponseAction(response))\r\n      .catch(error =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.RETRIEVE_ERROR,\r\n          'GradeLevelPayablesDetailsComponent.onRetrieve',\r\n          'GradeLevelPayablesService.getOptions'\r\n        )\r\n      )\r\n  }\r\n\r\n  const onRetrieveResponseAction = response => {\r\n    console.log(\r\n      `[GradeLevelPayablesDetailsComponent.onRetrieveResponseAction] response==>`,\r\n      response\r\n    )\r\n    dispatch(setOptionsList({\r\n      accountPayablesSettings: [...(selectedItem.accountPayablesSettings?selectedItem.accountPayablesSettings: [])],\r\n      optionsList: response.data.listService\r\n    }))\r\n\r\n\r\n    setMessage(``)\r\n  }\r\n\r\n  const onSubmitForm = e => {\r\n    e.preventDefault()\r\n\r\n    setMessage(``)\r\n    save({\r\n      id: selectedItem.id,\r\n      level: selectedItem.level,\r\n      period: selectedItem.period,\r\n      active: selectedItem.active,\r\n      accountPayablesSettings: selectedItem.list\r\n    })\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)\r\n      })\r\n      .catch(error =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.SAVE_ERROR,\r\n          'GradeLevelPayablesDetailsComponent.onSubmitForm',\r\n          'GradeLevelPayablesService.save'\r\n        )\r\n      )\r\n  }\r\n\r\n  const setGradeLevelPayables = data => {\r\n    console.log(\r\n      `[GradeLevelPayablesDetailsComponent.setGradeLevelPayables] data==>`,\r\n      data\r\n    )\r\n\r\n    let list = [...selectedItem.list]\r\n    if (list.filter(row => row.id === data.id).length === 0) {\r\n      let temp = {\r\n        ...data,\r\n        status: 'NEW'\r\n      }\r\n      list.push(temp)\r\n      dispatch(\r\n        updateSelectedItem({\r\n          list: list\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  const doDeleteItem = id =>\r\n    dispatch(\r\n      updateSelectedItem({\r\n        list: [...selectedItem.list.filter(item => item.id !== id)]\r\n      })\r\n    )\r\n\r\n  const onChangePeriod = e => {\r\n    const { value } = e.target\r\n    changeSelectState(e)\r\n    doRetrieve(value)\r\n  }\r\n\r\n  const changeSelectState = e => {\r\n    const { name, value } = e.target\r\n    console.log(\r\n      `[GradeLevelPayablesDetailsComponent.changeSelectState] name=${name}, value=${value}`\r\n    )\r\n    dispatch(\r\n      updateSelectedItem({\r\n        [name]: { id: value }\r\n      })\r\n    )\r\n  }\r\n\r\n  const GridActionButtons = () => {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={9}></Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button\r\n            variant='contained'\r\n            href={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL + '/-1'}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            New\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)}\r\n            startIcon={<CancelIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n      render: function (row) {\r\n        return (\r\n          <>\r\n            {row.status === 'NEW' && (\r\n              <>\r\n                {row.description} <WarningIcon fontSize='small' />\r\n              </>\r\n            )}\r\n            {row.status !== 'NEW' && row.description}\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        // return row.period.description;\r\n        return (\r\n          <>\r\n            {row.period.id !== selectedItem.period.id && (\r\n              <>\r\n                {row.period.description} <WarningIcon fontSize='small' />\r\n              </>\r\n            )}\r\n            {row.period.id === selectedItem.period.id && row.period.description}\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod ? row.paymentPeriod.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount'\r\n    },\r\n    {\r\n      field: 'text',\r\n      headerName: 'Text',\r\n      render: function (row) {\r\n        return row.text ? 'Y' : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority'\r\n    },\r\n    {\r\n      headerName: 'Action',\r\n      render: function (row) {\r\n        return (\r\n          <IconButton aria-label='add' onClick={() => doDeleteItem(row.id)}>\r\n            <DeleteIcon fontSize='large' />\r\n          </IconButton>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n  renderCount++\r\n  return (\r\n    <>\r\n      {console.log(\r\n        `[GradeLevelPayablesDetailsComponent.render] renderCount=${renderCount} selectedItem==>`,\r\n        selectedItem\r\n      )}\r\n      <TitleComponent>Grade Level Payables</TitleComponent>\r\n      {message && <Alert severity='info'>{message}</Alert>}\r\n\r\n      <form onSubmit={e => onSubmitForm(e)}>\r\n        <GridActionButtons />\r\n\r\n        <Box pb={3}>\r\n          <Grid container spacing={3}>\r\n            <SelectGrid\r\n              sm={2}\r\n              required\r\n              name='level'\r\n              label='Level'\r\n              value={selectedItem.level.id}\r\n              options={selectedItem.optionsList.levelList}\r\n              onChange={e => changeSelectState(e)}\r\n            />\r\n\r\n            <SelectGrid\r\n              sm={3}\r\n              required={selectedItem.id ? false : true}\r\n              disabled={selectedItem.id ? true : false}\r\n              name='period'\r\n              label='Period'\r\n              value={selectedItem.period.id}\r\n              options={selectedItem.optionsList.periodList}\r\n              onChange={e => onChangePeriod(e)}\r\n            />\r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <FormGroup aria-label='position' row>\r\n                <FormControlLabel\r\n                  value='true'\r\n                  control={\r\n                    <Checkbox\r\n                      checked={selectedItem.active}\r\n                      onChange={e => handleCheckboxChange(e)}\r\n                      name='active'\r\n                    />\r\n                  }\r\n                  label='Active'\r\n                  labelPlacement='end'\r\n                />\r\n              </FormGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box py={3}>\r\n          <Box pb={3}>\r\n            <CustomTableGrid\r\n              store={selectedItem}\r\n              cols={cols}\r\n              showAction={false}\r\n              showPaging={false}\r\n              showSearch={false}\r\n            />\r\n          </Box>\r\n          <GridActionButtons />\r\n        </Box>\r\n\r\n        <GradeLevelAccountPayablesSettingsListComponent\r\n          setGradeLevelPayables={setGradeLevelPayables}\r\n          selectedItem={selectedItem}\r\n        />\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function GlobalAlertMsgDialog() {\r\n\r\n    const { props, closeMsgAlert } = useMessageAlert();\r\n\r\n    return (\r\n        <>\r\n            {console.log(`[GlobalAlertMsgDialog.return] props=>`, props)}\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={() => closeMsgAlert()}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <Alert severity={props.severity} align=\"right\">\r\n                        <Typography variant=\"h6\">\r\n                            {props.title}\r\n                        </Typography>\r\n                    </Alert>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {props.msg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => closeMsgAlert()}>{props.label}</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { Box, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TitleComponent from \"../common/TitleComponent\";\r\nimport SelectGrid from \"../common/SelectGrid\";\r\nimport SubTitleComponent from \"../common/SubTitleComponent\";\r\nimport { ProcessingService } from \"../../api/processing/ProcessingService\";\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from \"../../api/Utils\";\r\nimport { selectPageable, setPageable, setSelectedItem } from '../../api/processing/ProcessingSlice';\r\nimport CustomTableGrid from \"../common/CustomTableGrid\";\r\nimport ConfirmMsgDialog from \"../common/ConfirmMsgDialog\";\r\n\r\nexport default function ClosePeriodComponent(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const { getFormatedErrorMessage, showErrorMsgAlert, showErrorAlert } = useMessageAlert();\r\n  const { deleteItem, getListClosePeriod, getOptions, saveClosePeriod } = ProcessingService()\r\n  const [filter, setFilter] = useState({\r\n    periodFrom: { id: '' },\r\n    periodTo: { id: '' }\r\n  });\r\n  const [optionsList, setOptionsList] = useState({\r\n    periodList: []\r\n  });\r\n\r\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  useEffect(() => {\r\n    doInitOptions()\r\n  }, []);\r\n\r\n\r\n  const doInitOptions = () => {\r\n    setMessage('Loading. Please wait...')\r\n    getOptions().then(response => {\r\n      console.log(`[ClosePeriodComponent.doInitOptions] response=>`, response)\r\n      let list = {\r\n        ...response.data.listService,\r\n        periodList: [\r\n          ...response.data.listService.periodList]\r\n      }\r\n      setMessage('')\r\n      setOptionsList(list)\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'ClosePeriodComponent.onRetrieve', 'ClosePeriodComponent.getOptions'));\r\n  }\r\n\r\n  const doShowProcessConfirmDialog = () => {\r\n    setMessage('')\r\n\r\n    if (doValidateParameters()) {\r\n      setConfirmDialogOpen(true)\r\n    }\r\n\r\n  }\r\n  const doCloseProcessConfirmDialog = () => {\r\n    setConfirmDialogOpen(false)\r\n  }\r\n\r\n  const setConfirmDialogSelection = (value) => {\r\n    console.log(`[ClosePeriodComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.OK) {\r\n      doProcesses()\r\n    }\r\n  }\r\n  const doValidateParameters = () => {\r\n    let errorMsg = []\r\n\r\n    if (!filter.periodFrom.id) {\r\n      errorMsg.push('Invalid Period From')\r\n    }\r\n    if (!filter.periodTo.id) {\r\n      errorMsg.push('Invalid Period To')\r\n    }\r\n    if (errorMsg.length == 0) {\r\n      if (filter.periodFrom.id == filter.periodTo.id) {\r\n        errorMsg.push('Invalid Period From and To. Period From and To should not be equal.')\r\n      }\r\n    }\r\n    if (errorMsg.length > 0) {\r\n      const msg = errorMsg.join(', ')\r\n      setMessage(msg);\r\n      //showErrorAlert(msg)\r\n      return false;\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const doProcesses = () => {\r\n    setMessage(`Process has started...`);\r\n    saveClosePeriod({\r\n      type: 'CLOSE_PERIOD',\r\n      params: {\r\n        fromPeriodId: filter.periodFrom.id,\r\n        toPeriodId: filter.periodTo.id\r\n      }\r\n    }).then(request => {\r\n      console.log(`[ClosePeriodComponent.changeSelectState] request=>`, request)\r\n\r\n      setMessage(`Done processing! Please see message in the list below.`);\r\n      doRetrieve()\r\n    })\r\n      .catch(error => {\r\n        setMessage(getFormatedErrorMessage(error, ERROR_CODE.SAVE_ERROR, 'ClosePeriodComponent.onRetrieve', 'ClosePeriodComponent.save'));\r\n        showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'ClosePeriodComponent.onRetrieve', 'ClosePeriodComponent.save')\r\n        doRetrieve()\r\n      });\r\n  }\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[ClosePeriodComponent.changeSelectState] name=${name}, value=${value}`)\r\n    setFilter({\r\n      ...filter,\r\n      [name]: { id: value }\r\n    })\r\n    console.log(`[ClosePeriodComponent.changeSelectState]  filter=`, filter)\r\n  }\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getListClosePeriod(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'ClosePeriodComponent.retrieve', 'ClosePeriodComponent.getListClosePeriod'))\r\n\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}/-1`)\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[ClosePeriodComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.DELETE_ERROR, 'ClosePeriodComponent.doDelete', 'CodeGroupsService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n  const cols = [\r\n    {\r\n      field: 'type',\r\n      headerName: 'Type',\r\n    }, {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      render: function (row) {\r\n        let status = row.status\r\n        if (status === 'X') {\r\n          status = 'Not Processed'\r\n        } else if (status === 'P') {\r\n          status = 'Pending'\r\n        } else if (status === 'R') {\r\n          status = 'Running'\r\n        } else if (status === 'F') {\r\n          status = 'Failed'\r\n        } else if (status === 'C') {\r\n          status = 'Completed'\r\n        }\r\n        return status\r\n      }\r\n    }, {\r\n      field: 'statusMessage',\r\n      headerName: 'Message',\r\n    }, {\r\n      headerName: 'User',\r\n      render: function (row) {\r\n        return row.user ? row.user.userName : ''\r\n      }\r\n    }, {\r\n      headerName: 'Creation',\r\n      render: function (row) {\r\n        return row.createdDate ? moment(row.createdDate).format('lll') : ''\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[ClosePeriodComponent.return] `)}\r\n      <TitleComponent>Close Period</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n      <form>\r\n        <Box py={5}>\r\n          <Paper elevation={2} variant=\"elevation\" >\r\n            <Box pb={3} px={3}>\r\n              <SubTitleComponent>Filter</SubTitleComponent>\r\n              <Grid container spacing={3}>\r\n                <SelectGrid sm={3} name=\"periodFrom\" label=\"From Period\" value={filter.periodFrom.id} options={optionsList.periodList}\r\n                  onChange={e => changeSelectState(e)} />\r\n                <SelectGrid sm={3} name=\"periodTo\" label=\"To Period\" value={filter.periodTo.id} options={optionsList.periodList}\r\n                  onChange={e => changeSelectState(e)} />\r\n              </Grid>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={() => doShowProcessConfirmDialog()} startIcon={<SaveIcon />}>Process</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={11}>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <CustomTableGrid\r\n          store={currPageable}\r\n          cols={cols}\r\n          onChangePage={doHandleChangePage}\r\n          onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n          doRetrieve={doRetrieve}\r\n          doEdit={doEdit}\r\n          doNew={doNew}\r\n          doDelete={doShowConfirmDelete}\r\n          doSearch={doSearch}\r\n        />\r\n        <ConfirmMsgDialog\r\n          open={deleteDialogOpen}\r\n          type={OPTIONS.YESNO}\r\n          title=\"Confirm delete\"\r\n          msg=\"Are you sure you want to delete?\"\r\n          closeDialog={doCloseConfirmDelete}\r\n          setDialogSelection={setDeleteDialogSelection} />\r\n\r\n        <ConfirmMsgDialog\r\n          open={confirmDialogOpen}\r\n          type={OPTIONS.OKCANCEL}\r\n          title=\"Please confirm\"\r\n          msg=\"You are about to close the period. Do you wish to continue?\"\r\n          closeDialog={doCloseProcessConfirmDialog}\r\n          setDialogSelection={setConfirmDialogSelection} />\r\n      </form>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE, URL_OPTIONS } from \"../Utils\";\r\n\r\nexport const ProcessingService = () => {\r\n\r\n const ENTITY = \"processing\";\r\n const sort = \"createdDate,desc\"\r\n\r\n const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\n const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\n const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\n const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\n\r\n const PROCESS_NAME_CLOSEPERIOD = \"CLOSE_PERIOD\"\r\n const getListClosePeriod = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY) + '/' + PROCESS_NAME_CLOSEPERIOD}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\n const getOptionsByPeriod = (periodId) => axios.get(API_URL_BASE + ENTITY + URL_OPTIONS + `/period/${periodId}`)\r\n const saveClosePeriod = (data) => axios.patch(`${API_URL_BASE + ENTITY + '/period'}`, data)\r\n\r\n return {\r\n  getList: getList,\r\n  get: get,\r\n  getOptions: getOptions,\r\n  deleteItem: deleteItem,\r\n  //save: save,\r\n\r\n  getListClosePeriod: getListClosePeriod,\r\n  getOptionsByPeriod: getOptionsByPeriod,\r\n  saveClosePeriod: saveClosePeriod\r\n }\r\n}\r\n\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nimport { PAGE_URL } from './api/Utils';\r\n\r\nimport ErrorComponent from './api/ErrorComponent'\r\nimport FooterComponent from './forms/common/FooterComponent'\r\n\r\nimport EndUserListComponent from './forms/endUser/EndUserListComponent';\r\nimport EndUserDetailComponent from './forms/endUser/EndUserDetailComponent';\r\n\r\nimport AuthenticatedRoute from './security/AuthenticatedRoute'\r\nimport SignInComponent from './security/SignInComponent';\r\nimport LogoutComponent from './security/LogoutComponent'\r\nimport CodeGroupsListComponent from './forms/codeGroups/CodeGroupsListComponent';\r\nimport CodeGroupsDetailComponent from './forms/codeGroups/CodeGroupsDetailComponent';\r\nimport Dashboard from './forms/dashboard/Dashboard';\r\nimport AppBarComponent from './forms/common/AppBarComponent';\r\nimport StudentDetailComponent from './forms/student/StudentDetailComponent';\r\nimport StudentListComponent from './forms/student/StudentListComponent';\r\nimport SchoolDetailComponent from './forms/school/SchoolDetailComponent';\r\nimport SchoolListComponent from './forms/school/SchoolListComponent';\r\nimport BillingComponent from './forms/billing/BillingComponent';\r\nimport AccountPayablesSettingsListComponent from './forms/accountPayables/AccountPayablesSettingsListComponent';\r\nimport AccountPayablesSettingsDetailComponent from './forms/accountPayables/AccountPayablesSettingsDetailComponent';\r\nimport GradeLevelPayablesListComponent from './forms/gradeLevelPayables/GradeLevelPayablesListComponent';\r\nimport GradeLevelPayablesDetailsComponent from './forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent';\r\nimport GlobalAlertMsgDialog from './forms/common/GlobalAlertMsgDialog';\r\nimport ClosePeriodComponent from './forms/closePeriod/ClosePeriodComponent';\r\n\r\nconst useStylesRouting = makeStyles((theme) => ({\r\n root: {\r\n  display: 'flex',\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n container: {\r\n  paddingTop: theme.spacing(4),\r\n  paddingBottom: theme.spacing(4),\r\n },\r\n\r\n}));\r\n\r\nconst AppRouting = () => {\r\n const classes = useStylesRouting();\r\n\r\n return (\r\n  <>\r\n   <CssBaseline />\r\n   <Router>\r\n    <div className={classes.root}>\r\n\r\n     <AppBarComponent />\r\n\r\n     <main className={classes.content}>\r\n\r\n      {/* to display content below the toolbar */}\r\n      <div className={classes.toolbar} />\r\n\r\n      <GlobalAlertMsgDialog />\r\n\r\n      <Switch>\r\n       <Route path={PAGE_URL.ROOT} exact component={Dashboard} />\r\n       <Route path={PAGE_URL.INDEX} exact component={Dashboard} />\r\n\r\n       <Route path={PAGE_URL.LOGOUT} component={LogoutComponent} />\r\n       <Route path={PAGE_URL.LOGIN} component={SignInComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.STUDENT_LIST} component={StudentListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL} component={StudentDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL_URL} component={StudentDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.BILLING_PAYABLES} exact component={BillingComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.BILLING} exact component={BillingComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.USER_LIST} exact component={EndUserListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.USER_DETAIL} exact component={EndUserDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.USER_DETAIL_URL} exact component={EndUserDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_LIST} exact component={CodeGroupsListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL} exact component={CodeGroupsDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL_URL} exact component={CodeGroupsDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.SCHOOL_LIST} exact component={SchoolListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL} exact component={SchoolDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL_URL} exact component={SchoolDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST} exact component={AccountPayablesSettingsListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL} exact component={AccountPayablesSettingsDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL} exact component={AccountPayablesSettingsDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_LIST} exact component={GradeLevelPayablesListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL} exact component={GradeLevelPayablesDetailsComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL} exact component={GradeLevelPayablesDetailsComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.CLOSE_PERIOD_DETAIL_URL} exact component={ClosePeriodComponent} />\r\n\r\n\r\n       <Route component={ErrorComponent} />\r\n      </Switch>\r\n\r\n      <FooterComponent />\r\n     </main>\r\n    </div>\r\n   </Router>\r\n  </>\r\n );\r\n\r\n}\r\n\r\nexport default AppRouting;","import React, { useEffect } from 'react'\r\nimport './App.css'\r\nimport { Provider } from 'react-redux'\r\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'\r\n\r\nimport store from './api/store'\r\n\r\nimport AppRouting from './AppRouting'\r\nimport { THEME, useTheme } from './api/useTheme'\r\nimport useSecurityServices from './security/useSecurityServices'\r\n\r\nfunction App() {\r\n  const { initAxios, initUser } = useSecurityServices()\r\n  const useAppTheme = useTheme()\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: useAppTheme.props.darkMode ? THEME.DARK_MODE : THEME.LIGHT_MODE,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    //initialize user\r\n    initAxios()\r\n    initUser()\r\n    useAppTheme.initTheme()\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <AppRouting />\r\n        </MuiThemeProvider>\r\n      </Provider>\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { GlobalVariableProvider } from './providers/GlobalVariableProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalVariableProvider>\r\n      <App />\r\n    </GlobalVariableProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","\r\nimport {Grid, TableCell, TableRow} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport const INIT_STATUS = {\r\n    INIT: 'INIT',\r\n    DONE: 'DONE',\r\n    LOAD: 'LOAD',\r\n    RESET: 'RESET',\r\n    PAYABLES: 'PAYABLES',\r\n    PAYABLES_RESET: 'PAYABLES_RESET'\r\n}\r\n\r\nexport const defaultPageable = {\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0,\r\n        totalPage: 0\r\n    }\r\n}\r\n\r\n\r\nexport const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n});\r\n\r\nexport const USER_TEMP = {\r\n    userName: '',\r\n    userFullName: 'Guest',\r\n    schoolName: 'SARA PROJECT',\r\n    schoolAddress: '',\r\n    schoolLogo: '',\r\n    schoolId: '',\r\n}\r\n// export const URL_BASE = 'http://localhost:8081';\r\nexport const URL_BASE_DEV = 'http://localhost:5000';\r\nexport const URL_BASE = process.env.NODE_ENV === 'development' ? URL_BASE_DEV : '';\r\nexport const AUTH_URL_BASE = URL_BASE + '/auth';\r\nexport const API_URL_BASE = URL_BASE + '/api/';\r\n\r\nexport const URL_LIST = \"/l\";\r\nexport const URL_DELETE = \"/d\";\r\nexport const URL_DETAILS = \"/g\";\r\nexport const URL_OPTIONS = \"/o\";\r\nexport const URL_SAVE = \"/s\";\r\n\r\nexport const AUTH_USER = 'auth/setUser';\r\nexport const AUTH_USER_OBJ = 'auth/setUserObj';\r\nexport const JWT_TOKEN = 'auth/setToken';\r\n\r\nexport const UPDATE_ERROR = 'Error: Unable to update. Please contact system administrator.';\r\nexport const REQUIRED_DESCRIPTION = 'Description is required';\r\nexport const REQUIRED_5_DESCRIPTION = 'Description should be atleast 5 characters';\r\nexport const REQUIRED_TARGET_DATE = 'Target date is required';\r\n\r\n\r\nexport const OPTIONS = {\r\n    YESNO: 'YESNO',\r\n    YES: 'YES',\r\n    NO: 'NO',\r\n    OKCANCEL: 'OKCANCEL',\r\n    OK: 'OK',\r\n    CANCEL: 'CANCEL'\r\n}\r\nexport const PAGE_URL = {\r\n    LOGO_URL: '/r/logo/',\r\n    ROOT: '/',\r\n    INDEX: '/index.html',\r\n    DASHBOARD: '/dashboard',\r\n    LOGOUT: '/logout',\r\n    LOGIN: '/login',\r\n    GRADE_LEVEL_PAYABLES_LIST: '/ui/grade-level-payables-list',\r\n    GRADE_LEVEL_PAYABLES_DETAIL: '/ui/grade-level-payables-detail/:id',\r\n    GRADE_LEVEL_PAYABLES_DETAIL_URL: '/ui/grade-level-payables-detail',\r\n    ACCOUNT_PAYABLES_SETTINGS_LIST: '/ui/account-payables-settings-list',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL: '/ui/account-payables-settings-detail/:id',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL: '/ui/account-payables-settings-detail',\r\n    SCHOOL_LIST: '/ui/school-list',\r\n    SCHOOL_DETAIL: '/ui/school-detail/:id',\r\n    SCHOOL_DETAIL_URL: '/ui/school-detail',\r\n    STUDENT_LIST: '/ui/student-list',\r\n    STUDENT_DETAIL: '/ui/student-detail/:id',\r\n    STUDENT_DETAIL_URL: '/ui/student-detail',\r\n    BILLING: '/ui/billing',\r\n    BILLING_PAYABLES: '/ui/billing/:id',\r\n    BILLING_PAYABLES_URL: '/ui/billing',\r\n    USER_LIST: '/ui/user-list',\r\n    USER_DETAIL: '/ui/user-detail/:id',\r\n    USER_DETAIL_URL: '/ui/user-detail',\r\n    CODE_GROUPS_DETAIL: '/ui/code-groups-detail/:id',\r\n    CODE_GROUPS_DETAIL_URL: '/ui/code-groups-detail',\r\n    CODE_GROUPS_LIST: '/ui/code-groups-list',\r\n    ADDRESS_LIST: '/ui/address-list',\r\n    ADDRESS_DETAIL: '/ui/address-detail/:id',\r\n    USER_ADDRESS_DETAIL: '/ui/address-detail/:id/:refId/:typeId',\r\n    CLOSE_PERIOD_DETAIL_URL: '/ui/close-period-detail'\r\n\r\n}\r\nexport const ERROR_CODE = {\r\n    LOGIN_ERROR: '100000',\r\n    RETRIEVE_ERROR: '100001',\r\n    SAVE_ERROR: '100002',\r\n    DELETE_ERROR: '100003',\r\n    LIST_ERROR: '100004'\r\n}\r\n\r\nexport const ADDRESS_TYPE = {\r\n    USER: '1',\r\n    STUDENT: '2',\r\n    PARENT: '3'\r\n}\r\nexport const StyledTableHeadRow = withStyles((theme) => ({\r\n    root: {\r\n        fontWeight: \"bold\",\r\n        // '&:nth-of-type(odd)': {\r\n        //     backgroundColor: theme.palette.background,\r\n        // },\r\n    },\r\n    head: {\r\n        // backgroundColor: theme.palette.common.black,\r\n        // color: theme.palette.common.white,\r\n    },\r\n    // body: {\r\n    //     fontSize: 14,\r\n    //     fontWeight: \"bold\",\r\n    // },\r\n}))(TableRow);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        }\r\n    },\r\n}))(TableRow);\r\n\r\nexport const StyledTableHeadCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 16\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 12,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 14,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 20,\r\n    },\r\n}))(TableCell);\r\n\r\nexport const StyledGrid = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(0, 0),\r\n    },\r\n}))(Grid);\r\n\r\n\r\nclass Utils {\r\n\r\n    getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.error(`[${formMethod}] ${serviceName} error msg: ${errMsg}`, error);\r\n        console.error(`[${formMethod}] ${serviceName} error `, JSON.stringify(error));\r\n\r\n        if (error.message) {\r\n            errMsg = error.message\r\n        }\r\n\r\n        if (error.response) {\r\n            // Request made and server responded\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n            errMsg = `${error.response.data}`\r\n        }\r\n\r\n        return errMsg;\r\n    }\r\n    urlListPattern = (entity) => API_URL_BASE + entity + URL_LIST\r\n    urlDeletePattern = (entity) => API_URL_BASE + entity + URL_DELETE\r\n    urlDetailsPattern = (entity) => API_URL_BASE + entity + URL_DETAILS\r\n    urlOptionsPattern = (entity) => API_URL_BASE + entity + URL_OPTIONS\r\n    urlSavePattern = (entity) => API_URL_BASE + entity + URL_SAVE\r\n}\r\n\r\nexport default new Utils();"],"sourceRoot":""}