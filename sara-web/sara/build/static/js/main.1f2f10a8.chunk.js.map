{"version":3,"sources":["security/AuthenticationProvider.js","forms/common/CSS.js","api/ErrorComponent.jsx","forms/common/FooterComponent.jsx","api/endUser/EndUserService.jsx","forms/common/PaginationComponent.js","forms/common/CustomTableGrid.js","forms/endUser/EndUserListComponent.jsx","forms/endUser/EndUserDetailHtml.js","forms/endUser/EndUserDetailComponent.jsx","api/address/AddressService.jsx","forms/address/AddressListComponent.jsx","forms/common/TextFormControl.js","security/AuthenticationService.js","forms/address/AddressDetailComponent.jsx","security/AuthenticatedRoute.jsx","security/SignInHtml.js","security/SignInComponent.js","security/LogoutComponent.jsx","api/codeGroups/CodeGroupsService.jsx","forms/codeGroups/CodeGroupsListComponent.js","forms/codeGroups/CodeGroupsDetailComponent.jsx","forms/dashboard/Chart.js","forms/dashboard/StackedBarChart.js","forms/dashboard/CustomContentOfTooltip.js","forms/dashboard/Dashboard.jsx","forms/common/NestedMenuComponent.js","forms/common/MenuListItems.js","forms/common/MiniDrawer.js","forms/common/AppBarComponent.js","forms/student/StudentDetailHtml.js","api/student/StudentService.jsx","forms/student/StudentDetailComponent.js","forms/student/StudentListComponent.jsx","api/school/SchoolService.jsx","forms/school/SchoolDetailComponent.jsx","forms/school/SchoolListComponent.js","api/billing/BillingService.jsx","forms/billing/SearchResultsHtmlComponent.js","forms/billing/PayablesHtmlComponent.js","forms/billing/BillingHtmlComponent.js","forms/billing/SavePayablesConfimationHtml.js","forms/billing/BillingComponent.js","api/AccountPayablesSettingsService.jsx","forms/accountPayables/AccountPayablesSettingsListComponent.js","forms/accountPayables/AccountPayablesSettingsDetailComponent.jsx","api/GradeLevelPayablesService.jsx","forms/gradeLevelPayables/GradeLevelPayablesListComponent.js","forms/gradeLevelPayables/AccountPayablesSettingsList.js","forms/common/SelectGrid.js","forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent.jsx","AppRouting.jsx","App.js","serviceWorker.js","index.js","api/Utils.js"],"names":["AuthenticationContext","createContext","useAuth","context","useContext","Error","AuthenticationProvider","props","useState","USER_TEMP","userObj","setUserObj","value","useMemo","Provider","useStyles","makeStyles","theme","content","backgroundColor","palette","mode","grey","flexGrow","height","overflow","container","paddingTop","spacing","paddingBottom","login_paper","marginTop","display","flexDirection","alignItems","login_avatar","margin","secondary","main","login_form","width","login_submit","avatar_40","avatar_70","ErrorComponent","render","className","React","Component","Copyright","Box","mx","pt","Divider","Typography","variant","color","align","href","Date","getFullYear","FooterComponent","mt","ENTITY","getList","searchValue","page","pageSize","theurl","Utils","urlListPattern","axios","get","id","urlDetailsPattern","delete","urlDeletePattern","save","data","urlSavePattern","post","PaginationComponent","TablePagination","rowsPerPageOptions","component","paging","currentPage","count","totalElements","rowsPerPage","onChangePage","onChangeRowsPerPage","CustomTableGrid","showPaging","showSearch","showAction","useForm","register","reset","counter","setCounter","useEffect","console","log","store","INIT_STATUS","INIT","doRetrieve","RESET","Grid","item","xs","sm","FormControl","Input","name","defaultValue","onKeyDown","e","key","doSearch","target","preventDefault","doHandleKeyDown","placeholder","inputRef","endAdornment","onClick","TableContainer","Paper","elevation","Table","TableHead","cols","map","params","headerName","field","IconButton","aria-label","doEdit","fontSize","TableBody","list","row","TableCell","doDelete","doHandleChangePage","doHandleChangeRowsPerPage","EndUserListComponent","setStore","EndUserService","then","response","pagingList","size","pageable","pageNumber","sort","direction","pb","firstName","lastName","newPage","history","push","PAGE_URL","USER_DETAIL_URL","EndUserDetailHtml","control","handleSubmit","errors","useHistory","LOAD","entityId","onSubmit","onSubmitForm","Button","type","startIcon","USER_LIST","TextField","required","label","fullWidth","autoComplete","autoFocus","InputLabelProps","shrink","userName","password","as","select","optionsList","schoolList","MenuItem","school","options","studentLevelList","EndUserDetailComponent","match","thestate","entity","listService","doCancel","getListByUser","refId","API_URL_BASE","getByRefId","typeId","AddressListComponent","userHistory","hasUser","AddressService","userId","address1","address2","city","state","country","zipCode","TextFormControl","onChange","changeState","myInterceptor","AddressDetailComponent","getBlankDetails","componentDidMount","retrieve","user","setState","billTo","shipTo","routeUrl","ADDRESS_LIST","changeSelectState","renderOptions","description","cancel","ADDRESS_TYPE","USER","initialize","isUserLoggedIn","jwtTokenHeader","getJwtTokenHeader","setupAxiosInterceptors","setLoggedUserObject","getLoggedUserObj","getBasicAuthHeader","username","auth","executeJwtAuthenticationService","AUTH_URL_BASE","registerJwtSucessfulLogin","jwtToken","sessionStorage","setItem","AUTH_USER_OBJ","JSON","stringify","AUTH_USER","JWT_TOKEN","getJwtToken","getLoginUserName","getItem","parse","logout","interceptors","request","eject","removeItem","authHeader","use","a","config","headers","authorization","AuthenticatedRoute","AuthenticationService","to","SignInHtml","classes","Container","maxWidth","Avatar","message","Alert","severity","formData","onSignon","submit","SignInComponent","setMessage","userDetails","token","catch","error","LogoutComponent","CodeGroupsListComponent","CodeGroupsService","totalPage","CODE_GROUPS_DETAIL_URL","CodeGroupsDetailComponent","schoolId","setError","ERROR_CODE","RETRIEVE_ERROR","errorCode","formMethod","serviceName","errMsg","getFormatedErrorMessage","CODE_GROUPS_LIST","SAVE_ERROR","code","priority","multiline","rows","json","uv","pv","amt","Chart","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","PureComponent","jsfiddleUrl","StackedBarChart","stackId","fill","getIntroOfPage","CustomTooltip","active","payload","CustomContentOfTooltip","barSize","Dashboard","process","URL_BASE","src","faker","image","fashion","commerce","productName","random","words","people","food","px","py","m","root","background","paper","nested","paddingLeft","MenuListItems","doHandleClick","sourceName","isopen","List","aria-labelledby","ListItem","button","ListItemIcon","BILLING","ListItemText","primary","accountPayablesSettings","Collapse","in","timeout","unmountOnExit","disablePadding","ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL","ACCOUNT_PAYABLES_SETTINGS_LIST","gradeLevelPayables","GRADE_LEVEL_PAYABLES_DETAIL_URL","GRADE_LEVEL_PAYABLES_LIST","students","STUDENT_DETAIL_URL","STUDENT_LIST","SCHOOL_DETAIL_URL","SCHOOL_LIST","users","codeGroups","LOGOUT","LOGIN","useStylesDrawer","drawer","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","MiniDrawer","useTheme","Drawer","clsx","doHandleDrawerClose","AppBarComponent","appBar","zIndex","appBarShift","marginLeft","menuButton","marginRight","hide","title","useStylesAppBar","setDrawerOpen","AppBar","position","Toolbar","edge","schoolLogo","LOGO_URL","noWrap","style","textDecoration","schoolName","userFullName","pl","FormControlLabel","Switch","checked","darkMode","toggleDarkMode","StudentDetailHtml","initStatus","onRetrieve","storeId","BUTTONS","gutterBottom","lrn","studentId","level","birthDate","birthPlace","FormLabel","RadioGroup","Radio","labelPlacement","gender","contactNo","editable","fathersName","mothersName","mothersOccupation","parentCivilStatus","guardianName","StudentDetailComponent","moment","format","fathersOccupation","onSubmitFormResponseAction","onRetrieveResponseAction","onInitFormData","StudentService","StudentListComponent","edit","handleChangePage","handleChangeRowsPerPage","handleKeyDown","SchoolDetailComponent","SchoolService","schoolYear","logo","SchoolListComponent","getListBy","by","getStudentPayables","SearchResultsHtmlComponent","CustomTableHead","CustomTableBody","BILLING_PAYABLES_URL","doEditUser","require","StyledTableRow","StyledTableHeadRow","StyledTableHeadCell","PayablesHtmlComponent","total","setTotal","payables","setPayables","PAYABLES_RESET","resetPayables","DONE","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","hasNext","i","doShowSaveBillingDialog","studentPayables","payment","amount","toLocaleString","undefined","paid","balance","onBlur","el","replaceAll","numValue","Number","onPaymentBlur","inputStyle","textAlign","InputProps","startAdornment","InputAdornment","colSpan","BillingHtmlComponent","PAYABLES","doPayables","my","Select","billingSearchBy","searchBy","searchFlag","payablesFlag","doShowSaveConfirmDialog","table","border","SavePayablesConfimationHtml","confirmStore","componentRef","useRef","handlePrint","useReactToPrint","current","ConfirmPage","length","balanceTotal","paymentTotal","invoiceNo","PrintableInvoicePage","ref","schoolAddress","invoiceDate","payablesByInvoiceNo","Dialog","open","onClose","closeDialog","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","saveDialog","BillingComponent","vertical","horizontal","snackbar","setSnackbar","setConfirmStore","doInitFormData","BillingService","doSavePayables","student","doOpenSnackBar","doInitConfirmStore","doCloseSnackbar","confirmStoreTemp","Snackbar","autoHideDuration","anchorOrigin","getActiveList","getApplyToAllList","AccountPayablesSettingsListComponent","AccountPayablesService","paymentPeriod","applyToAll","renderCount","AccountPayablesSettingsDetailComponent","AccountPayablesSettingsService","initFormData","paymentPeriodList","GradeLevelPayablesListComponent","GradeLevelPayablesService","AccountPayablesSettingsList","setGradeLevelPayables","doAddItem","SelectGrid","rest","GradeLevelPayablesDetailsComponent","levelList","applyToAllList","temp","tempList","indexOf","rowTemp","status","GridActionButtons","index","splice","doDeleteItem","exist","useStylesRouting","AppRouting","initTheme","themeDarkMode","localStorage","THEME","THEME_STORAGE_NAME","setDarkMode","createMuiTheme","DARK_MODE","LIGHT_MODE","CssBaseline","path","ROOT","exact","INDEX","STUDENT_DETAIL","BILLING_PAYABLES","USER_DETAIL","ADDRESS_DETAIL","USER_ADDRESS_DETAIL","CODE_GROUPS_DETAIL","SCHOOL_DETAIL","ACCOUNT_PAYABLES_SETTINGS_DETAIL","GRADE_LEVEL_PAYABLES_DETAIL","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","URL_BASE_DEV","URL_LIST","URL_DELETE","URL_DETAILS","URL_SAVE","UPDATE_ERROR","REQUIRED_DESCRIPTION","REQUIRED_5_DESCRIPTION","REQUIRED_TARGET_DATE","DASHBOARD","DELETE_ERROR","LIST_ERROR","STUDENT","PARENT","withStyles","fontWeight","head","TableRow","action","hover","fontStyle","body","StyledTableCell","handleErrorResponse","comp","errStr","stack"],"mappings":"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","file":"static/js/main.1f2f10a8.chunk.js","sourcesContent":["import { USER_TEMP } from '../api/Utils'\r\nimport { createContext, useContext, useMemo, useState } from 'react';\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nfunction useAuth() {\r\n const context = useContext(AuthenticationContext)\r\n if (!context) {\r\n  throw new Error(`useAuth must be used within an AuthenticationProvider`)\r\n }\r\n return context;\r\n}\r\n\r\nfunction AuthenticationProvider(props) {\r\n const [userObj, setUserObj] = useState(USER_TEMP);\r\n\r\n const value = useMemo(() => [userObj, setUserObj], [userObj])\r\n return <AuthenticationContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { AuthenticationProvider, useAuth }\r\n\r\n","\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        backgroundColor:\r\n            theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    login_paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    login_avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    login_form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login_submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n    avatar_40: {\r\n        width: theme.spacing(40),\r\n        height: theme.spacing(40),\r\n    },\r\n    avatar_70: {\r\n        width: theme.spacing(70),\r\n        height: theme.spacing(70),\r\n    }\r\n}));\r\n\r\nclass CSS {\r\n\r\n}\r\n\r\nexport default new CSS();","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"container\">Oooops!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorComponent;","import { Box, Divider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FooterComponent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nfunction Copyright() {\r\n    return (\r\n        <>\r\n            <Box mx=\"auto\" pt={3}><Divider />\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    <Link color=\"inherit\" href=\"https://material-ui.com/\">Your Website</Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nexport default FooterComponent;","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\nexport const ENTITY = \"user\";\nclass EndUserService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new EndUserService();\n\n\n","import { TablePagination } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst PaginationComponent = (props) => {\r\n return (\r\n  <TablePagination rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n   component=\"div\"\r\n   page={props.paging.currentPage}\r\n   count={props.paging.totalElements}\r\n   rowsPerPage={props.paging.rowsPerPage}\r\n   onChangePage={props.onChangePage}\r\n   onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n  />\r\n )\r\n}\r\nexport default PaginationComponent;","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Table, TableHead, TableCell, TableBody, FormControl, Input, Grid, IconButton, TableContainer, Paper } from '@material-ui/core';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { INIT_STATUS, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils'\r\nimport PaginationComponent from './PaginationComponent';\r\n\r\nexport default function CustomTableGrid(props) {\r\n const { showPaging = true, showSearch = true, showAction = true } = props;\r\n\r\n const { register, reset } = useForm();\r\n const [counter, setCounter] = useState(0);\r\n\r\n useEffect(() => {\r\n  console.log(`[CustomTableGrid.useEffect] counter=${counter}`)\r\n  if (props.store.INIT_STATUS === INIT_STATUS.INIT) {\r\n   props.doRetrieve();\r\n  } else if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n   reset(props.store);\r\n  }\r\n }, [props.store])\r\n\r\n const doHandleKeyDown = (e) => {\r\n  if (e.key === 'Enter') {\r\n   props.doSearch(e.target.value)\r\n   e.preventDefault();\r\n  }\r\n  setCounter(counter + 1)\r\n }\r\n\r\n return (\r\n  <>\r\n   <Grid container spacing={3}>\r\n    {\r\n     showSearch &&\r\n     <Grid item xs={12} sm={8}>\r\n      <FormControl variant=\"filled\">\r\n       <Input name=\"searchValue\"\r\n        defaultValue={props.store.searchValue}\r\n        onKeyDown={e => doHandleKeyDown(e)}\r\n        placeholder=\"Search\"\r\n        inputRef={register}\r\n        endAdornment={<SearchIcon onClick={() => props.doRetrieve()} />}\r\n       />\r\n      </FormControl>\r\n     </Grid>\r\n    }\r\n\r\n    {\r\n     showPaging &&\r\n     <Grid item xs={12} sm={4}>\r\n      <PaginationComponent\r\n       paging={props.store.paging}\r\n       onChangePage={props.onChangePage}\r\n       onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n      />\r\n     </Grid>\r\n    }\r\n\r\n   </Grid>\r\n\r\n   <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n    <Table>\r\n     <TableHead>\r\n      <StyledTableHeadRow>\r\n       {props.cols.map(params => (\r\n        <>\r\n         <StyledTableHeadCell key={params.field}>{params.headerName}</StyledTableHeadCell>\r\n        </>\r\n       ))}\r\n       {showAction && <StyledTableHeadCell align=\"right\">\r\n        Action\r\n        <IconButton aria-label=\"add\" onClick={() => props.doEdit(-1)}>\r\n         <AddIcon fontSize=\"large\" />\r\n        </IconButton>\r\n       </StyledTableHeadCell>}\r\n\r\n      </StyledTableHeadRow>\r\n     </TableHead>\r\n     <TableBody>\r\n      {props.store.list.map(row => (\r\n       <StyledTableRow key={row.id}>\r\n        {props.cols.map(params => (\r\n         <>\r\n          <TableCell>{params.render ? params.render(row) : row[params.field]}</TableCell>\r\n         </>\r\n        ))}\r\n        {showAction && <TableCell align=\"right\">\r\n         <IconButton aria-label=\"edit\" onClick={() => props.doEdit(row.id)}>\r\n          <EditIcon fontSize=\"large\" />\r\n         </IconButton>\r\n         <IconButton aria-label=\"delete\" onClick={() => props.doDelete(row.id)}>\r\n          <DeleteIcon fontSize=\"large\" />\r\n         </IconButton>\r\n        </TableCell>}\r\n\r\n       </StyledTableRow>\r\n      ))}\r\n     </TableBody>\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   {props.showPaging && <PaginationComponent\r\n    paging={props.store.paging}\r\n    doHandleChangePage={props.doHandleChangePage}\r\n    doHandleChangeRowsPerPage={props.doHandleChangeRowsPerPage}\r\n   />}\r\n\r\n  </ >\r\n );\r\n}","import React, { useState } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\n\n\nimport EndUserService from '../../api/endUser/EndUserService';\nimport { PAGE_URL, INIT_STATUS } from '../../api/Utils'\nimport CustomTableGrid from '../common/CustomTableGrid';\nexport default function EndUserListComponent(props) {\n  const [store, setStore] = useState({\n    INIT_STATUS: INIT_STATUS.INIT,\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  });\n\n  const doRetrieve = () => {\n    EndUserService.getList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\n      .then(response => {\n        console.log(`[EndUserListComponent.retrieve ] EndUserService.getList response=>`, response)\n        let data = {\n          ...store,\n          INIT_STATUS: INIT_STATUS.RESET,\n          list: response.data.pagingList.content,\n          searchValue: response.data.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            totalElements: response.data.pagingList.totalElements,\n            currentPage: response.data.pagingList.pageable.pageNumber,\n            sort: 'title',\n            direction: 'ASC'\n          }\n        }\n        setStore(data)\n      })\n  }\n  const doEdit = (id) => {\n    console.log(`[EndUserListComponent.edit] id=${id}`)\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}/${id}`);\n  }\n  const doDelete = (id) => {\n    console.log(`[EndUserListComponent.delete] id=${id}`)\n    EndUserService.delete(id)\n      .then(response => {\n        console.log(`[EndUserListComponent.delete] response==>`, response)\n        doRetrieve();\n      })\n  }\n\n  const doHandleChangePage = (e, newPage) => {\n    //store.paging.currentPage = newPage;\n    let paging = {\n      ...store.paging\n    }\n    paging.currentPage = newPage\n    let data = {\n      ...store,\n      paging: paging\n    }\n    setStore(data);\n\n    doRetrieve();\n  }\n  const doHandleChangeRowsPerPage = (e) => {\n    let paging = {\n      ...store.paging\n    }\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n\n    let data = {\n      ...store,\n      paging: paging\n    }\n    setStore(data);\n\n    doRetrieve();\n  }\n\n  const doSearch = (searchValue) => {\n    store.searchValue = searchValue\n    doRetrieve();\n  }\n\n  const cols = [\n    {\n      field: 'firstName',\n      headerName: 'First Name',\n    },\n    {\n      field: 'lastName',\n      headerName: 'Last Name',\n      render: function (row) {\n        return row.firstName + ' ' + row.lastName;\n      }\n    }\n  ];\n\n  return (\n    <>\n      <Box pb={3}><Typography variant=\"h4\">Users</Typography></Box>\n      <CustomTableGrid\n        // showPaging={false}\n        store={store}\n        cols={cols}\n        // list={store.list}\n        // searchValue={store.searchValue}\n        // paging={store.paging}\n        onChangePage={doHandleChangePage}\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\n        doRetrieve={doRetrieve}\n        doEdit={doEdit}\n        doDelete={doDelete}\n        doSearch={doSearch}\n      />\n    </ >\n  );\n\n}\n\n","import React, { useEffect } from 'react';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nconst EndUserDetailHtml = props => {\r\n      const { control, register, handleSubmit, errors, reset } = useForm();\r\n\r\n      const history = useHistory();\r\n\r\n      useEffect(() => {\r\n            // setCounter(counter + 1);\r\n            console.log(`[EndUserDetailHtml.useEffect] props.store=>`, props.store);\r\n            if (props.store.INIT_STATUS === INIT_STATUS.LOAD) {\r\n                  props.doRetrieve(props.store.entityId);\r\n            } if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                  reset(props.store)\r\n            }\r\n      }, [props.store])\r\n\r\n      return (\r\n            <>\r\n                  {console.log(`[EndUserDetailHtml.return] props.store==>`, props.store)}\r\n                  <Typography variant=\"h4\">User Detail</Typography>\r\n\r\n                  <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                        <TextField type=\"hidden\"\r\n                              name=\"id\"\r\n                              inputRef={register}\r\n                              defaultValue={props.store.id}\r\n                        />\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"userName\"\r\n                                          name=\"userName\"\r\n                                          label=\"User Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-userName\"\r\n                                          variant=\"filled\"\r\n                                          autoFocus\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.userName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          id=\"password\"\r\n                                          type=\"password\"\r\n                                          name=\"password\"\r\n                                          label=\"Password\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-password\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.password}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"firstName\"\r\n                                          name=\"firstName\"\r\n                                          label=\"First Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-firstName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.firstName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={612}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"lastName\"\r\n                                          name=\"lastName\"\r\n                                          label=\"Last Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-lastName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.lastName}\r\n                                    />\r\n                              </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                              <Box pt={3}>\r\n                                    {/* <TextField id=\"school\"\r\n                                          select\r\n                                          required\r\n                                          name=\"school.id\"\r\n                                          label=\"School\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-school\"\r\n                                          variant=\"filled\"\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.school.id}\r\n                                          error={!!errors.name}\r\n                                    >\r\n                                          {props.store.optionsList.schoolList.map(row => (\r\n                                                <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                          ))}\r\n                                    </TextField> */}\r\n                                    <Controller\r\n                                          as={\r\n                                                <TextField id=\"school\"\r\n                                                      required\r\n                                                      select\r\n                                                      label=\"School\"\r\n                                                      fullWidth\r\n                                                      autoComplete=\"student-school\"\r\n                                                      variant=\"filled\"\r\n                                                      InputLabelProps={{ shrink: true }}\r\n                                                      inputRef={register}\r\n                                                // error={!!errors.name}\r\n                                                >\r\n                                                      {props.store.optionsList.schoolList.map(row => (\r\n                                                            <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                                      ))}\r\n                                                </TextField>\r\n                                          }\r\n                                          name=\"school.id\"\r\n                                          control={control}\r\n                                          defaultValue={props.store.school.id}\r\n                                          options={props.store.optionsList.studentLevelList}\r\n                                    />\r\n                              </Box>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                  </form>\r\n            </ >\r\n      );\r\n};\r\n\r\nexport default EndUserDetailHtml;","import React, { useState } from 'react';\n\nimport EndUserService from '../../api/endUser/EndUserService';\nimport EndUserDetailHtml from './EndUserDetailHtml';\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\n\nexport default function EndUserDetailComponent(props) {\n\n  const [store, setStore] = useState({\n    'INIT_STATUS': ((props.match.params.id === -1) ? INIT_STATUS.INIT : INIT_STATUS.LOAD),\n    'school': { 'id': '' },\n    'entityId': props.match.params.id,\n    'id': '',\n    'userName': '',\n    'password': '',\n    'firstName': '',\n    'lastName': '',\n    'optionsList': { schoolList: [] }\n  });\n\n  const doInitFormData = data => {\n    if (!data.school) {\n      data.school = {\n        id: ''\n      }\n    }\n    if (!data.optionsList) {\n      data.optionsList = { schoolList: [] }\n    }\n  }\n\n  const doRetrieve = () => {\n    console.log(`[EndUserDetailComponent.doRetrieve] id==>${props.match.params.id}`)\n    EndUserService.get(props.match.params.id)\n      .then(response => {\n        console.log(`[EndUserDetailComponent.doRetrieve] response==>`, response)\n        let thestate = {\n          ...store\n        }\n        if (props.match.params.id !== -1) {\n          thestate = response.data.entity;\n        }\n        thestate.INIT_STATUS = INIT_STATUS.RESET;\n        thestate.optionsList = response.data.listService\n\n        doInitFormData(thestate);\n\n        setStore(thestate)\n      });\n  }\n\n  const onSubmitForm = (data) => {\n    console.log(`[EndUserDetailComponent.onSubmitForm] data==>`, data)\n    EndUserService.save(data).then(response => {\n      console.log(`[EndUserDetailComponent.save] response==>`, response)\n      props.history.push(PAGE_URL.USER_LIST);\n    });\n  }\n\n  const doCancel = () => {\n    props.history.push(PAGE_URL.USER_LIST);\n  }\n\n  return (\n    <EndUserDetailHtml store={store}\n      doRetrieve={doRetrieve}\n      onSubmitForm={onSubmitForm}\n      doCancel={doCancel} />\n\n  );\n}\n\n\n","import axios from \"axios\";\nimport Utils, { API_URL_BASE, ADDRESS_TYPE } from '../Utils'\n\nexport const ENTITY = \"address\";\nclass AddressService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=name,address1,city`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n getListByUser = (refId, searchValue) => {\n  const theurl = `${API_URL_BASE}address/by/${refId}?searchValue=${searchValue}`\n  return axios.get(theurl);\n }\n getByRefId = (refId, typeId) => {\n  const theurl = `${API_URL_BASE}address/byRefId/${typeId}/${refId}`//ADDRESS_TYPE\n  return axios.get(theurl);\n }\n}\n\nexport default new AddressService();\n\n\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\n\nimport { INIT_STATUS } from '../../api/Utils'\nimport AddressService from '../../api/address/AddressService';\nimport CustomTableGrid from '../common/CustomTableGrid';\n\nexport default function AddressListComponent(props) {\n  const [store, setStore] = useState({\n    INIT_STATUS: INIT_STATUS.INIT,\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  });\n\n  const doRetrieve = () => {\n    //props.userId\n    console.log('props.userHistory=' + props.userHistory);\n    if (hasUser()) {\n      AddressService.getListByUser(props.userId, store.searchValue)\n        .then(response => {\n          console.log(`[AddressListComponent AddressService.getListByUser] response=>`, response)\n          let data = {\n            ...store,\n            INIT_STATUS: INIT_STATUS.RESET,\n            searchValue: response.data.searchValue,\n            list: response.data.list\n          }\n          // setStore(data);\n        })\n    } else {\n      AddressService.getList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\n        .then(response => {\n          console.log(`[AddressListComponent AddressService.getList] response=>`, response)\n          let data = {\n            ...store,\n            INIT_STATUS: INIT_STATUS.RESET,\n            list: response.data.pagingList.content,\n            searchValue: response.data.searchValue,\n            paging: {\n              rowsPerPage: response.data.pagingList.size,\n              totalElements: response.data.pagingList.totalElements,\n              currentPage: response.data.pagingList.pageable.pageNumber\n            }\n          }\n          // setStore(data);\n        })\n    }\n  }\n  const doEdit = (id) => {\n    if (this.hasUser()) {\n      props.userHistory.push(`/address-detail/${id}/${props.userId}`);\n    } else {\n      props.history.push(`/address-detail/${id}`);\n    }\n\n  }\n  const doDelete = (id) => {\n    console.log(`[AddressComponent.delete] id=${id}`)\n    AddressService.delete(id)\n      .then(response => {\n        console.log(`[AddressComponent.delete] response==>`, response)\n        doRetrieve();\n      })\n  }\n\n  const doHandleChangePage = (e, newPage) => {\n    //store.paging.currentPage = newPage;\n    let paging = store.paging;\n    paging.currentPage = newPage\n    let data = {\n      ...store,\n    }\n    data.paging.currentPage = newPage\n    setStore(data);\n\n    doRetrieve();\n  }\n  const doHandleChangeRowsPerPage = (e) => {\n    let paging = {\n      ...store.paging\n    }\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n\n    let data = {\n      ...store,\n      paging: paging\n    }\n    setStore(data);\n\n    doRetrieve();\n  }\n\n  const doSearch = (searchValue) => {\n    store.searchValue = searchValue\n    doRetrieve();\n  }\n\n  const hasUser = () => {\n    return props.userId;\n  }\n\n  const cols = [\n    {\n      field: 'name',\n      headerName: 'Name',\n    },\n    {\n      headerName: 'Address',\n      render: function (row) {\n        return <>\n          <div>{row.address1}</div>\n          <div>{row.address2}</div>\n          <div>{row.city}, {row.state} {row.country} {row.zipCode}</div>\n        </>\n      }\n    }, {\n      field: 'billTo',\n      headerName: 'Bill?',\n    }, {\n      field: 'shipTo',\n      headerName: 'Ship?',\n    },\n\n  ];\n  return (\n    <>\n      <Box pb={3}><Typography variant={hasUser() ? 'h5' : 'h4'}>Address</Typography></Box>\n      <CustomTableGrid\n        store={store}\n        cols={cols}\n        showPaging={!hasUser()}\n        // list={store.list}\n        // searchValue={store.searchValue}\n        // paging={store.paging}\n        onChangePage={doHandleChangePage}\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\n        doRetrieve={doRetrieve}\n        doEdit={doEdit}\n        doDelete={doDelete}\n        doSearch={doSearch}\n      />\n      {/* <div className=\"text-right\">\n          <FormControl variant=\"filled\">\n            <Input name=\"searchValue\" value={store.searchValue} placeholder=\"Search\"\n              onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n              endAdornment={<SearchIcon onClick={() => this.retrieve()} />}\n            />\n          </FormControl>\n        </div>\n        {this.renderPagination()}\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\n          <Table>\n            <TableHead>\n              <StyledTableHeadRow>\n                <StyledTableHeadCell>Name</StyledTableHeadCell>\n                <StyledTableHeadCell>Address</StyledTableHeadCell>\n                <StyledTableHeadCell>Is Billing?</StyledTableHeadCell>\n                <StyledTableHeadCell>Is Shipping?</StyledTableHeadCell>\n                <StyledTableHeadCell>Action</StyledTableHeadCell>\n              </StyledTableHeadRow>\n            </TableHead>\n\n            <TableBody>\n              {\n                store.list.map(row => (\n                  <StyledTableRow key={row.id}>\n                    <TableCell>{row.name}</TableCell>\n                    <TableCell>\n                      <div>{row.address1}</div>\n                      <div>{row.address2}</div>\n                      <div>{row.city}, {row.state} {row.country} {row.zipCode}</div>\n                    </TableCell>\n                    <TableCell>{row.billTo}</TableCell>\n                    <TableCell>{row.shipTo}</TableCell>\n                    <TableCell align=\"right\">\n                      <Button variant=\"contained\" color=\"primary\" onClick={() => this.edit(row.id)}>Edit</Button>&nbsp;\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.delete(row.id)}>Delete</Button>\n                    </TableCell>\n                  </StyledTableRow>\n                ))\n              }\n            </TableBody>\n          </Table>\n        </TableContainer> */}\n      {/* {this.renderPagination()} */}\n    </ >\n  );\n}\n\n\n","\r\nimport React from 'react';\r\nimport { FormControl, TextField } from '@material-ui/core';\r\n\r\nexport default function TextFormControl(props) {\r\n\r\n  return (\r\n    <FormControl fullWidth margin=\"normal\" >\r\n      { props.type === 'hidden' &&\r\n        <input\r\n          type={props.type}\r\n          name={props.name} value={props.value} />\r\n      }\r\n      {props.type !== 'hidden' &&\r\n        <>\r\n          {/* <InputLabel htmlFor={props.name + 'id'}>{props.label}</InputLabel>\r\n          <TextField labelId={props.name + 'id'} placeholder={\"Enter \" + props.label} */}\r\n          <TextField label={props.label} placeholder={\"Enter \" + props.label}\r\n            type={props.type ? props.type : \"text\"}\r\n            name={props.name} value={props.value}\r\n            onChange={(e) => props.changeState(e)} />\r\n        </>\r\n      }\r\n    </FormControl >\r\n  );\r\n}\r\n\r\n\r\n// export default class TextFormControl extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n//   render = () => {\r\n//     if (this.props.type == 'hidden') {\r\n//       return (\r\n//         <TextField\r\n//           type={this.props.type}\r\n//           name={this.props.name} value={this.props.value} />\r\n//       );\r\n//     }\r\n//     return (\r\n//       <FormControl fullWidth margin=\"normal\" >\r\n//         <TextField label={this.props.label} placeholder={\"Enter \" + this.props.label}\r\n//           type={this.props.type ? this.props.type : \"text\"}\r\n//           name={this.props.name} value={this.props.value}\r\n//           onChange={(e) => this.props.changeState(e)} />\r\n//       </FormControl>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { AUTH_URL_BASE, AUTH_USER, AUTH_USER_OBJ, JWT_TOKEN, USER_TEMP } from '../api/Utils.js'\r\n\r\n\r\nlet myInterceptor\r\n\r\nclass AuthenticationService extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.initialize();\r\n        console.log('[AuthenticationService.constructor] done')\r\n    }\r\n\r\n    initialize = () => {\r\n        if (this.isUserLoggedIn()) {\r\n            let jwtTokenHeader = this.getJwtTokenHeader()\r\n            this.setupAxiosInterceptors(jwtTokenHeader);\r\n        }\r\n    }\r\n    setLoggedUserObject = () => {\r\n        if (this.isUserLoggedIn()) {\r\n            this.setState({\r\n                userObj: this.getLoggedUserObj()\r\n            });\r\n            console.log('[AuthenticationService.setLoggedUserObject] this.state.userObj=>', this.state.userObj);\r\n        }\r\n    }\r\n\r\n    // executeBasicAuthenticationService = (username, password) => {\r\n    //     const theurl = `${URL_BASE}/basicauth`\r\n    //     return axios.get(theurl, Utils.getBasicAuthHeader(username, password));\r\n    // }\r\n\r\n    getBasicAuthHeader = (username, password) => {\r\n        return {\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            }\r\n        };\r\n    }\r\n\r\n    executeJwtAuthenticationService = (username, password) => {\r\n        const theurl = `${AUTH_URL_BASE}`\r\n        //console.log(`[AuthenticationService.executeJwtAuthenticationService] theurl=${theurl}`);\r\n        return axios.post(theurl, { username, password });\r\n    }\r\n\r\n    // registerBasicAuthSucessfulLogin = (username, password) => {\r\n    //     //console.log('[AuthenticationService.registerSucessfulLogin] init');\r\n    //     sessionStorage.setItem(AUTH_USER, username);\r\n\r\n    //     let basicAuthHeader = 'Basic ' + window.btoa(username + ':' + password);\r\n    //     this.setupAxiosInterceptors(basicAuthHeader);\r\n    // }\r\n\r\n    registerJwtSucessfulLogin = (userObj, jwtToken) => {\r\n        console.log('[AuthenticationService.registerJwtSucessfulLogin] init');\r\n        sessionStorage.setItem(AUTH_USER_OBJ, JSON.stringify(userObj));\r\n        sessionStorage.setItem(AUTH_USER, userObj.userName);\r\n        sessionStorage.setItem(JWT_TOKEN, jwtToken);\r\n\r\n        this.setState({\r\n            userObj: userObj\r\n        });\r\n\r\n        let jwtTokenHeader = this.getJwtTokenHeader()\r\n        this.setupAxiosInterceptors(jwtTokenHeader);\r\n    }\r\n\r\n    getJwtTokenHeader = () => {\r\n        let jwtToken = this.getJwtToken();\r\n        let jwtTokenHeader = `Bearer ${jwtToken}`;\r\n        return jwtTokenHeader;\r\n    }\r\n\r\n    getLoginUserName = () => {\r\n        let user = sessionStorage.getItem(AUTH_USER);\r\n        return user;\r\n    }\r\n\r\n    getLoggedUserObj = () => {\r\n        let user = JSON.parse(sessionStorage.getItem(AUTH_USER_OBJ));\r\n        console.log('[AuthenticationService.getLoggedUserObj] 1 user=>', user);\r\n        if (!user) {\r\n            user = USER_TEMP;\r\n        }\r\n        console.log('[AuthenticationService.getLoggedUserObj] 2 user=>', user);\r\n        return user;\r\n        // return {}\r\n    }\r\n\r\n    getJwtToken = () => {\r\n        let jwtToken = sessionStorage.getItem(JWT_TOKEN);\r\n        return jwtToken;\r\n    }\r\n\r\n    logout = () => {\r\n        axios.interceptors.request.eject(myInterceptor);\r\n        sessionStorage.removeItem(AUTH_USER);\r\n        sessionStorage.removeItem(AUTH_USER_OBJ);\r\n        sessionStorage.removeItem(JWT_TOKEN);\r\n    }\r\n\r\n    isUserLoggedIn = () => {\r\n        let user = this.getLoginUserName();\r\n        return (user != null);\r\n    }\r\n\r\n    setupAxiosInterceptors = (authHeader) => {\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] init..');\r\n        console.log(`[AuthenticationService.setupAxiosInterceptors] authHeader: ${authHeader}`);\r\n        myInterceptor = axios.interceptors.request.use(\r\n            async config => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = authHeader;\r\n                }\r\n                return config;\r\n            }\r\n        );\r\n        console.log('[AuthenticationService.setupAxiosInterceptors] done!');\r\n    }\r\n}\r\nexport default new AuthenticationService();","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { MenuItem, Button, FormControl } from '@material-ui/core';\n\nimport AddressService from '../../api/address/AddressService';\nimport TextFormControl from '../common/TextFormControl';\nimport { ADDRESS_TYPE, PAGE_URL } from '../../api/Utils'\n\nexport default class AddressDetailComponent extends React.Component {\n  state = {\n    \"id\": '',\n    \"userId\": '',\n    \"user\": { id: \"\", firstName: \"\", lastName: \"\" },\n    \"name\": \"\",\n    \"address1\": \"\",\n    \"address2\": \"\",\n    \"city\": \"\",\n    \"state\": \"\",\n    \"country\": \"\",\n    \"zipCode\": \"\",\n    \"billTo\": \"\",\n    \"shipTo\": \"\"\n  };\n\n  getBlankDetails = () => {\n\n    return {\n      \"id\": '',\n      \"userId\": '',\n      \"user\": { id: \"\", firstName: \"\", lastName: \"\" },\n      \"name\": \"\",\n      \"address1\": \"\",\n      \"address2\": \"\",\n      \"city\": \"\",\n      \"state\": \"\",\n      \"country\": \"\",\n      \"zipCode\": \"\",\n      \"billTo\": \"\",\n      \"shipTo\": \"\"\n    }\n  }\n\n  componentDidMount = () => {\n    this.retrieve();\n  }\n\n  retrieve = () => {\n    console.log(`[AddressDetailComponent.retrieve] id=${this.props.match.params.id}, userId=${this.props.match.params.refId}`);\n    let thestate = this.getBlankDetails();\n    if (this.props.match.params.id !== -1 && this.props.match.params.refId) {\n      AddressService.getByRefId(this.props.match.params.refId, this.props.match.params.typeId)\n        .then(response => {\n          console.log(`[AddressDetailComponent.retrieve AddressService.getByRefId] response=>`, response);\n          thestate = response.data.entity;\n          console.log(`[AddressDetailComponent.retrieve AddressService.getByRefId] thestate.user=>`, thestate.user);\n          thestate.userId = thestate.user.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    } else {\n      AddressService.get(this.props.match.params.id)\n        .then(response => {\n          console.log(`[AddressDetailComponent.retrieve AddressService.get] response=>`, response);\n          thestate = response.data.entity;\n          thestate.userId = thestate.user.id\n          thestate.listService = response.data.listService\n          this.setState(thestate)\n        })\n    }\n  }\n\n  save = () => {\n    AddressService.save({\n      refId: this.state.userId,\n      name: this.state.name,\n      address1: this.state.address1,\n      address2: this.state.address2,\n      city: this.state.city,\n      state: this.state.state,\n      country: this.state.country,\n      zipCode: this.state.zipCode,\n      billTo: this.state.billTo,\n      shipTo: this.state.shipTo,\n      id: this.state.id\n    }).then(() => {\n      let routeUrl = PAGE_URL.ADDRESS_LIST;\n      let userId = this.props.match.params.refId\n      if (userId) {\n        routeUrl = `${PAGE_URL.USER_DETAIL_URL}${userId}`\n      }\n      this.props.history.push(routeUrl);\n    })\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  changeSelectState = (e) => {\n    this.setState({\n      [e.target.name]: { \"id\": e.target.value }\n    })\n  }\n\n  renderOptions = (optionsList) => {\n    return (optionsList.map(row => (\n      <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\n    )))\n  }\n\n  cancel = () => {\n    console.log(`[AddressDetailComponent.cancel] userId=${this.props.match.params.refId}`);\n    if (this.props.match.params.refId && this.props.match.params.typeId === ADDRESS_TYPE.USER) {\n      this.props.history.push(`${PAGE_URL.USER_DETAIL_URL}/${this.props.match.params.refId}`)\n    } else {\n      this.props.history.push(PAGE_URL.ADDRESS_LIST)\n    }\n  }\n\n\n  render = () => {\n    return (\n      <>\n        <Typography variant=\"h4\">Address Detail</Typography>\n        <form>\n          <FormControl fullWidth margin=\"normal\">\n            <span>End User: {this.state.user.lastName}, {this.state.user.firstName}</span>\n            <input name=\"userId\" type=\"hidden\" value={this.state.userId} />\n          </FormControl>\n\n          <TextFormControl label=\"Name\"\n            name=\"name\" value={this.state.name}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 1\"\n            name=\"address1\" value={this.state.address1}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Address 2\"\n            name=\"address2\" value={this.state.address2}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"City\"\n            name=\"city\" value={this.state.city}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"State\"\n            name=\"state\" value={this.state.state}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Country\"\n            name=\"country\" value={this.state.country}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Zip Code\"\n            name=\"zipCode\" value={this.state.zipCode}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Billing?\"\n            name=\"billTo\" value={this.state.billTo}\n            changeState={this.changeState} />\n\n          <TextFormControl label=\"Is Shipping?\"\n            name=\"shipTo\" value={this.state.shipTo}\n            changeState={this.changeState} />\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.save()}>Save</Button>&nbsp;\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.cancel()}>Cancel</Button>\n        </form>\n\n      </ >\n    );\n  }\n}\n\n\n","import React from 'react';\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nclass AuthenticatedRoute extends React.Component {\r\n    render = () => {\r\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        //console.log(`[AuthenticatedRoute]: isUserLoggedIn ${isUserLoggedIn}`);\r\n        if (isUserLoggedIn) {\r\n            return <Route {...this.props} />;\r\n        } else {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n    }\r\n}\r\nexport default AuthenticatedRoute;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useStyles } from '../forms/common/CSS'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst SignInHtml = props => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  function onSubmitForm(formData) {\r\n    props.onSignon(formData.userName, formData.password);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.login_paper}>\r\n        <Avatar className={classes.login_avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n        <form className={classes.login_form} onSubmit={handleSubmit(onSubmitForm)}>\r\n\r\n          <TextField type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userName\"\r\n            label=\"User Name\"\r\n            name=\"userName\"\r\n            autoComplete=\"userName\"\r\n            autoFocus\r\n            inputRef={register}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignInHtml;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport SignInHtml from './SignInHtml.js';\r\nimport { useAuth } from './AuthenticationProvider';\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\n// import { useForm } from 'react-hook-form';\r\n\r\nexport default function SignInComponent() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [userObj, setUserObj] = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  const onSignon = (userName, password) => {\r\n    setMessage('');\r\n    console.log(`onSubmitPage userName=${userName}, password=${password}`);\r\n\r\n    AuthenticationService.executeJwtAuthenticationService(userName, password)\r\n      //executeBasicAuthenticationService(this.state.username, this.state.password)\r\n      .then(response => {\r\n        console.log('[SignInComponent.onSubmitPage]: response', response);\r\n        AuthenticationService.registerJwtSucessfulLogin(response.data.userDetails, response.data.token)\r\n\r\n        setUserObj(response.data.userDetails);\r\n        console.log('[SignInComponent.onSubmitPage]: userObj', userObj);\r\n\r\n        //registerBasicAuthSucessfulLogin(this.state.username, this.state.password);\r\n        setMessage('Login Successful!');\r\n        history.push(`/`);\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(`[SignInComponent.onSubmitPage]: error=>`, error);\r\n        setMessage('Login in failed. Your User Name and Password do not match.');\r\n      });\r\n  }\r\n  return (\r\n    <SignInHtml message={message} onSignon={onSignon} />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport { useAuth } from './AuthenticationProvider';\r\nimport { USER_TEMP } from '../api/Utils'\r\n\r\n\r\nexport default function LogoutComponent() {\r\n    const [userObj, setUserObj] = useAuth();\r\n\r\n    useEffect(() => {\r\n        console.log('[SignInComponent.onSubmitPage]: userObj', userObj);\r\n        AuthenticationService.logout();\r\n        setUserObj(USER_TEMP);\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <h1>You are logged out</h1>\r\n            <div className=\"container\">\r\n                Thank you. Come again!\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\n\nexport const ENTITY = \"codeGroups\";\n\nclass CodeGroupsService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=code,priority,description`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new CodeGroupsService();\n\n\n","import React, { useState } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\n\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\nimport CodeGroupsService from '../../api/codeGroups/CodeGroupsService';\nimport CustomTableGrid from '../common/CustomTableGrid'\n\nexport default function CodeGroupsListComponent(props) {\n  const [store, setStore] = useState({\n    INIT_STATUS: INIT_STATUS.INIT,\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  });\n\n  const doRetrieve = () => {\n    CodeGroupsService.getList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\n      .then(response => {\n        console.log(response)\n        let data = {\n          INIT_STATUS: INIT_STATUS.LOAD,\n          list: response.data.pagingList.content,\n          searchValue: store.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            currentPage: response.data.pagingList.pageable.pageNumber,\n            totalElements: response.data.pagingList.totalElements,\n            totalPage: response.data.pagingList.totalPage\n          }\n        }\n        setStore(data);\n      })\n  }\n  const doEdit = (id) => {\n    console.log(`[CodeGroupsComponent.edit] id=${id}`)\n    props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}/${id}`);\n  }\n\n  const doDelete = (id) => {\n    console.log(`[CodeGroupsComponent.delete] id=${id}`)\n    CodeGroupsService.delete(id)\n      .then(response => {\n        console.log(`[CodeGroupsComponent.delete] response==>`, response)\n        doRetrieve();\n      })\n  }\n\n  const doHandleChangePage = (e, newPage) => {\n    console.log(`[CodeGroupsComponent.delete] doHandleChangePage=${newPage}`)\n    // let paging = this.state.paging;\n    // paging.currentPage = newPage\n    // this.setState({\n    //   paging: paging\n    // });\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.currentPage = newPage\n    setStore(data);\n\n    doRetrieve();\n  }\n\n  const doHandleChangeRowsPerPage = (e) => {\n    console.log(`[CodeGroupsComponent.doHandleChangeRowsPerPage] rowsPerPage=${e.target.value}`)\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n\n    setStore(data)\n    doRetrieve();\n  }\n\n  const doSearch = (searchValue) => {\n    store.searchValue = searchValue\n    doRetrieve();\n  }\n\n  const cols = [\n    {\n      field: 'code',\n      headerName: 'Code',\n    },\n    {\n      field: 'value',\n      headerName: 'Value',\n    },\n    {\n      field: 'description',\n      headerName: 'Description',\n    },\n    {\n      field: 'priority',\n      headerName: 'Priority',\n    }\n  ];\n\n  return (\n    <>\n      <Box pb={3}><Typography variant=\"h4\">Code Groups List</Typography></Box>\n\n      <CustomTableGrid\n        store={store}\n        cols={cols}\n        // list={this.state.list}\n        // searchValue={this.state.searchValue}\n        // paging={this.state.paging}\n        onChangePage={doHandleChangePage}\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\n        doRetrieve={doRetrieve}\n        doEdit={doEdit}\n        doDelete={doDelete}\n        doSearch={doSearch}\n      />\n    </ >\n  );\n}\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\n\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nimport CodeGroupsService from '../../api/codeGroups/CodeGroupsService';\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\nimport { useAuth } from '../../security/AuthenticationProvider';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default function CodeGroupsDetailComponent(props) {\n\n  const history = useHistory();\n  const { register, handleSubmit, reset } = useForm();\n  const [userObj] = useAuth();\n  const [message, setMessage] = useState('Loading. Please wait...');\n\n  const [store, setStore] = useState({\n    INIT_STATUS: ((props.match.params.id === -1) ? INIT_STATUS.INIT : INIT_STATUS.LOAD),\n    'school': { 'id': userObj.schoolId },\n    'id': props.match.params.id,\n    'priority': 1,\n    'code': '',\n    'value': '',\n    'description': '',\n    'json': '',\n    'listService': {}\n  });\n\n\n  useEffect(() => {\n    console.log(`[CodeGroupsDetailComponent.useEffect] store==>`, store)\n    console.log(`[CodeGroupsDetailComponent.useEffect] userObj==>`, userObj)\n    //retrieve();\n    if (store.INIT_STATUS === INIT_STATUS.LOAD) {\n      retrieve();\n    } if (store.INIT_STATUS === INIT_STATUS.RESET) {\n      reset(store)\n    }\n  }, [store]);\n\n\n  const getBlankDetails = () => {\n    return {\n      'message': '',\n      'school': { 'id': userObj.schoolId },\n      'id': '',\n      'priority': 1,\n      'code': '',\n      'value': '',\n      'description': '',\n      'json': '',\n      'optionsList': {}\n    }\n  }\n  const retrieve = () => {\n    console.log(`[CodeGroupsDetailComponent.retrieve] id==>${props.match.params.id}`)\n    setMessage('Loading. Please wait...');\n    CodeGroupsService.get(props.match.params.id)\n      .then(response => {\n        console.log(`[CodeGroupsDetailComponent.retrieve] response==>`, response)\n        let thestate = getBlankDetails();\n        if (props.match.params.id !== -1) {\n          thestate = response.data.entity;\n        }\n        thestate.school = { 'id': userObj.schoolId };\n        thestate.INIT_STATUS = INIT_STATUS.RESET;\n\n        //thestate.optionsList = response.data.optionsList\n        setStore(thestate)\n        setMessage('');\n        console.log(`[CodeGroupsDetailComponent.retrieve] store==>`, store)\n      }).catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'CodeGroupsDetailComponent.retrieve', 'CodeGroupsService.get'));\n  }\n  const setError = (error, errorCode, formMethod, serviceName) => {\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName);\n    setMessage(errMsg);\n  }\n\n  function save(data) {\n    console.log(`[CodeGroupsDetailComponent.save] data==>`, data)\n    CodeGroupsService.save(data).then(response => {\n      console.log(`[CodeGroupsDetailComponent.save] response==>`, response)\n      history.push(PAGE_URL.CODE_GROUPS_LIST);\n    }).catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'));\n  }\n\n  return (\n    <>\n      {console.log(`[CodeGroupsDetailComponent.render] store==>`, store)}\n      <Typography variant=\"h4\">Code Groups Detail</Typography>\n      {message && <Alert severity=\"info\">{message}</Alert>}\n\n\n      <form onSubmit={handleSubmit(save)}>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={9}>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\n          </Grid>\n        </Grid>\n\n        <TextField type=\"hidden\"\n          name=\"id\"\n          inputRef={register}\n          defaultValue={store.id}\n        />\n        <TextField type=\"hidden\"\n          name=\"school.id\"\n          inputRef={register}\n          defaultValue={store.school.id}\n        />\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"code\"\n              name=\"code\"\n              label=\"Code\"\n              fullWidth\n              autoComplete=\"code-groups-code\"\n              autoFocus\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.code}\n            />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <TextField\n              required\n              id=\"value\"\n              name=\"value\"\n              label=\"Value\"\n              fullWidth\n              autoComplete=\"code-groups-value\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.code}\n            />\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <TextField\n              required\n              type=\"number\"\n              id=\"priority\"\n              name=\"priority\"\n              label=\"priority\"\n              fullWidth\n              autoComplete=\"code-groups-priority\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.priority}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <TextField\n              required\n              id=\"description\"\n              name=\"description\"\n              label=\"Description\"\n              fullWidth\n              autoComplete=\"code-groups-description\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.description}\n            />\n            <Grid item xs={12} sm={12}>&nbsp;</Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                multiline\n                rows={4}\n                id=\"json\"\n                name=\"json\"\n                label=\"JSON\"\n                fullWidth\n                autoComplete=\"code-groups-json\"\n                variant=\"filled\"\n                InputLabelProps={{ shrink: true }}\n                inputRef={register}\n                defaultValue={store.json}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={9}>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\n          </Grid>\n        </Grid>\n\n      </form>\n\n    </ >\n  )\n}\n\n\n","import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Chart extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\r\n\r\n  render() {\r\n    return (\r\n      <LineChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\nexport default class StackedBarChart extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/90v76x08/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 20, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n    <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\n\r\nconst getIntroOfPage = (label) => {\r\n if (label === 'Page A') {\r\n  return \"Page A is about men's clothing\";\r\n } if (label === 'Page B') {\r\n  return \"Page B is about women's dress\";\r\n } if (label === 'Page C') {\r\n  return \"Page C is about women's bag\";\r\n } if (label === 'Page D') {\r\n  return 'Page D is about household goods';\r\n } if (label === 'Page E') {\r\n  return 'Page E is about food';\r\n } if (label === 'Page F') {\r\n  return 'Page F is about baby food';\r\n }\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n if (active) {\r\n  return (\r\n   <div className=\"custom-tooltip\">\r\n    <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n    <p className=\"intro\">{getIntroOfPage(label)}</p>\r\n    <p className=\"desc\">Anything you want can be displayed here.</p>\r\n   </div>\r\n  );\r\n }\r\n\r\n return null;\r\n};\r\n\r\nexport default class CustomContentOfTooltip extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/vxq4ep63/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 5, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip content={<CustomTooltip />} />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" barSize={20} fill=\"#8884d8\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React from 'react';\r\nimport faker from 'faker'\r\nimport { URL_BASE } from '../../api/Utils'\r\nimport { useStyles } from '../common/CSS'\r\n\r\nimport AuthenticationService from '../../security/AuthenticationService'\r\nimport { Avatar, Box, Button, Divider, Grid, Paper, Typography } from '@material-ui/core';\r\nimport Chart from './Chart';\r\nimport StackedBarChart from './StackedBarChart';\r\nimport CustomContentOfTooltip from './CustomContentOfTooltip';\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n  console.log(`process.env.NODE_ENV= ${process.env.NODE_ENV}`)\r\n  console.log(`URL_BASE= ${URL_BASE}`)\r\n\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n  return (\r\n    <>{\r\n      !isUserLoggedIn &&\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.fashion(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.people(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.food(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n      </Grid>\r\n    }\r\n\r\n      {\r\n        isUserLoggedIn &&\r\n        <>\r\n          <Box component={Paper} elevation={3} variant=\"elevation\" px={3} py={3} m=\"auto\">\r\n            <Typography variant=\"h4\">Chart samples click <a href=\"https://recharts.org/en-US/examples\">here</a></Typography>\r\n            <Grid container spacing={5}>\r\n              <Grid item xs={12} sm={4}>\r\n                <Chart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <StackedBarChart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <CustomContentOfTooltip />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </>\r\n      }\r\n    </ >\r\n  )\r\n}","import React from 'react';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../../security/AuthenticationService';\r\nimport { PAGE_URL } from '../../api/Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function NestedMenuComponent() {\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [store, setStore] = React.useState({});\r\n\r\n  const handleClick = (sourceName) => {\r\n    console.log(`[NestedMenuComponent.handleClick] sourceName=${sourceName}, store=>`, store)\r\n\r\n    let isopen = store[sourceName] ? false : true;\r\n    setStore({\r\n      ...store,\r\n      [sourceName]: isopen\r\n    })\r\n    //setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    // subheader={\r\n    //  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n    //   Menu\r\n    //  </ListSubheader>\r\n    // }\r\n    >\r\n      {\r\n        isUserLoggedIn && <>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AccountBalanceWalletIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Billing\" onClick={() => history.push(PAGE_URL.BILLING)} />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => handleClick(\"students\")}>\r\n            <ListItemIcon>\r\n              <LocalLibraryIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Student\" />\r\n            {store.students ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.students} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" onClick={() => history.push(PAGE_URL.STUDENT_DETAIL_URL + '/-1')} />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" onClick={() => history.push(PAGE_URL.STUDENT_LIST)} />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <SchoolIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"School\" onClick={() => handleClick(\"school\")} />\r\n            {store.school ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.school} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" onClick={() => history.push(PAGE_URL.SCHOOL_DETAIL_URL + '/-1')} />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" onClick={() => history.push(PAGE_URL.SCHOOL_LIST)} />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" onClick={() => handleClick(\"users\")} />\r\n            {store.users ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.users} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" onClick={() => history.push(PAGE_URL.USER_DETAIL_URL + '/-1')} />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" onClick={() => history.push(PAGE_URL.USER_LIST)} />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n          {/* <ListItem button>\r\n            <ListItemIcon>\r\n              <DraftsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Address\" onClick={() => history.push(PAGE_URL.ADDRESS_LIST)} />\r\n          </ListItem> */}\r\n\r\n          <ListItem button onClick={() => handleClick(\"codeGroups\")}>\r\n            <ListItemIcon>\r\n              <CodeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Code Groups\" />\r\n            {store.codeGroups ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.codeGroups} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1')} />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n\r\n        </>\r\n      }\r\n\r\n      {isUserLoggedIn && <ListItem button>\r\n        <ListItemIcon>\r\n          <ExitToAppIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Logout\" onClick={() => history.push(PAGE_URL.LOGOUT)} />\r\n      </ListItem>}\r\n\r\n      {!isUserLoggedIn && <ListItem button>\r\n        <ListItemIcon>\r\n          <VpnKeyIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Login\" onClick={() => history.push(PAGE_URL.LOGIN)} />\r\n      </ListItem>}\r\n\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../../security/AuthenticationService';\r\nimport { PAGE_URL } from '../../api/Utils'\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function MenuListItems() {\r\n  const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [store, setStore] = React.useState({});\r\n\r\n  const doHandleClick = (sourceName) => {\r\n    console.log(`[NestedMenuComponent.doHandleClick] sourceName=${sourceName}, store=>`, store)\r\n\r\n    let isopen = store[sourceName] ? false : true;\r\n    setStore({\r\n      ...store,\r\n      [sourceName]: isopen\r\n    })\r\n    //setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    // subheader={\r\n    //  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n    //   Menu\r\n    //  </ListSubheader>\r\n    // }\r\n    >\r\n      {\r\n        isUserLoggedIn && <>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AccountBalanceWalletIcon onClick={() => history.push(PAGE_URL.BILLING)} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Billing\" onClick={() => history.push(PAGE_URL.BILLING)} />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => doHandleClick(\"accountPayablesSettings\")}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Account Payables Settings\" />\r\n            {store.accountPayablesSettings ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.accountPayablesSettings} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1')} >\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n          <ListItem button onClick={() => doHandleClick(\"gradeLevelPayables\")}>\r\n            <ListItemIcon>\r\n              <AssignmentIndIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Grade Level Payables\" />\r\n            {store.gradeLevelPayables ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.gradeLevelPayables} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL + '/-1')} >\r\n\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem button onClick={() => doHandleClick(\"students\")}>\r\n            <ListItemIcon>\r\n              <LocalLibraryIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Student\" />\r\n            {store.students ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.students} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.STUDENT_DETAIL_URL + '/-1')} >\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.STUDENT_LIST)}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem button onClick={() => doHandleClick(\"school\")} >\r\n            <ListItemIcon>\r\n              <SchoolIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"School\" />\r\n            {store.school ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.school} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.SCHOOL_DETAIL_URL + '/-1')} >\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem button onClick={() => doHandleClick(\"users\")} >\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n            {store.users ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.users} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.USER_DETAIL_URL + '/-1')} >\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.USER_LIST)} >\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n\r\n          <ListItem button onClick={() => doHandleClick(\"codeGroups\")}>\r\n            <ListItemIcon>\r\n              <CodeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Code Groups\" />\r\n            {store.codeGroups ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.codeGroups} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1')}>\r\n                <ListItemIcon>\r\n                  <AddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"New\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)}>\r\n                <ListItemIcon>\r\n                  <FormatListNumberedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n\r\n        </>\r\n      }\r\n\r\n      {isUserLoggedIn &&\r\n        <>\r\n          <Divider />\r\n          <ListItem button onClick={() => history.push(PAGE_URL.LOGOUT)} >\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </>\r\n      }\r\n\r\n      {!isUserLoggedIn &&\r\n        <ListItem button onClick={() => history.push(PAGE_URL.LOGIN)} >\r\n          <ListItemIcon>\r\n            <VpnKeyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Login\" />\r\n        </ListItem>}\r\n\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuListItems from './MenuListItems';\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStylesDrawer = makeStyles((theme) => ({\r\n drawer: {\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: 'nowrap',\r\n },\r\n drawerOpen: {\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n },\r\n drawerClose: {\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: theme.spacing(7) + 1,\r\n  [theme.breakpoints.up('sm')]: {\r\n   width: theme.spacing(9) + 1,\r\n  },\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n const classes = useStylesDrawer();\r\n const theme = useTheme();\r\n\r\n return (\r\n  <Drawer\r\n   variant=\"permanent\"\r\n   className={clsx(classes.drawer, {\r\n    [classes.drawerOpen]: props.drawerOpen,\r\n    [classes.drawerClose]: !props.drawerOpen,\r\n   })}\r\n   classes={{\r\n    paper: clsx({\r\n     [classes.drawerOpen]: props.drawerOpen,\r\n     [classes.drawerClose]: !props.drawerOpen,\r\n    }),\r\n   }}\r\n  >\r\n   <div className={classes.toolbar}>\r\n    <IconButton onClick={props.doHandleDrawerClose}>\r\n     {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n    </IconButton>\r\n   </div>\r\n   <Divider />\r\n   <MenuListItems />\r\n  </Drawer>\r\n );\r\n}\r\n","\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { AppBar, IconButton, Toolbar, Typography, Avatar, Box, FormControlLabel, Switch, makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nimport { PAGE_URL, URL_BASE } from '../../api/Utils'\r\nimport { useAuth } from '../../security/AuthenticationProvider';\r\nimport MenuComponent from './MenuComponent';\r\nimport MiniDrawer from './MiniDrawer';\r\n\r\nexport default function AppBarComponent(props) {\r\n const [userObj, setUserObj] = useAuth();\r\n\r\n const drawerWidth = 240;\r\n const useStylesAppBar = makeStyles((theme) => ({\r\n  root: {\r\n   display: 'flex',\r\n  },\r\n  appBar: {\r\n   zIndex: theme.zIndex.drawer + 1,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n   }),\r\n  },\r\n  appBarShift: {\r\n   marginLeft: drawerWidth,\r\n   width: `calc(100% - ${drawerWidth}px)`,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n   }),\r\n  },\r\n  menuButton: {\r\n   marginRight: 36,\r\n  },\r\n  hide: {\r\n   display: 'none',\r\n  },\r\n  title: {\r\n   flexGrow: 1,\r\n   display: 'none',\r\n   [theme.breakpoints.up('sm')]: {\r\n    display: 'block',\r\n    paddingLeft: theme.spacing(1)\r\n   },\r\n   //backgroundColor: fade(theme.palette.common.white, 0.25),\r\n  },\r\n }));\r\n // const [userObj, setUserObj] = useState({\r\n //  userName: '',\r\n //  userFullName: 'Guest',\r\n //  schoolName: '',\r\n //  schoolLogo: ''\r\n // });\r\n\r\n const classes = useStylesAppBar();\r\n // const userName = AuthenticationService.getLoginUserName();\r\n // const isLogin = AuthenticationService.isUserLoggedIn();\r\n\r\n // printme(userObj);\r\n\r\n const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n const doHandleDrawerOpen = () => {\r\n  setDrawerOpen(true);\r\n  console.log(`[AppBarComponent.doHandleDrawerOpen] drawerOpen=>${drawerOpen}`)\r\n }\r\n const doHandleDrawerClose = () => {\r\n  setDrawerOpen(false);\r\n  console.log(`[AppBarComponent.doHandleDrawerClose] doHandleDrawerClose=>${drawerOpen}`)\r\n }\r\n return (\r\n  < div className={classes.root} >\r\n   {console.log('[AppBarComponent.return] userObj=>', userObj)}\r\n   <AppBar\r\n    position=\"fixed\"\r\n    className={clsx(classes.appBar, {\r\n     [classes.appBarShift]: drawerOpen,\r\n    })}>\r\n    <Toolbar>\r\n     <IconButton\r\n      color=\"inherit\"\r\n      aria-label=\"open drawer\"\r\n      onClick={doHandleDrawerOpen}\r\n      edge=\"start\"\r\n      className={clsx(classes.menuButton, {\r\n       [classes.hide]: drawerOpen,\r\n      })}\r\n     >\r\n      <MenuIcon />\r\n     </IconButton>\r\n\r\n     {userObj && userObj.schoolLogo && <Avatar src={(URL_BASE + PAGE_URL.LOGO_URL + userObj.schoolLogo)} />}\r\n     {(!userObj || !userObj.schoolLogo) && <SchoolIcon />}\r\n\r\n     <Typography className={classes.title} variant=\"h6\" noWrap>\r\n      <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n       {userObj && <b>{userObj.schoolName}</b>}\r\n      </Link>\r\n     </Typography>\r\n     {userObj && <div>Welcome <b>{userObj.userFullName}</b></div>}\r\n\r\n     <Box pl={5}>\r\n      <FormControlLabel control={<Switch checked={props.darkMode} onChange={props.toggleDarkMode} />} />\r\n     </Box>\r\n    </Toolbar>\r\n   </AppBar>\r\n   <MiniDrawer drawerOpen={drawerOpen} doHandleDrawerClose={doHandleDrawerClose} />\r\n  </div >\r\n );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Divider, FormControlLabel, FormLabel, Grid, MenuItem, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\n\r\nconst StudentDetailHtml = props => {\r\n  // const { register, handleSubmit, errors, reset, setValue } = useForm();\r\n  const { control, register, handleSubmit, reset } = useForm();\r\n  // const [counter, setCounter] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // setCounter(counter + 1);\r\n    // console.log(`[StudentDetailHtml.useEffect] props.store.initStatus=>${props.store.initStatus}, counter=${counter}`);\r\n    if (props.store.initStatus === INIT_STATUS.LOAD) {\r\n      props.onRetrieve(props.store.storeId);\r\n    } if (props.store.initStatus === INIT_STATUS.RESET) {\r\n      reset(props.store)\r\n    }\r\n  }, [props.store])\r\n\r\n  const BUTTONS = () => {\r\n    return (\r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.STUDENT_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.STUDENT_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" gutterBottom>Student Detail</Typography>\r\n      {/* {counter > 0 && <Alert severity=\"error\">Counter={counter}, Init Status: {props.store.initStatus}</Alert>} */}\r\n      {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n        <BUTTONS />\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={props.store.id}\r\n        />\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"school.id\"\r\n          inputRef={register}\r\n          defaultValue={props.store.school.id} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"lrn\"\r\n              name=\"lrn\"\r\n              label=\"LRN\"\r\n              fullWidth\r\n              autoComplete=\"lrn\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lrn}\r\n            />\r\n          </Grid><Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"studentId\"\r\n              name=\"studentId\"\r\n              label=\"Student Id\"\r\n              fullWidth\r\n              autoComplete=\"studentId\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.studentId}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.firstName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              autoComplete=\"family-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lastName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            {/* <InputLabel\r\n              variant=\"filled\" shrink htmlFor=\"level\">Level</InputLabel> */}\r\n            {/* <FormLabel component=\"level\">Level</FormLabel> */}\r\n            <Controller\r\n              as={\r\n                // <Select\r\n                //   // aria-label=\"level\"\r\n                //   InputLabelProps={{ shrink: true }}\r\n                //   label=\"Level\"\r\n                //   fullWidth\r\n                //   variant=\"filled\">\r\n                //   {props.store.optionsList.studentLevelList.map(m => (\r\n                //     <MenuItem key={m.id} value={m.id}>\r\n                //       {m.description}\r\n                //     </MenuItem>\r\n                //   ))}\r\n                // </Select>\r\n                <TextField id=\"level\"\r\n                  required\r\n                  select\r\n                  name=\"level.id\"\r\n                  label=\"Grade Level\"\r\n                  fullWidth\r\n                  autoComplete=\"student level\"\r\n                  variant=\"filled\"\r\n                  inputRef={register}\r\n                  defaultValue={props.store.level.id}\r\n                // error={!!errors.name}\r\n                >\r\n                  {props.store.optionsList.studentLevelList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"level.id\"\r\n              control={control}\r\n              defaultValue={props.store.level}\r\n              options={props.store.optionsList.studentLevelList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthDate\"\r\n              name=\"birthDate\"\r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              fullWidth\r\n              autoComplete=\"birth-date\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.birthDate}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthPlace\"\r\n              name=\"birthPlace\"\r\n              label=\"Birth Place\"\r\n              fullWidth\r\n              autoComplete=\"birth-place\"\r\n              InputLabelProps={{ shrink: true }}\r\n              variant=\"filled\"\r\n              inputRef={register}\r\n              defaultValue={props.store.birthPlace}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            {/* <label >Gender</label> */}\r\n            {/* <FormLabel component=\"legend\">Gender</FormLabel>\r\n            <RadioGroup row\r\n              label=\"Gender\"\r\n              name=\"gender\"\r\n              variant=\"filled\"\r\n              defaultValue={props.store.gender} >\r\n              <FormControlLabel\r\n                value=\"Male\"\r\n                control={<Radio color=\"primary\" variant=\"filled\" />}\r\n                label=\"Male\" variant=\"filled\"\r\n                labelPlacement=\"end\"\r\n                inputRef={register}\r\n              />\r\n              <FormControlLabel\r\n                value=\"Female\"\r\n                control={<Radio />}\r\n                label=\"Female\"\r\n                variant=\"filled\"\r\n                labelPlacement=\"end\"\r\n                inputRef={register}\r\n              />\r\n            </RadioGroup> */}\r\n            <FormLabel component=\"gender\"\r\n              variant=\"filled\">Gender</FormLabel>\r\n            <Controller\r\n              as={\r\n                <RadioGroup row\r\n                  label=\"Gender\"\r\n                  aria-label=\"gender\"\r\n                  variant=\"filled\">\r\n                  <FormControlLabel\r\n                    value=\"Male\"\r\n                    control={<Radio\r\n                      variant=\"filled\" />}\r\n                    label=\"Male\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                    labelPlacement=\"end\"\r\n                    variant=\"filled\"\r\n                  />\r\n                </RadioGroup>\r\n              }\r\n              name=\"gender\"\r\n              fullWidth\r\n              defaultValue={props.store.gender}\r\n              inputRef={register}\r\n              variant=\"filled\"\r\n              control={control}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"contactNo\"\r\n              name=\"contactNo\"\r\n              label=\"Contact No\"\r\n              fullWidth\r\n              autoComplete=\"contactNo\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.contactNo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" >Address:</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n\r\n            <TextField\r\n              id=\"address.address1\"\r\n              name=\"address1\"\r\n              label=\"Address line 1\"\r\n              fullWidth\r\n              autoComplete=\"shipping address1\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address1}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"address.address2\"\r\n              name=\"address2\"\r\n              label=\"Address line 2\"\r\n              fullWidth\r\n              autoComplete=\"shipping address2\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address2}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.city\"\r\n              name=\"city\"\r\n              label=\"City\"\r\n              fullWidth\r\n              autoComplete=\"shipping address city\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.city}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.zip\"\r\n              name=\"zipCode\"\r\n              label=\"Zip / Postal code\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-code\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.zipCode}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField editable={false}\r\n              required\r\n              id=\"address.country\"\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-country\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.country}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}><Typography variant=\"h6\" >Parent/Guardian:</Typography></Grid>\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"fathersName\"\r\n              name=\"fathersName\"\r\n              label=\"Father's Name\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"fathersOccupation\"\r\n              name=\"fathersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"mothersName\"\r\n              name=\"mothersName\"\r\n              label=\"Mother's Name\"\r\n              fullWidth\r\n              autoComplete=\"mothersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"mothersOccupation\"\r\n              name=\"mothersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"mothersOccupation\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersOccupation}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"parentCivilStatus\"\r\n              name=\"parentCivilStatus\"\r\n              label=\"Parent CivilStatus\"\r\n              fullWidth\r\n              autoComplete=\"parentCivilStatus\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.parentCivilStatus}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} />\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"guardianName\"\r\n              name=\"guardianName\"\r\n              label=\"Guardian Name\"\r\n              fullWidth\r\n              autoComplete=\"guardianName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.guardianName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <BUTTONS />\r\n\r\n      </form>\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\nexport default StudentDetailHtml;","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\n\nexport const ENTITY = \"student\";\n\nclass StudentService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=firstName,lastName`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new StudentService();\n\n\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport Utils, { INIT_STATUS, ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport StudentDetailHtml from './StudentDetailHtml.js';\r\nimport StudentService from '../../api/student/StudentService'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../../security/AuthenticationProvider';\r\n\r\nexport default function StudentDetailComponent(props) {\r\n  const history = useHistory();\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [userObj] = useAuth();\r\n\r\n  const [store, setStore] = useState({\r\n    initStatus: ((props.match.params.id === -1) ? INIT_STATUS.INIT : INIT_STATUS.LOAD),\r\n    school: { 'id': userObj.schoolId },\r\n    id: '',\r\n    entityId: props.match.params.id,\r\n    firstName: '',\r\n    lastName: '',\r\n    birthDate: moment().format('YYYY-MM-DD'),\r\n    birthPlace: '',\r\n    gender: '',\r\n    contactNo: '',\r\n    level: { 'id': '' },\r\n    address1: '',\r\n    address2: '',\r\n    city: '',\r\n    zipCode: '',\r\n    country: 'Philippines',\r\n    fathersName: '',\r\n    fathersOccupation: '',\r\n    mothersName: '',\r\n    mothersOccupation: '',\r\n    parentCivilStatus: '',\r\n    guardianName: '',\r\n    optionsList: {\r\n      studentLevelList: []\r\n    }\r\n  });\r\n\r\n  const onInitFormData = (data) => {\r\n    if (data.birthDate) {\r\n      data.birthDate = moment(data.birthDate).format('YYYY-MM-DD');\r\n    }\r\n    if (!data.level) {\r\n      data.level = { 'id': '' };\r\n    }\r\n    if (!data.optionsList) {\r\n      data.optionsList = {\r\n        studentLevelList: []\r\n      }\r\n    }\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log('[StudentDetailComponent.onSubmitForm] data==>', data)\r\n\r\n    setMessage(``);\r\n    StudentService.save(data).then(response => onSubmitFormResponseAction(response))\r\n      .catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'StudentDetailComponent.onSubmitForm', 'StudentService.save'));\r\n  }\r\n\r\n  const onSubmitFormResponseAction = response => {\r\n    console.log(`[StudentDetailComponent.onSubmitFormSaveAction] params.id=${props.match.params.id}, response==>`, response)\r\n    //let data = response.data;\r\n    history.push(PAGE_URL.STUDENT_LIST)\r\n    // onInitFormData(data);\r\n\r\n    // data.initStatus = INIT_STATUS.RESET;\r\n\r\n    // setEntity(data);\r\n    // console.log(`[StudentDetailComponent.onSubmitForm] entity=>`, entity)\r\n\r\n    // setMessage(`Student ${data.id} saved successfully!`);\r\n\r\n  }\r\n\r\n  const onRetrieve = (id) => {\r\n    console.log(`[StudentDetailComponent.onRetrieve] id=${id}, props.id=${props.match.params.id}`, store)\r\n\r\n    setMessage(`Loading. Please wait...`);\r\n    StudentService.get(id ? id : props.match.params.id).then(response => onRetrieveResponseAction(response, id))\r\n      .catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'StudentDetailComponent.onRetrieve', 'StudentService.get'));\r\n  }\r\n\r\n  const onRetrieveResponseAction = (response, id) => {\r\n    console.log(`[StudentDetailComponent.onRetrieveResponseAction] id=${id}, response==>`, response)\r\n    let data = response.data.entity;\r\n    if (!data) {\r\n      data = {};\r\n    }\r\n\r\n    console.log(`[StudentDetailComponent.onRetrieveResponseAction] data==>`, data)\r\n    data.optionsList = response.data.listService\r\n    data.school = { 'id': userObj.schoolId };\r\n    onInitFormData(data);\r\n\r\n    data.initStatus = INIT_STATUS.RESET;\r\n    setStore(data);\r\n    setMessage(``);\r\n  }\r\n\r\n  const setError = (error, errorCode, formMethod, serviceName) => {\r\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName);\r\n    setMessage(errMsg);\r\n  }\r\n  return (\r\n    <StudentDetailHtml\r\n      store={store}\r\n      message={message}\r\n      onSubmitForm={onSubmitForm}\r\n      onRetrieve={onRetrieve}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Table, TableHead, TableCell, TableBody, TablePagination, FormControl, Input, Grid, IconButton, Box, TableContainer, Paper } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport StudentService from '../../api/student/StudentService'\nimport { PAGE_URL, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\n\nexport default class StudentListComponent extends React.Component {\n  state = {\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  }\n  componentDidMount = () => {\n    this.doRetrieve();\n  }\n  doRetrieve = () => {\n    StudentService.getList(this.state.searchValue, this.state.paging.currentPage, this.state.paging.rowsPerPage)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          list: response.data.pagingList.content,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            totalElements: response.data.pagingList.totalElements,\n            currentPage: response.data.pagingList.pageable.pageNumber\n          }\n        })\n      })\n  }\n  edit = (id) => {\n    console.log(`[StudentComponent.edit] id=${id}`)\n    this.props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}/${id}`);\n  }\n  delete = (id) => {\n    console.log(`[StudentComponent.delete] id=${id}`)\n    StudentService.delete(id)\n      .then(response => {\n        console.log(`[StudentComponent.delete] response==>`, response)\n        this.doRetrieve();\n      })\n  }\n\n  handleChangePage = (e, newPage) => {\n    //this.state.paging.currentPage = newPage;\n    let paging = this.state.paging;\n    paging.currentPage = newPage\n    this.setState({\n      paging: paging\n    });\n    this.doRetrieve();\n  }\n\n  changeState = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    let paging = this.state.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n    this.setState({\n      paging: paging\n    });\n    this.doRetrieve();\n  }\n\n  handleKeyDown = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      console.log(`[StudentListComponent.handleKeyDown] searchValue=${this.state.searchValue}`)\n      console.log(`2 [StudentListComponent.handleKeyDown] ${e.target.value}, state=>`, this.state)\n      this.doRetrieve();\n    }\n  }\n\n  render = () => {\n    return (\n      <>\n        <Box pb={3}><Typography variant=\"h4\">Student List</Typography></Box>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <FormControl variant=\"filled\">\n              <Input name=\"searchValue\" value={this.state.searchValue} placeholder=\"Search\"\n                onChange={(e) => this.changeState(e)} onKeyDown={(e) => this.handleKeyDown(e)}\n                endAdornment={<SearchIcon onClick={() => this.doRetrieve()} />}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TablePagination\n              component=\"div\"\n              count={this.state.paging.totalElements}\n              page={this.state.paging.currentPage}\n              rowsPerPage={this.state.paging.rowsPerPage}\n              onChangePage={this.handleChangePage}\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n          </Grid>\n        </Grid>\n\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\n          <Table>\n            <TableHead>\n              <StyledTableHeadRow>\n                <StyledTableHeadCell>Student ID</StyledTableHeadCell>\n                <StyledTableHeadCell>LRN</StyledTableHeadCell>\n                <StyledTableHeadCell>Name</StyledTableHeadCell>\n                <StyledTableHeadCell>Gender</StyledTableHeadCell>\n                <StyledTableHeadCell>Grade Level</StyledTableHeadCell>\n                <StyledTableHeadCell align=\"right\">\n                  Action\n                <IconButton aria-label=\"add\" onClick={() => this.edit(-1)}>\n                    <AddIcon fontSize=\"large\" />\n                  </IconButton>\n                </StyledTableHeadCell>\n              </StyledTableHeadRow>\n            </TableHead>\n            <TableBody>\n              {this.state.list.map(row => (\n                <StyledTableRow key={row.id}>\n                  <TableCell>{row.studentId}</TableCell>\n                  <TableCell>{row.lrn}</TableCell>\n                  <TableCell>{row.firstName} {row.lastName}</TableCell>\n                  <TableCell>{row.gender}</TableCell>\n                  <TableCell>{row.level && row.level.description}</TableCell>\n\n                  <TableCell align=\"right\">\n                    <IconButton aria-label=\"edit\" onClick={() => this.edit(row.id)}>\n                      <EditIcon fontSize=\"large\" />\n                    </IconButton>\n                    <IconButton aria-label=\"delete\" onClick={() => this.delete(row.id)}>\n                      <DeleteIcon fontSize=\"large\" />\n                    </IconButton>\n                  </TableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          component=\"div\"\n          count={this.state.paging.totalElements}\n          page={this.state.paging.currentPage}\n          onChangePage={this.handleChangePage}\n          rowsPerPage={this.state.paging.rowsPerPage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </ >\n    );\n  }\n}\n\n\n\n\n","import axios from \"axios\";\nimport Utils from \"../Utils\";\n\n\nexport const ENTITY = \"school\";\n\nclass SchoolService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=schoolYear,name&direction=DESC`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new SchoolService();\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\n\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport AddIcon from '@material-ui/icons/Add';\nimport Alert from '@material-ui/lab/Alert';\n\n\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\nimport { useAuth } from '../../security/AuthenticationProvider';\nimport SchoolService from '../../api/school/SchoolService';\n\nexport default function SchoolDetailComponent(props) {\n\n  const history = useHistory();\n  const { register, handleSubmit, reset } = useForm();\n  const [userObj] = useAuth();\n  const [message, setMessage] = useState('Loading. Please wait...');\n\n  const [store, setStore] = useState({\n    INIT_STATUS: ((props.match.params.id === -1) ? INIT_STATUS.INIT : INIT_STATUS.LOAD),\n    'message': '',\n    'id': props.match.params.id,\n    'name': '',\n    'schoolYear': '',\n    'logo': '',\n    'address': '',\n    'optionsList': {}\n  });\n\n\n  useEffect(() => {\n    console.log(`[SchoolDetailComponent.useEffect] store==>`, store)\n    console.log(`[SchoolDetailComponent.useEffect] userObj==>`, userObj)\n    //retrieve();\n    if (store.INIT_STATUS === INIT_STATUS.LOAD) {\n      retrieve();\n    } if (store.INIT_STATUS === INIT_STATUS.RESET) {\n      reset(store)\n    }\n  }, [store]);\n\n  const retrieve = () => {\n    console.log(`[SchoolDetailComponent.retrieve] id==>${props.match.params.id}`)\n    setMessage('Loading. Please wait...');\n    SchoolService.get(props.match.params.id)\n      .then(response => {\n        console.log(`[SchoolDetailComponent.retrieve] response==>`, response)\n        let thestate = {\n          ...store\n        }\n        if (props.match.params.id !== -1) {\n          thestate = response.data.entity;\n        }\n        thestate.INIT_STATUS = INIT_STATUS.RESET;\n\n        thestate.optionsList = response.data.optionsList\n        setStore(thestate)\n        setMessage('');\n        console.log(`[SchoolDetailComponent.retrieve] store==>`, store)\n      }).catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'SchoolDetailComponent.retrieve', 'SchoolService.get'));\n  }\n  const setError = (error, errorCode, formMethod, serviceName) => {\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName);\n    setMessage(errMsg);\n  }\n\n  function save(data) {\n    console.log(`[SchoolDetailComponent.save] data==>`, data)\n    SchoolService.save(data).then(response => {\n      console.log(`[SchoolDetailComponent.save] response==>`, response)\n      history.push(PAGE_URL.SCHOOL_LIST);\n    }).catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'SchoolDetailComponent.save', 'SchoolService.save'));\n  }\n\n  return (\n    <>\n      {console.log(`[SchoolDetailComponent.render] store==>`, store)}\n      <Typography variant=\"h4\">School Detail</Typography>\n      {message && <Alert severity=\"info\">{message}</Alert>}\n\n\n      <form onSubmit={handleSubmit(save)}>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={9}>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.SCHOOL_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\n          </Grid>\n        </Grid>\n\n        <TextField type=\"hidden\"\n          name=\"id\"\n          inputRef={register}\n          defaultValue={store.id}\n        />\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"name\"\n              name=\"name\"\n              label=\"Name\"\n              fullWidth\n              autoComplete=\"school-name\"\n              autoFocus\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.name}\n            />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <TextField\n              required\n              id=\"schoolYear\"\n              name=\"schoolYear\"\n              label=\"School Year\"\n              fullWidth\n              autoComplete=\"school-schoolYear\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.schoolYear}\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              id=\"logo\"\n              name=\"logo\"\n              label=\"Logo\"\n              fullWidth\n              autoComplete=\"school-logo\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.logo}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <TextField\n              required\n              id=\"address\"\n              name=\"address\"\n              label=\"Address\"\n              fullWidth\n              autoComplete=\"school-address\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.description}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={9}>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.SCHOOL_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\n          </Grid>\n        </Grid>\n\n      </form>\n\n    </ >\n  )\n}\n\n\n","import React, { useState } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\n\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\nimport SchoolService from '../../api/school/SchoolService';\nimport CustomTableGrid from '../common/CustomTableGrid'\n\nexport default function SchoolListComponent(props) {\n  const [store, setStore] = useState({\n    INIT_STATUS: INIT_STATUS.INIT,\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  });\n\n  const doRetrieve = () => {\n    SchoolService.getList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\n      .then(response => {\n        console.log(response)\n        let data = {\n          INIT_STATUS: INIT_STATUS.LOAD,\n          list: response.data.pagingList.content,\n          searchValue: store.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            currentPage: response.data.pagingList.pageable.pageNumber,\n            totalElements: response.data.pagingList.totalElements,\n            totalPage: response.data.pagingList.totalPage\n          }\n        }\n        setStore(data);\n      })\n  }\n  const doEdit = (id) => {\n    console.log(`[SchoolComponent.edit] id=${id}`)\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}/${id}`);\n  }\n\n  const doDelete = (id) => {\n    console.log(`[SchoolComponent.delete] id=${id}`)\n    SchoolService.delete(id)\n      .then(response => {\n        console.log(`[SchoolComponent.delete] response==>`, response)\n        doRetrieve();\n      })\n  }\n\n  const doHandleChangePage = (e, newPage) => {\n    console.log(`[SchoolComponent.delete] doHandleChangePage=${newPage}`)\n    // let paging = this.state.paging;\n    // paging.currentPage = newPage\n    // this.setState({\n    //   paging: paging\n    // });\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.currentPage = newPage\n    setStore(data);\n\n    doRetrieve();\n  }\n\n  const doHandleChangeRowsPerPage = (e) => {\n    console.log(`[SchoolComponent.doHandleChangeRowsPerPage] rowsPerPage=${e.target.value}`)\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n\n    setStore(data)\n    doRetrieve();\n  }\n\n  const doSearch = (searchValue) => {\n    store.searchValue = searchValue\n    doRetrieve();\n  }\n\n  const cols = [\n    {\n      field: 'name',\n      headerName: 'Name',\n    },\n    {\n      field: 'schoolYear',\n      headerName: 'School Year',\n    },\n    {\n      field: 'logo',\n      headerName: 'Logo',\n    }\n  ];\n\n  return (\n    <>\n      <Box pb={3}><Typography variant=\"h4\">School List</Typography></Box>\n\n      <CustomTableGrid\n        store={store}\n        cols={cols}\n        // list={this.state.list}\n        // searchValue={this.state.searchValue}\n        // paging={this.state.paging}\n        onChangePage={doHandleChangePage}\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\n        doRetrieve={doRetrieve}\n        doEdit={doEdit}\n        doDelete={doDelete}\n        doSearch={doSearch}\n      />\n    </ >\n  );\n}\n\n\n\n","import axios from \"axios\";\nimport Utils, { API_URL_BASE } from \"../Utils\";\n\n\nclass BillingService {\n\n getListBy = (by, searchValue, page, pageSize) => {\n  const theurl = `${API_URL_BASE}billing/search/${by}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n getStudentPayables = (id) => {\n  const theurl = `${API_URL_BASE}billing/payables/${id}`\n  return axios.get(theurl);\n }\n save = (data, id) => {\n  const theurl = `${Utils.urlSavePattern('billing')}/${id}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new BillingService();\n\n\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Box, Divider, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, Typography } from '@material-ui/core';\r\n\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\n\r\nimport { PAGE_URL, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\nimport PaginationComponent from '../common/PaginationComponent';\r\n\r\nconst SearchResultsHtmlComponent = (props) => {\r\n const { list, paging } = props.store;\r\n const history = useHistory();\r\n\r\n const doPayables = (id) => {\r\n  history.push(PAGE_URL.BILLING_PAYABLES_URL + '/' + id)\r\n }\r\n\r\n const doEditUser = (id) => {\r\n  history.push(PAGE_URL.STUDENT_DETAIL_URL + '/' + id)\r\n }\r\n\r\n const doDeleteUser = (id) => {\r\n  // history.push(PAGE_URL.STUDENT_DETAIL_URL + '/' + id)\r\n }\r\n const CustomTableHead = () => {\r\n  return (<>\r\n   <TableHead>\r\n    <StyledTableHeadRow>\r\n     <StyledTableHeadCell>Student ID</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Name</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Grade Level</StyledTableHeadCell>\r\n     <StyledTableHeadCell align=\"right\">\r\n      <IconButton aria-label=\"add\" onClick={() => props.doEdit(-1)}>\r\n       <AddIcon fontSize=\"large\" />\r\n      </IconButton>\r\n     </StyledTableHeadCell>\r\n    </StyledTableHeadRow>\r\n   </TableHead>\r\n  </>)\r\n }\r\n const CustomTableBody = () => {\r\n  return (<>\r\n   <TableBody>\r\n    {list.map(({ id, studentId, lastName, firstName, level }) => (\r\n     <StyledTableRow key={id}>\r\n      <TableCell variant=\"head\">{studentId}</TableCell>\r\n      <TableCell>{firstName} {lastName}</TableCell>\r\n      <TableCell>{level.description}</TableCell>\r\n      <TableCell align=\"right\">\r\n       {/* href={PAGE_URL.BILLING_PAYABLES_URL + '/' + row.id} */}\r\n       {/* onClick={() => doPayables(row.id)} */}\r\n       <IconButton aria-label=\"payment\" href={PAGE_URL.BILLING_PAYABLES_URL + '/' + id}>\r\n        <AccountBalanceWalletIcon fontSize=\"large\" />\r\n       </IconButton>\r\n       <IconButton aria-label=\"edit\" onClick={() => doEditUser(id)}>\r\n        <EditIcon fontSize=\"large\" />\r\n       </IconButton>\r\n       {/* <IconButton aria-label=\"delete\" onClick={() => doDeleteUser(row.id)}>\r\n          <DeleteIcon fontSize=\"large\" />\r\n         </IconButton> */}\r\n      </TableCell>\r\n     </StyledTableRow>\r\n    ))}\r\n   </TableBody>\r\n  </>)\r\n }\r\n\r\n return (\r\n  <>\r\n   <Box py={3}><Divider /></Box>\r\n   <Box ><Typography variant=\"h5\">Search Results</Typography></Box>\r\n\r\n   <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   />\r\n\r\n   <TableContainer component={Paper}>\r\n    <Table>\r\n     <CustomTableHead />\r\n     <CustomTableBody />\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   />\r\n  </>\r\n )\r\n}\r\n\r\nexport default SearchResultsHtmlComponent;","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Box, Paper, Grid, TextField, Table, TableContainer, TableHead, TableCell, Divider, Typography, TableBody, Button, InputAdornment } from \"@material-ui/core\"\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nconst { StyledTableRow, StyledTableHeadRow, StyledTableHeadCell, INIT_STATUS } = require(\"../../api/Utils\")\r\n\r\nconst PayablesHtmlComponent = (props) => {\r\n  const { control, register, handleSubmit, error, reset } = useForm();\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const [payables, setPayables] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(`[PayablesHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n    if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES_RESET) {\r\n      resetPayables();\r\n      props.store.INIT_STATUS = INIT_STATUS.DONE;\r\n\r\n      reset(props.store);\r\n    }\r\n  }, [props.store])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  const resetPayables = () => {\r\n    console.log(`[PayablesHtmlComponent.resetPayables] payables=>`, payables);\r\n    setTotal(0);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let data = {\r\n      ...payables\r\n    }\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        data[`payables[${i}].payment`] = formatter.format(0);\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setPayables(data);\r\n  }\r\n\r\n  const onPaymentBlur = (e) => {\r\n    const el = e.target\r\n    let value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    el.value = formatter.format(value);\r\n\r\n    console.log(`[PayablesHtmlComponent.onPaymentChange] value=${value}, payables=>`, payables)\r\n    value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    let numValue = Number(value);\r\n    let data = {\r\n      ...payables,\r\n    };\r\n\r\n    data[el.name] = numValue;\r\n    setPayables(data);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let total = 0;\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        total = total + payment;\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setTotal(formatter.format(total));\r\n    console.log(`[onPaymentBlur.onPaymentChange] total=${total}, payables=>`, payables)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box py={3}><Divider /></Box>\r\n      <Box pb={3}><Typography variant=\"h5\">Student Information</Typography></Box>\r\n      <Paper elevation={3} variant=\"elevation\" >\r\n        <Box py={3} px={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>Student Id</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.studentId}</Grid>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.firstName + ' ' + props.store.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n      <Box py={3}><Divider /></Box>\r\n      <Box ><Typography variant=\"h5\">Payables</Typography></Box>\r\n      <form onSubmit={handleSubmit(props.doShowSaveBillingDialog)}>\r\n        <TextField\r\n          type=\"hidden\"\r\n          name=\"id\"\r\n          value={props.store.entity.id}\r\n          inputRef={register}\r\n        />\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Paid</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.studentPayables.payables.map((row, i) => (\r\n                  < StyledTableRow >\r\n                    <TableCell>{row.name}</TableCell>\r\n\r\n                    {row.code === 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">({row.payment})</TableCell>\r\n                      </>\r\n                    }\r\n\r\n                    {row.code !== 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\">P{row.amount.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.paid.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.balance.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        }\r\n                        )}</ TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].student.id`}\r\n                            value={props.store.entity.id}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].balance`}\r\n                            value={row.balance}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].order`}\r\n                            value={i}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].code`}\r\n                            value={row.code}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].amount`}\r\n                            value={row.amount}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].name`}\r\n                            value={row.name}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].paid`}\r\n                            value={row.paid}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField id={row.code}\r\n                            type=\"currency\"\r\n                            name={`payables[${i}].payment`}\r\n                            onBlur={e => onPaymentBlur(e)}\r\n                            fullWidth\r\n                            inputRef={register}\r\n                            // disabled={row.balance === 0}\r\n                            defaultValue={row.payment}\r\n                            variant=\"filled\"\r\n                            inputStyle={{ textAlign: 'center' }}\r\n                            InputProps={{\r\n                              startAdornment: <InputAdornment position=\"start\">P</InputAdornment>,\r\n                            }} />\r\n\r\n                        </TableCell>\r\n                      </>}\r\n                  </StyledTableRow>\r\n                ))\r\n              }\r\n              <StyledTableRow>\r\n                <TableCell colSpan=\"4\" align=\"right\">Total</TableCell>\r\n                <TableCell align=\"right\">{total}</TableCell>\r\n              </StyledTableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box pt={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={10}>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save Payment</Button>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Reciept</Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Box>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\nexport default PayablesHtmlComponent;","import React, { useEffect, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport { Box, Button, Grid, MenuItem, Paper, TextField, Typography, Select } from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { INIT_STATUS } from '../../api/Utils'\r\nimport SearchResultsHtmlComponent from './SearchResultsHtmlComponent';\r\nimport PayablesHtmlComponent from './PayablesHtmlComponent';\r\n\r\nexport default function BillingHtmlComponent(props) {\r\n        const { control, register, handleSubmit, error, reset } = useForm();\r\n        const [counter, setCounter] = useState(0);\r\n\r\n        useEffect(() => {\r\n                setCounter(counter + 1);\r\n                console.log(`[BillingHtmlComponent.useEffect] counter=${counter}, INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n                if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES) {\r\n                        props.doPayables();\r\n                } else if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                        reset(props.store)\r\n                }\r\n        }, [props.store])\r\n\r\n        return (\r\n                <>\r\n                        {console.log(`[BillingHtmlComponent.return] counter=${counter}, INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)}\r\n                        <Box ><Typography variant=\"h4\">Payables</Typography></Box>\r\n\r\n                        <form onSubmit={handleSubmit(props.doRetrieve)}>\r\n                                <Paper elevation={3} variant=\"elevation\" >\r\n                                        <Box my={3} mx={3}>\r\n                                                <Grid container spacing={3}>\r\n                                                        <Grid item xs={12} sm={2}><Typography variant=\"h6\">Search By</Typography></Grid>\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Controller\r\n                                                                        as={<Select fullWidth >\r\n                                                                                {props.store.optionsList.billingSearchBy.map(m => (\r\n                                                                                        <MenuItem key={m.id} value={m.value}>\r\n                                                                                                {m.label}\r\n                                                                                        </MenuItem>\r\n                                                                                ))}\r\n                                                                        </Select>}\r\n                                                                        required\r\n                                                                        name=\"searchBy\"\r\n                                                                        control={control}\r\n                                                                        defaultValue={props.store.searchBy}\r\n                                                                        options={props.store.optionsList.billingSearchBy}\r\n                                                                />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                                <TextField id=\"searchValue\"\r\n                                                                        required\r\n                                                                        name=\"searchValue\"\r\n                                                                        // label=\"Search Value\"\r\n                                                                        fullWidth\r\n                                                                        autoComplete=\"billing-search-value\"\r\n                                                                        inputRef={register}\r\n                                                                        defaultValue={props.store.searchValue}\r\n                                                                />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12} sm={1}>\r\n                                                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SearchIcon />}>Search</Button>\r\n                                                        </Grid>\r\n                                                </Grid>\r\n                                        </Box>\r\n                                </Paper>\r\n                        </form>\r\n                        {props.store.searchFlag &&\r\n                                <SearchResultsHtmlComponent\r\n                                        store={props.store}\r\n                                        onChangePage={props.onChangePage}\r\n                                        onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n                                />}\r\n                        {props.store.payablesFlag &&\r\n                                <PayablesHtmlComponent\r\n                                        register={register}\r\n                                        handleSubmit={handleSubmit}\r\n                                        doShowSaveBillingDialog={props.doShowSaveConfirmDialog}\r\n                                        // doSavePayables={props.doSavePayables}\r\n                                        store={props.store} />}\r\n                </>\r\n        )\r\n}","\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nimport { formatter, INIT_STATUS, StyledTableCell, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\nimport { useAuth } from '../../security/AuthenticationProvider';\r\n\r\nconst printStyles = makeStyles(() => ({\r\n  root: {\r\n    color: 'black',\r\n    backgroundColor: 'white',\r\n    // color: theme.palette.common.black,\r\n  },\r\n  table: {\r\n    border: \"1px solid black\",\r\n    // borderWidth: 1,\r\n    // borderColor: 'black',\r\n    // borderStyle: 'solid'\r\n  },\r\n}));\r\nexport default function SavePayablesConfimationHtml(props) {\r\n  const [userObj] = useAuth();\r\n  const { reset } = useForm(props.confirmStore);\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(`[SavePayablesConfimationHtml.useEffect] confirmStore=>`, props.confirmStore)\r\n    if (props.confirmStore.INIT_STATUS === INIT_STATUS.RESET) {\r\n      reset(props.confirmStore);\r\n    }\r\n    props.confirmStore.INIT_STATUS = INIT_STATUS.DONE;\r\n  }, [props.confirmStore])\r\n\r\n  const ConfirmPage = () => {\r\n    return (<>\r\n      {/* <div className={classes.root}>\r\n        <table width=\"100%\" border=\"0\" >\r\n          <tr >\r\n            <th align=\"right\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"right\" width=\"20%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr >\r\n            <th align=\"right\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"right\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n          </tr>\r\n        </table>\r\n      </div> */}\r\n      <Box pb={3}>\r\n        <Paper elevation={3} variant=\"elevation\" >\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}></Grid>\r\n            <Grid item xs={12} sm={4}></Grid>\r\n\r\n            <Grid item xs={12} sm={2}>Student Id</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.studentId}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Box>\r\n      <TableContainer component={Paper} elevation={3} variant=\"elevation\">\r\n        {props.confirmStore.payables.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payables.map((row) => <>\r\n                {row.payment > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.payment)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell>\r\n                  {props.confirmStore.balanceTotal > 0 &&\r\n                    <Typography variant=\"h6\" color=\"textPrimary\">Remaining balance is {formatter.format(props.confirmStore.balanceTotal)}</Typography>\r\n                  }\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={3}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n              {props.confirmStore.invoiceNo && <>\r\n                <StyledTableRow>\r\n                  <StyledTableCell align=\"right\" colSpan={1}><Typography variant=\"h4\" color=\"textPrimary\">Invoice No: </Typography></StyledTableCell>\r\n                  <StyledTableCell align=\"left\" colSpan={2}>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n\r\n                  </StyledTableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n                  </TableCell>\r\n                </ StyledTableRow>\r\n              </>}\r\n            </TableBody>\r\n          </Table>\r\n        }\r\n      </TableContainer>\r\n    </>);\r\n  }\r\n\r\n  const PrintableInvoicePage = () => {\r\n    return (<>\r\n      <div ref={componentRef} className=\"root\">\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userObj.schoolName}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userObj.schoolAddress}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">&nbsp;</th>\r\n          </tr>\r\n\r\n          {/* <th align=\"left\">{(\"0000000000\" + props.confirmStore.invoiceNo).slice(-10)}</th> */}\r\n          {/* <tr>\r\n            <th align=\"left\" width=\"25%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n            <th align=\"left\" width=\"25%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr> */}\r\n\r\n          <tr>\r\n            <th align=\"left\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"left\" width=\"20%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"left\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n            <th align=\"left\"></th>\r\n            <th align=\"left\"></th>\r\n          </tr>\r\n        </table>\r\n        <br />\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th></th>\r\n            <th width=\"25%\" align=\"right\">Total</th>\r\n            <th width=\"25%\" align=\"right\">Balance</th>\r\n            <th width=\"25%\" align=\"right\">Amount Paid</th>\r\n          </tr>\r\n          {props.confirmStore.payablesByInvoiceNo.map((row) => <>\r\n            {row.paid != 0 &&\r\n              <tr>\r\n                <td align=\"left\">{row.name}</td>\r\n                <td align=\"right\">{formatter.format(row.amount)}</td>\r\n                <td align=\"right\">{formatter.format(row.balance)}</td>\r\n                <td align=\"right\">{formatter.format(row.paid)}</td>\r\n              </tr>\r\n            }\r\n          </>\r\n          )}\r\n          <tr>\r\n            <td></td>\r\n            <td colSpan={4} align=\"right\"><h3>Total Amount Paid: {formatter.format(props.confirmStore.paymentTotal)}</h3></td>\r\n          </tr>\r\n        </table>\r\n        {/* <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Student Name:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName} </TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>Invoice Date:</>}</TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>{props.confirmStore.invoiceDate}</>}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Student Id:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.studentId}</TableCell>\r\n              <TableCell>Level:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.level.description}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n        {props.confirmStore.payablesByInvoiceNo.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Invoice</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount Paid</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payablesByInvoiceNo.map((row, i) => <>\r\n                {row.paid > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.paid)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Invoice No: </Typography>\r\n                  <Typography variant=\"h4\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount paid is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        } */}\r\n      </div>\r\n    </>);\r\n  }\r\n  return (<>\r\n    {console.log(`[SavePayablesConfimationHtml.return] confirmStore=>`, props.confirmStore)}\r\n    <Dialog fullWidth=\"true\" maxWidth=\"md\"\r\n      open={props.open}\r\n      onClose={props.closeDialog}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{!props.confirmStore.invoiceNo && <Alert severity=\"info\" align=\"right\">{props.title}</Alert>}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {!props.confirmStore.invoiceNo && <ConfirmPage />}\r\n          {props.confirmStore.invoiceNo && <PrintableInvoicePage />}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button className=\"not-printable\" onClick={handlePrint} variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            <Button className=\"not-printable\" onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />}>Close</Button>\r\n          </>\r\n        }\r\n        {!props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />} > Cancel</Button>\r\n            <Button onClick={props.saveDialog} variant=\"contained\" color=\"primary\" autoFocus startIcon={<SaveIcon />} > Save</Button>\r\n          </>\r\n        }\r\n      </DialogActions>\r\n    </Dialog>\r\n  </>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { formatter, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\n\r\nimport BillingService from '../../api/billing/BillingService'\r\nimport BillingHtmlComponent from './BillingHtmlComponent';\r\nimport SavePayablesConfimationHtml from './SavePayablesConfimationHtml';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport default function BillingComponent(props) {\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    vertical: 'top',\r\n    horizontal: 'center'\r\n  })\r\n  const { message, open, vertical, horizontal } = snackbar\r\n\r\n  const optionsList = {\r\n    billingSearchBy: [{\r\n      id: '1',\r\n      value: 'STUDENT_ID',\r\n      label: 'Student ID'\r\n    }, {\r\n      id: '2',\r\n      value: 'STUDENT_NAME',\r\n      label: 'Student Name'\r\n    }]\r\n  }\r\n  const [confirmStore, setConfirmStore] = useState({\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    entity: {\r\n      studentId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      level: {\r\n        id: '',\r\n        value: '',\r\n        description: ''\r\n      }\r\n    },\r\n    payables: [],\r\n    payablesByInvoiceNo: [],\r\n    open: false\r\n  })\r\n\r\n  const [store, setStore] = useState({\r\n    INIT_STATUS: (props.match.params.id ? INIT_STATUS.PAYABLES : INIT_STATUS.INIT),\r\n    searchFlag: (props.match.params.id ? false : true),\r\n    payablesFlag: (props.match.params.id ? true : false),\r\n    list: [],\r\n    searchValue: '',\r\n    searchBy: 'STUDENT_ID',\r\n    entity: {\r\n      studentId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      level: {\r\n        id: '',\r\n        value: '',\r\n        description: ''\r\n      }\r\n    },\r\n    studentPayables: {\r\n      invoiceNo: '',\r\n      payables: [\r\n        {\r\n          \"id\": null,\r\n          \"invoiceNo\": null,\r\n          \"code\": \"no_data\",\r\n          \"name\": \"NO DATA\",\r\n          \"amount\": 0,\r\n          \"payment\": 0.0,\r\n          \"order\": 0,\r\n          \"student\": null,\r\n          \"createdDate\": null,\r\n          \"lastModifiedDate\": null,\r\n          \"user\": null,\r\n          \"balance\": 0.0,\r\n          \"paid\": 0\r\n        }],\r\n      payablesByInvoiceNo: [\r\n        {\r\n          \"id\": null,\r\n          \"invoiceNo\": null,\r\n          \"code\": \"no_data\",\r\n          \"name\": \"NO DATA\",\r\n          \"amount\": 0,\r\n          \"payment\": 0.0,\r\n          \"order\": 0,\r\n          \"student\": null,\r\n          \"createdDate\": null,\r\n          \"lastModifiedDate\": null,\r\n          \"user\": null,\r\n          \"balance\": 0.0,\r\n          \"paid\": 0\r\n        }]\r\n    },\r\n    optionsList: optionsList,\r\n    paging: {\r\n      rowsPerPage: 25,\r\n      totalElements: 0,\r\n      currentPage: 0\r\n    }\r\n  });\r\n\r\n  const doInitFormData = data => {\r\n    data.optionsList = optionsList;\r\n\r\n    if (!data.currentPage) {\r\n      data.paging = {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0\r\n      };\r\n    }\r\n\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n\r\n    if (!data.studentPayables) {\r\n      data.studentPayables = {\r\n        invoiceNo: '',\r\n        payables: [],\r\n        payablesByInvoiceNo: []\r\n      };\r\n    }\r\n    if (!data.studentPayables.payables) {\r\n      data.studentPayables.payables = [];\r\n    }\r\n    if (!data.studentPayables.payablesByInvoiceNo) {\r\n      data.studentPayables.payablesByInvoiceNo = [];\r\n    }\r\n  }\r\n\r\n  const doRetrieve = (data) => {\r\n    console.log(`[BillingComponent.doRetrieve] data==>`, data)\r\n    BillingService.getListBy(data.searchBy, data.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\r\n      .then(response => {\r\n        console.log(`[BillingComponent.doRetrieve BillingService.getListBy] response==>`, response)\r\n        let formData = {\r\n          ...store,\r\n          INIT_STATUS: INIT_STATUS.RESET,\r\n          searchValue: data.searchValue,\r\n          searchBy: data.searchBy,\r\n          searchFlag: true,\r\n          payablesFlag: false,\r\n          list: response.data.content,\r\n          optionsList: optionsList,\r\n          paging: {\r\n            rowsPerPage: response.data.size,\r\n            totalElements: response.data.totalElements,\r\n            currentPage: response.data.pageable.pageNumber,\r\n          }\r\n        }\r\n        doInitFormData(formData);\r\n        setStore(formData)\r\n      });\r\n  }\r\n\r\n  const onChangeRowsPerPage = (e) => {\r\n    let paging = {\r\n      ...store.paging\r\n    }\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    let data = {\r\n      ...store,\r\n      paging: paging\r\n    }\r\n    setStore(data)\r\n    doRetrieve();\r\n  }\r\n  const onChangePage = (e, newPage) => {\r\n    let paging = {\r\n      ...store.paging\r\n    }\r\n    paging.currentPage = newPage\r\n\r\n    let data = {\r\n      ...store,\r\n      paging: paging\r\n    }\r\n    setStore(data);\r\n\r\n    doRetrieve({\r\n      searchBy: data.searchBy,\r\n      searchValue: data.searchValue,\r\n      currentPage: data.paging.currentPage,\r\n      rowsPerPage: data.paging.rowsPerPage\r\n    });\r\n  }\r\n\r\n  const doPayables = () => {\r\n    BillingService.getStudentPayables(props.match.params.id).then(response => {\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] response==>`, response)\r\n      let payables = response.data.studentPayables.payables;\r\n      payables.map((row, i) => {\r\n        // let value = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n        row.payment = formatter.format(row.payment);\r\n      });\r\n      let formData = {\r\n        ...store,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        entity: response.data.student,\r\n        studentPayables: {\r\n          ...response.data.studentPayables,\r\n          payables: payables\r\n        },\r\n        searchFlag: false,\r\n        payablesFlag: true\r\n      }\r\n      doInitFormData(formData);\r\n      setStore(formData);\r\n    })\r\n  }\r\n  const doShowSaveConfirmDialog = (data) => {\r\n    console.log(`[BillingComponent.doShowSaveConfirmDialog] data==>`, data);\r\n    let paymentTotal = 0;\r\n    let balanceTotal = 0;\r\n    data.payables.map((row, i) => {\r\n      let balance = row.balance ? row.balance.replaceAll(',', '') : 0;\r\n      let payment = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n\r\n      row.balance = Number(balance);\r\n      row.payment = Number(payment);\r\n\r\n      balanceTotal += row.balance;\r\n      paymentTotal += row.payment;\r\n    });\r\n\r\n    // doOpenSnackBar({\r\n    //   message: `Total amount is ${paymentTotal}`\r\n    // })\r\n\r\n    if (Number(paymentTotal) == 0) {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 1 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n\r\n      doOpenSnackBar({\r\n        message: `Total amount is ${paymentTotal}`\r\n      })\r\n    } else {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 2 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n      let confirmStoreTemp = {\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        open: true,\r\n        entity: store.entity,\r\n        payables: data.payables,\r\n        payablesByInvoiceNo: [],\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: balanceTotal - paymentTotal,\r\n        invoiceNo: ''\r\n      }\r\n      doInitConfirmStore(confirmStoreTemp);\r\n\r\n      console.log(`[BillingComponent.doSavePayables] confirmStoreTemp==>`, confirmStoreTemp);\r\n      setConfirmStore(confirmStoreTemp);\r\n    }\r\n\r\n  }\r\n  const doConfirmSavePayables = () => {\r\n    console.log(`[BillingComponent.doConfirmSavePayables] confirmStore==>`, confirmStore);\r\n    doSavePayables(confirmStore);\r\n  }\r\n\r\n  const doSavePayables = (data) => {\r\n    console.log(`[BillingComponent.doSavePayables] data==>`, data);\r\n\r\n    BillingService.save(data.payables, props.match.params.id).then(response => {\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] response==>`, response)\r\n      let formData = {\r\n        ...store,\r\n        INIT_STATUS: INIT_STATUS.PAYABLES_RESET,\r\n        entity: response.data.student,\r\n        studentPayables: response.data.studentPayables,\r\n        searchFlag: false,\r\n        payablesFlag: true,\r\n      }\r\n\r\n      doInitFormData(formData);\r\n      setStore(formData);\r\n\r\n      let payablesByInvoiceNo = [\r\n        ...response.data.studentPayables.payablesByInvoiceNo\r\n      ]\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      let paymentTotal = 0;\r\n      payablesByInvoiceNo.map((row, i) => {\r\n        row.paid = Number(row.paid);\r\n        paymentTotal += row.paid;\r\n      });\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      setConfirmStore({\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        payables: [],\r\n        invoiceDate: moment(response.data.studentPayables.invoiceDate).format('lll'),\r\n        invoiceNo: response.data.studentPayables.invoiceNo,\r\n        payablesByInvoiceNo: payablesByInvoiceNo,\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: 0\r\n      });\r\n      // close dialog\r\n      // setConfirmStore({\r\n      //   ...confirmStore,\r\n      //   payables: [],\r\n      //   open: false,\r\n      //   total: formatter.format(0),\r\n      //   balanceTotal: formatter.format(0)\r\n      // });\r\n\r\n      doOpenSnackBar({\r\n        message: 'Payables saved successfully!'\r\n      })\r\n    })\r\n  }\r\n  const doCloseSaveBillingDialog = () => {\r\n    let confirmStoreTemp = {\r\n      ...confirmStore,\r\n      open: false\r\n    }\r\n    setConfirmStore(confirmStoreTemp);\r\n  }\r\n\r\n  const doInitConfirmStore = data => {\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n    if (!data.payables) {\r\n      data.payables = [];\r\n    }\r\n  }\r\n\r\n  const doOpenSnackBar = (state) => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: true,\r\n      ...state\r\n    })\r\n  }\r\n  const doCloseSnackbar = () => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: false,\r\n      message: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BillingHtmlComponent\r\n        store={store}\r\n        doRetrieve={doRetrieve}\r\n        doPayables={doPayables}\r\n        onChangePage={onChangePage}\r\n        onChangeRowsPerPage={onChangeRowsPerPage}\r\n        doShowSaveConfirmDialog={doShowSaveConfirmDialog}\r\n        doSavePayables={doSavePayables}\r\n      />\r\n      <SavePayablesConfimationHtml\r\n        confirmStore={confirmStore}\r\n        title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        closeDialog={doCloseSaveBillingDialog}\r\n        saveDialog={doConfirmSavePayables} />\r\n      {/* <SaveBillingDialog title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        <SavePayablesConfimationHtml confirmStore={confirmStore}/>\r\n      </SaveBillingDialog> */}\r\n\r\n\r\n      <Snackbar open={open}\r\n        autoHideDuration={6000}\r\n        onClose={doCloseSnackbar}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n      >\r\n        <Alert onClose={doCloseSnackbar} severity=\"success\">\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\nimport Utils, { API_URL_BASE, URL_LIST } from \"./Utils\";\n\n\nexport const ENTITY = \"accountPayablesSettings\";\n\nclass AccountPayablesSettingsService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description, amount`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n getActiveList = (searchValue, page, pageSize) => {\n  const theurl = `${API_URL_BASE + ENTITY + \"/active\"}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`\n  return axios.get(theurl);\n }\n getApplyToAllList = () => {\n  const theurl = `${API_URL_BASE + ENTITY + \"/applyToAllList\"}`\n  return axios.get(theurl);\n }\n}\n\nexport default new AccountPayablesSettingsService();\n\n\n","import React, { useState } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\n\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\nimport AccountPayablesService from '../../api/AccountPayablesSettingsService';\nimport CustomTableGrid from '../common/CustomTableGrid'\n\nexport default function AccountPayablesSettingsListComponent(props) {\n  const [store, setStore] = useState({\n    INIT_STATUS: INIT_STATUS.INIT,\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  });\n\n  const doRetrieve = () => {\n    AccountPayablesService.getList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\n      .then(response => {\n        console.log(`[AccountPayablesSettingsListComponent.doRetrieve] response=>`, response)\n        let data = {\n          INIT_STATUS: INIT_STATUS.LOAD,\n          list: response.data.pagingList.content,\n          searchValue: store.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            currentPage: response.data.pagingList.pageable.pageNumber,\n            totalElements: response.data.pagingList.totalElements,\n            totalPage: response.data.pagingList.totalPage\n          }\n        }\n        setStore(data);\n      })\n  }\n  const doEdit = (id) => {\n    console.log(`[AccountPayablesSettingsListComponent.edit] id=${id}`)\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}/${id}`);\n  }\n\n  const doDelete = (id) => {\n    console.log(`[AccountPayablesSettingsListComponent.delete] id=${id}`)\n    AccountPayablesService.delete(id)\n      .then(response => {\n        console.log(`[AccountPayablesSettingsListComponent.delete] response==>`, response)\n        doRetrieve();\n      })\n  }\n\n  const doHandleChangePage = (e, newPage) => {\n    console.log(`[AccountPayablesSettingsListComponent.delete] doHandleChangePage=${newPage}`)\n    // let paging = this.state.paging;\n    // paging.currentPage = newPage\n    // this.setState({\n    //   paging: paging\n    // });\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.currentPage = newPage\n    setStore(data);\n\n    doRetrieve();\n  }\n\n  const doHandleChangeRowsPerPage = (e) => {\n    console.log(`[AccountPayablesSettingsListComponent.doHandleChangeRowsPerPage] rowsPerPage=${e.target.value}`)\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n\n    setStore(data)\n    doRetrieve();\n  }\n\n  const doSearch = (searchValue) => {\n    store.searchValue = searchValue\n    doRetrieve();\n  }\n\n  const cols = [\n    {\n      field: 'description',\n      headerName: 'Description',\n    },\n    {\n      headerName: 'Payment Period',\n      render: function (row) {\n        return row.paymentPeriod.description;\n      }\n    },\n    {\n      field: 'amount',\n      headerName: 'Amount',\n    },\n    {\n      field: 'priority',\n      headerName: 'Priority',\n    },\n    {\n      field: 'applyToAll',\n      headerName: 'Apply To All',\n      render: function (row) {\n        return row.applyToAll ? 'Y' : 'N';\n      }\n    },\n    {\n      field: 'active',\n      headerName: 'Active',\n      render: function (row) {\n        return row.active ? 'Y' : 'N';\n      }\n    }\n  ];\n\n  return (\n    <>\n      <Box pb={3}><Typography variant=\"h4\">Accounts Payables Settings List</Typography></Box>\n\n      <CustomTableGrid\n        store={store}\n        cols={cols}\n        // list={this.state.list}\n        // searchValue={this.state.searchValue}\n        // paging={this.state.paging}\n        onChangePage={doHandleChangePage}\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\n        doRetrieve={doRetrieve}\n        doEdit={doEdit}\n        doDelete={doDelete}\n        doSearch={doSearch}\n      />\n    </ >\n  );\n}\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, Checkbox, Grid, MenuItem, Select, TextField, Typography } from '@material-ui/core';\n\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport AddIcon from '@material-ui/icons/Add';\nimport Alert from '@material-ui/lab/Alert';\n\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\nimport { useAuth } from '../../security/AuthenticationProvider';\nimport AccountPayablesSettingsService from '../../api/AccountPayablesSettingsService';\n\nlet renderCount = 0;\n\nexport default function AccountPayablesSettingsDetailComponent(props) {\n\n  const history = useHistory();\n  const { control, register, handleSubmit, reset } = useForm({\n    'id': '',\n    'description': 'test',\n    'paymentPeriod': { 'id': '' },\n    'amount': 0,\n    'priority': 1,\n    'applyToAll': true,\n    'active': false\n  });\n  const [userObj] = useAuth();\n  const [message, setMessage] = useState('Loading. Please wait...');\n\n  const [store, setStore] = useState({\n    INIT_STATUS: ((props.match.params.id === -1) ? INIT_STATUS.INIT : INIT_STATUS.LOAD),\n    'id': props.match.params.id,\n    'description': '',\n    'paymentPeriod': { 'id': '' },\n    'amount': 0,\n    'priority': 1,\n    'applyToAll': false,\n    'active': true,\n    'listService': {\n      'paymentPeriodList': []\n    }\n  });\n\n\n  useEffect(() => {\n    console.log(`[AccountPayablesSettingsDetailComponent.useEffect] store==>`, store)\n    // console.log(`[AccountPayablesSettingsDetailComponent.useEffect] userObj==>`, userObj)\n    if (store.INIT_STATUS === INIT_STATUS.LOAD) {\n      retrieve();\n    }\n    if (store.INIT_STATUS === INIT_STATUS.RESET) {\n      console.log(`[AccountPayablesSettingsDetailComponent.useEffect] from status = RESET store==>`, store)\n      reset(store)\n    }\n    store.INIT_STATUS = INIT_STATUS.DONE;\n  }, [store]);\n\n\n  const getBlankDetails = () => {\n    return {\n      'message': '',\n      'id': '',\n      'description': '',\n      'paymentPeriod': { 'id': '' },\n      'amount': 0,\n      'priority': 1,\n      'applyToAll': false,\n      'active': true,\n      'listService': {\n        'paymentPeriodList': []\n      }\n    }\n  }\n  const retrieve = () => {\n    console.log(`[AccountPayablesSettingsDetailComponent.retrieve] 1 id==>${props.match.params.id}`)\n    setMessage('Loading. Please wait...');\n    AccountPayablesSettingsService.get(props.match.params.id)\n      .then(response => {\n        console.log(`[AccountPayablesSettingsDetailComponent.retrieve] 2 response==>`, response)\n        let thestate = getBlankDetails();\n        if (props.match.params.id !== -1) {\n          thestate = {\n            ...store,\n            ...response.data.entity,\n            listService: response.data.listService\n          }\n        }\n        thestate.INIT_STATUS = INIT_STATUS.RESET;\n        initFormData(thestate);\n        console.log(`[AccountPayablesSettingsDetailComponent.retrieve] 3 initFormData thestate==>`, thestate)\n        setMessage('');\n        setStore(thestate)\n        console.log(`[AccountPayablesSettingsDetailComponent.retrieve] 4 store==>`, store)\n      }).catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsDetailComponent.retrieve', 'AccountPayablesSettingsService.get'));\n  }\n  const setError = (error, errorCode, formMethod, serviceName) => {\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName);\n    setMessage(errMsg);\n  }\n\n  const save = (data) => {\n    console.log(`[AccountPayablesSettingsDetailComponent.save] data==>`, data)\n    AccountPayablesSettingsService.save(data).then(response => {\n      console.log(`[AccountPayablesSettingsDetailComponent.save] response==>`, response)\n      history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST);\n    }).catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'AccountPayablesSettingsDetailComponent.save', 'AccountPayablesSettingsService.save'));\n  }\n\n  const initFormData = (data) => {\n    if (!data.listService.paymentPeriodList) {\n      data.listService.paymentPeriodList = [];\n    }\n    if (!data.paymentPeriod) {\n      data.paymentPeriod = {\n        id: ''\n      }\n    }\n  }\n\n  renderCount++;\n  return (\n    <>\n      {console.log(`[AccountPayablesSettingsDetailComponent.render] renderCount=${renderCount} store==>`, store)}\n      <Typography variant=\"h4\">Account Payables Settings Details</Typography>\n      {message && <Alert severity=\"info\">{message}</Alert>}\n\n\n      <form onSubmit={handleSubmit(save)}>\n        <div>{renderCount}</div>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={9}>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\n          </Grid>\n        </Grid>\n\n        <TextField type=\"hidden\"\n          name=\"id\"\n          inputRef={register}\n          defaultValue={store.id}\n        />\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"description\"\n              name=\"description\"\n              label=\"Description\"\n              fullWidth\n              autoComplete=\"account-payables-settings-description\"\n              autoFocus\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.description}\n            />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Controller\n              as={\n                <TextField id=\"paymentPeriod\"\n                  required\n                  select\n                  label=\"Payment Period\"\n                  fullWidth\n                  autoComplete=\"paymentPeriod\"\n                  variant=\"filled\"\n                  InputLabelProps={{ shrink: true }}\n                  inputRef={register}\n                // error={!!errors.name}\n                >\n                  {store.listService.paymentPeriodList.map(row => (\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\n                  ))}\n                </TextField>\n              }\n              name=\"paymentPeriod.id\"\n              control={control}\n              defaultValue={store.paymentPeriod.id}\n              options={store.listService.paymentPeriodList}\n            />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <TextField\n              required\n              type=\"number\"\n              id=\"priority\"\n              name=\"priority\"\n              label=\"Priority\"\n              fullWidth\n              autoComplete=\"account-payables-settings-priority\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.priority}\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              required\n              type=\"number\"\n              id=\"amount\"\n              name=\"amount\"\n              label=\"Amount\"\n              fullWidth\n              autoComplete=\"account-payables-settings-amount\"\n              variant=\"filled\"\n              InputLabelProps={{ shrink: true }}\n              inputRef={register}\n              defaultValue={store.amount}\n            />\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Controller\n              as={\n                <TextField id=\"applyToAll\"\n                  required\n                  select\n                  label=\"Applicable to All\"\n                  fullWidth\n                  autoComplete=\"applyToAll\"\n                  variant=\"filled\"\n                  InputLabelProps={{ shrink: true }}\n                  inputRef={register}\n                // error={!!errors.name}\n                >\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\n                  <MenuItem key={2} value={false}>No</MenuItem>\n                </TextField>\n              }\n              name=\"applyToAll\"\n              control={control}\n              defaultValue={store.applyToAll}\n            />\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Controller\n              as={\n                <TextField id=\"active\"\n                  required\n                  select\n                  label=\"Active\"\n                  fullWidth\n                  autoComplete=\"active\"\n                  variant=\"filled\"\n                  InputLabelProps={{ shrink: true }}\n                  inputRef={register}\n                // error={!!errors.name}\n                >\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\n                  <MenuItem key={2} value={false}>No</MenuItem>\n                </TextField>\n              }\n              name=\"active\"\n              control={control}\n              defaultValue={store.active}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={9}>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\n          </Grid>\n        </Grid>\n\n      </form>\n\n    </ >\n  )\n}\n\n\n","import axios from \"axios\";\nimport Utils from \"./Utils\";\n\n\nexport const ENTITY = \"gradeLevelPayables\";\n\nclass GradeLevelPayablesService {\n\n getList = (searchValue, page, pageSize) => {\n  const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}`\n  return axios.get(theurl);\n }\n get = (id) => {\n  const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\n  return axios.get(theurl);\n }\n delete = (id) => {\n  const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\n  return axios.delete(theurl);\n }\n save = (data) => {\n  const theurl = `${Utils.urlSavePattern(ENTITY)}`\n  return axios.post(theurl, data);\n }\n}\n\nexport default new GradeLevelPayablesService();","import React, { useState } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\n\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\nimport GradeLevelPayablesService from '../../api/GradeLevelPayablesService';\nimport CustomTableGrid from '../common/CustomTableGrid'\n\nexport default function GradeLevelPayablesListComponent(props) {\n  const [store, setStore] = useState({\n    INIT_STATUS: INIT_STATUS.INIT,\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  });\n\n  const doRetrieve = () => {\n    GradeLevelPayablesService.getList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\n      .then(response => {\n        console.log(`[GradeLevelPayablesListComponent.doRetrieve] response=>`, response)\n        let data = {\n          INIT_STATUS: INIT_STATUS.LOAD,\n          list: response.data.pagingList ? response.data.pagingList.content : [],\n          searchValue: store.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList ? response.data.pagingList.size : 0,\n            currentPage: response.data.pagingList ? response.data.pagingList.pageable.pageNumber : 0,\n            totalElements: response.data.pagingList ? response.data.pagingList.totalElements : 0,\n            totalPage: response.data.pagingList ? response.data.pagingList.totalPage : 0\n          }\n        }\n        setStore(data);\n      })\n  }\n  const doEdit = (id) => {\n    console.log(`[GradeLevelPayablesListComponent.edit] id=${id}`)\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}/${id}`);\n  }\n\n  const doDelete = (id) => {\n    console.log(`[GradeLevelPayablesListComponent.delete] id=${id}`)\n    GradeLevelPayablesService.delete(id)\n      .then(response => {\n        console.log(`[GradeLevelPayablesListComponent.delete] response==>`, response)\n        doRetrieve();\n      })\n  }\n\n  const doHandleChangePage = (e, newPage) => {\n    console.log(`[GradeLevelPayablesListComponent.delete] doHandleChangePage=${newPage}`)\n    // let paging = this.state.paging;\n    // paging.currentPage = newPage\n    // this.setState({\n    //   paging: paging\n    // });\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.currentPage = newPage\n    setStore(data);\n\n    doRetrieve();\n  }\n\n  const doHandleChangeRowsPerPage = (e) => {\n    console.log(`[GradeLevelPayablesListComponent.doHandleChangeRowsPerPage] rowsPerPage=${e.target.value}`)\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n\n    setStore(data)\n    doRetrieve();\n  }\n\n  const doSearch = (searchValue) => {\n    store.searchValue = searchValue\n    doRetrieve();\n  }\n\n  const cols = [\n    {\n      headerName: 'Description',\n      render: function (row) {\n        return row.level.description;\n      }\n    }\n  ];\n\n  return (\n    <>\n      <Box pb={3}><Typography variant=\"h4\">Grade Level Payables List</Typography></Box>\n\n      <CustomTableGrid\n        store={store}\n        cols={cols}\n        // list={this.state.list}\n        // searchValue={this.state.searchValue}\n        // paging={this.state.paging}\n        onChangePage={doHandleChangePage}\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\n        doRetrieve={doRetrieve}\n        doEdit={doEdit}\n        doDelete={doDelete}\n        doSearch={doSearch}\n      />\n    </ >\n  );\n}\n\n\n\n","import React, { useState } from 'react';\n\nimport { IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { INIT_STATUS } from '../../api/Utils'\nimport AccountPayablesService from '../../api/AccountPayablesSettingsService';\nimport CustomTableGrid from '../common/CustomTableGrid'\n\nexport default function AccountPayablesSettingsList(props) {\n  const [store, setStore] = useState({\n    INIT_STATUS: INIT_STATUS.DONE,\n    list: [],\n    searchValue: '',\n    paging: {\n      rowsPerPage: 25,\n      totalElements: 0,\n      currentPage: 0\n    }\n  });\n\n  const doRetrieve = () => {\n    AccountPayablesService.getActiveList(store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\n      .then(response => {\n        console.log(`[AccountPayablesSettingsList.doRetrieve AccountPayablesService.getActiveList] response=>`, response)\n        let data = {\n          INIT_STATUS: INIT_STATUS.LOAD,\n          list: response.data.pagingList.content,\n          searchValue: store.searchValue,\n          paging: {\n            rowsPerPage: response.data.pagingList.size,\n            currentPage: response.data.pagingList.pageable.pageNumber,\n            totalElements: response.data.pagingList.totalElements,\n            totalPage: response.data.pagingList.totalPage\n          }\n        }\n        setStore(data);\n      })\n  }\n  const doEdit = (id) => {\n\n  }\n\n  const doDelete = (id) => {\n\n  }\n\n  const doHandleChangePage = (e, newPage) => {\n    console.log(`[AccountPayablesSettingsList.delete] doHandleChangePage=${newPage}`)\n    // let paging = this.state.paging;\n    // paging.currentPage = newPage\n    // this.setState({\n    //   paging: paging\n    // });\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.currentPage = newPage\n    setStore(data);\n\n    doRetrieve();\n  }\n\n  const doHandleChangeRowsPerPage = (e) => {\n    console.log(`[AccountPayablesSettingsList.doHandleChangeRowsPerPage] rowsPerPage=${e.target.value}`)\n    let data = {\n      ...store\n    }\n    let paging = data.paging;\n    paging.rowsPerPage = e.target.value\n    paging.currentPage = 0;\n\n    setStore(data)\n    doRetrieve();\n  }\n\n  const doSearch = (searchValue) => {\n    store.searchValue = searchValue\n    doRetrieve();\n  }\n  const doAddItem = (row) => {\n    console.log(`[AccountPayablesSettingsList.doAddItem] row=>`, row)\n    props.setGradeLevelPayables(row);\n  }\n  const cols = [\n    {\n      field: 'description',\n      headerName: 'Add',\n      render: function (row) {\n        return (<IconButton aria-label=\"add\" onClick={() => doAddItem(row)}>\n          <AddIcon fontSize=\"large\" />\n        </IconButton>);\n      }\n    },\n    {\n      field: 'description',\n      headerName: 'Description',\n    },\n    {\n      headerName: 'Payment Period',\n      render: function (row) {\n        return row.paymentPeriod.description;\n      }\n    },\n    {\n      field: 'amount',\n      headerName: 'Amount',\n    },\n    {\n      field: 'priority',\n      headerName: 'Priority',\n    }\n  ];\n\n  return (\n    <>\n      <CustomTableGrid\n        store={store}\n        cols={cols}\n        showAction={false}\n        // list={this.state.list}\n        // searchValue={this.state.searchValue}\n        // paging={this.state.paging}\n        onChangePage={doHandleChangePage}\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\n        doRetrieve={doRetrieve}\n        doSearch={doSearch}\n      />\n    </ >\n  );\n}\n\n\n\n","import React from 'react';\r\nimport { Grid, MenuItem, TextField } from \"@material-ui/core\";\r\n\r\nexport default function SelectGrid({ sm, name, label, options, ...rest }) {\r\n return (<>\r\n  <Grid item xs={12} sm={sm}>\r\n   <TextField id={name}\r\n    select\r\n    name={name}\r\n    label={label}\r\n    autoComplete={name}\r\n    variant=\"filled\"\r\n    fullWidth\r\n    InputLabelProps={{ shrink: true }}\r\n    InputLabelProps={{ shrink: true }}\r\n    autoComplete={label + \"-\" + name}\r\n    {...rest}\r\n   >\r\n    {options.map(({ id, description }) => (\r\n     <MenuItem key={id} value={id}>{description}</MenuItem>\r\n    ))}\r\n   </TextField>\r\n  </Grid>\r\n </>)\r\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Box, Button, Grid, IconButton, Typography } from '@material-ui/core';\n\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Alert from '@material-ui/lab/Alert';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport Utils, { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\nimport GradeLevelPayablesService from '../../api/GradeLevelPayablesService';\nimport AccountPayablesSettingsList from './AccountPayablesSettingsList'\nimport CustomTableGrid from '../common/CustomTableGrid';\nimport SelectGrid from '../common/SelectGrid';\n\nlet renderCount = 0;\n\nexport default function GradeLevelPayablesDetailsComponent(props) {\n\n  const history = useHistory();\n  const [message, setMessage] = useState('Loading. Please wait...');\n\n  const [store, setStore] = useState({\n    INIT_STATUS: ((props.match.params.id === -1) ? INIT_STATUS.INIT : INIT_STATUS.LOAD),\n    'id': props.match.params.id,\n    level: { id: '' },\n    list: [],\n    listService: {\n      levelList: []\n    }\n  });\n\n  useEffect(() => {\n    console.log(`[GradeLevelPayablesDetailsComponent.useEffect] store==>`, store)\n    // console.log(`[GradeLevelPayablesDetailsComponent.useEffect] userObj==>`, userObj)\n    if (store.INIT_STATUS === INIT_STATUS.LOAD) {\n      retrieve();\n    }\n    store.INIT_STATUS = INIT_STATUS.DONE;\n  }, [store]);\n\n\n  const getBlankDetails = () => {\n    return {\n      'message': '',\n      'id': '',\n      list: []\n    }\n  }\n\n  const changeSelectState = (e) => {\n    const { name, value } = e.target\n    console.log(`[GradeLevelPayablesDetailsComponent.changeSelectState] name=${name}, value=${value}`)\n\n    setStore({\n      ...store,\n      [name]: { id: value }\n    });\n    console.log(`[GradeLevelPayablesDetailsComponent.changeSelectState] store=>`, store)\n  }\n\n  const retrieve = () => {\n    console.log(`[GradeLevelPayablesDetailsComponent.retrieve] id==>${props.match.params.id}`)\n    setMessage('Loading. Please wait...');\n    GradeLevelPayablesService.get(props.match.params.id)\n      .then(response => {\n        console.log(`[GradeLevelPayablesDetailsComponent.retrieve] response==>`, response)\n        let thestate = getBlankDetails();\n        if (props.match.params.id !== -1) {\n          let list = response.data.entity.accountPayablesSettings ? response.data.entity.accountPayablesSettings : []\n          let applyToAllList = response.data.listService.applyToAllList;\n          if (list.length === 0) {\n            list = [...applyToAllList]\n          } else {\n            let temp = [];\n            let tempList = [];\n            list.map(({ id }) => {\n              temp.push(id);\n            });\n            applyToAllList.map((row) => {\n              if (temp.indexOf(row.id) === -1) {\n                let rowTemp = {\n                  ...row,\n                  status: 'NEW'\n                }\n                tempList.push(rowTemp)\n              }\n            });\n\n            let tempList2 = [\n              ...tempList,\n              ...list\n            ];\n            list = tempList2;\n          }\n          let level = response.data.entity.level\n          if (!level) {\n            level = { id: '' }\n          }\n          thestate = {\n            ...store,\n            ...response.data.entity,\n            level: level,\n            list: list,\n            listService: response.data.listService\n          }\n        }\n        thestate.INIT_STATUS = INIT_STATUS.RESET;\n\n        console.log(`[GradeLevelPayablesDetailsComponent.retrieve] initFormData thestate==>`, thestate)\n        setMessage('');\n        setStore(thestate)\n        console.log(`[GradeLevelPayablesDetailsComponent.retrieve] store==>`, store)\n      }).catch(error => setError(error, ERROR_CODE.RETRIEVE_ERROR, 'GradeLevelPayablesDetailsComponent.retrieve', 'GradeLevelPayablesService.get'));\n  }\n  const setError = (error, errorCode, formMethod, serviceName) => {\n    let errMsg = Utils.getFormatedErrorMessage(error, errorCode, formMethod, serviceName);\n    setMessage(errMsg);\n  }\n\n  const save = (e) => {\n    e.preventDefault();\n\n    let data = {\n      id: store.id,\n      level: store.level,\n      accountPayablesSettings: store.list\n    }\n    console.log(`[GradeLevelPayablesDetailsComponent.save] data==>`, data)\n    GradeLevelPayablesService.save(data).then(response => {\n      console.log(`[GradeLevelPayablesDetailsComponent.save] response==>`, response)\n      history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST);\n    }).catch(error => setError(error, ERROR_CODE.SAVE_ERROR, 'GradeLevelPayablesDetailsComponent.save', 'GradeLevelPayablesService.save'));\n  }\n\n  const setGradeLevelPayables = (data) => {\n    console.log(`[GradeLevelPayablesDetailsComponent.setGradeLevelPayables] row==>`, data)\n\n    let list = [...store.list]\n    let exist = false;\n    list.map(row => {\n      if (row.id == data.id) {\n        exist = true\n      }\n    });\n    if (!exist) {\n      let temp = {\n        ...data,\n        status: 'NEW'\n      }\n      list.push(temp);\n      setStore({\n        ...store,\n        list: list\n      });\n    }\n  }\n\n  const doDeleteItem = (id) => {\n    let list = [...store.list];\n    let i = -1;\n    list.map((row, index) => {\n      if (row.id === id) {\n        i = index;\n      }\n    });\n    if (i !== -1) {\n      list.splice(i, 1);\n    }\n    setStore({\n      ...store,\n      list: list\n    });\n  }\n  const GridActionButtons = () => {\n    return (\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={9}>\n        </Grid>\n        <Grid item xs={12} sm={1}>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\n        </Grid>\n        <Grid item xs={12} sm={1}>\n          <Button variant=\"contained\" href={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\n        </Grid>\n        <Grid item xs={12} sm={1}>\n          <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  const cols = [\n    {\n      field: 'description',\n      headerName: 'Description',\n      render: function (row) {\n        return (<>\n          {row.status === 'NEW' && <>{row.description} <WarningIcon fontSize=\"small\" /></>}\n          {row.status !== 'NEW' && row.description}\n        </>);\n      }\n    },\n    {\n      headerName: 'Payment Period',\n      render: function (row) {\n        return row.paymentPeriod.description;\n      }\n    },\n    {\n      field: 'amount',\n      headerName: 'Amount',\n    },\n    {\n      field: 'priority',\n      headerName: 'Priority',\n    },\n    {\n      headerName: 'Action',\n      render: function (row) {\n        return (<IconButton aria-label=\"add\" onClick={() => doDeleteItem(row.id)}>\n          <DeleteIcon fontSize=\"large\" />\n        </IconButton>);\n      }\n    }\n  ];\n  renderCount++;\n  return (\n    <>\n      {console.log(`[GradeLevelPayablesDetailsComponent.render] renderCount=${renderCount} store==>`, store)}\n      <Typography variant=\"h4\">Grade Level Payables</Typography>\n      {message && <Alert severity=\"info\">{message}</Alert>}\n\n\n      <form onSubmit={e => save(e)}>\n        <GridActionButtons />\n\n        <Box pb={3}>\n          <Grid container spacing={3}>\n            <SelectGrid sm={3} name=\"level\" label=\"Level\" value={store.level.id} options={store.listService.levelList}\n              onChange={e => changeSelectState(e)} />\n          </Grid>\n        </Box>\n        <Box py={3}>\n          <Box pb={3}>\n            <CustomTableGrid\n              store={store}\n              cols={cols}\n              showAction={false}\n              showPaging={false}\n              showSearch={false}\n              // list={this.state.list}\n              // searchValue={this.state.searchValue}\n              // paging={this.state.paging}\n              // onChangePage={doHandleChangePage}\n              // onChangeRowsPerPage={doHandleChangeRowsPerPage}\n              doRetrieve={() => { }}\n              doEdit={() => { }}\n              doDelete={() => { }}\n              doSearch={() => { }}\n            />\n          </Box>\n          <GridActionButtons />\n        </Box>\n\n        <AccountPayablesSettingsList setGradeLevelPayables={setGradeLevelPayables} />\n\n      </form>\n\n    </ >\n  )\n}\n\n\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { Container, CssBaseline } from '@material-ui/core';\r\n\r\nimport { PAGE_URL, INIT_STATUS, THEME } from './api/Utils';\r\nimport { useStyles } from './forms/common/CSS'\r\nimport { useAuth } from './security/AuthenticationProvider';\r\n\r\nimport ErrorComponent from './api/ErrorComponent'\r\nimport FooterComponent from './forms/common/FooterComponent'\r\n\r\nimport EndUserListComponent from './forms/endUser/EndUserListComponent';\r\nimport EndUserDetailComponent from './forms/endUser/EndUserDetailComponent';\r\nimport AddressListComponent from './forms/address/AddressListComponent';\r\nimport AddressDetailComponent from './forms/address/AddressDetailComponent';\r\n\r\nimport AuthenticatedRoute from './security/AuthenticatedRoute'\r\nimport SignInComponent from './security/SignInComponent';\r\nimport LogoutComponent from './security/LogoutComponent'\r\nimport CodeGroupsListComponent from './forms/codeGroups/CodeGroupsListComponent';\r\nimport CodeGroupsDetailComponent from './forms/codeGroups/CodeGroupsDetailComponent';\r\nimport Dashboard from './forms/dashboard/Dashboard';\r\nimport AppBarComponent from './forms/common/AppBarComponent';\r\nimport StudentDetailComponent from './forms/student/StudentDetailComponent';\r\nimport StudentListComponent from './forms/student/StudentListComponent';\r\nimport SchoolDetailComponent from './forms/school/SchoolDetailComponent';\r\nimport SchoolListComponent from './forms/school/SchoolListComponent';\r\n\r\nimport AuthenticationService from './security/AuthenticationService';\r\nimport BillingComponent from './forms/billing/BillingComponent';\r\n\r\nimport AccountPayablesSettingsListComponent from './forms/accountPayables/AccountPayablesSettingsListComponent';\r\nimport AccountPayablesSettingsDetailComponent from './forms/accountPayables/AccountPayablesSettingsDetailComponent';\r\n\r\nimport GradeLevelPayablesListComponent from './forms/gradeLevelPayables/GradeLevelPayablesListComponent';\r\nimport GradeLevelPayablesDetailsComponent from './forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent';\r\n\r\nconst useStylesRouting = makeStyles((theme) => ({\r\n root: {\r\n  display: 'flex',\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n container: {\r\n  paddingTop: theme.spacing(4),\r\n  paddingBottom: theme.spacing(4),\r\n },\r\n // content: {\r\n //  backgroundColor:\r\n //   theme.palette.mode === 'light'\r\n //    ? theme.palette.grey[100]\r\n //    : theme.palette.grey[900],\r\n //  flexGrow: 1,\r\n //  height: '100vh',\r\n //  overflow: 'auto',\r\n // },\r\n}));\r\n\r\nconst AppRouting = () => {\r\n\r\n const [store, setStore] = useState({ 'INIT_STATUS': INIT_STATUS.INIT_STATUS });\r\n const [userObj, setUserObj] = useAuth();\r\n\r\n useEffect(() => {\r\n  console.log(`[AuthenticationService.useEffect] userObj=>`, userObj)\r\n  if (store.INIT_STATUS === INIT_STATUS.INIT_STATUS) {\r\n   //initialize theme\r\n   initTheme();\r\n\r\n   //initialize user\r\n   setUserObj(AuthenticationService.getLoggedUserObj());\r\n\r\n   // update INIT_STATUS to DONE to prevent inifinite loop\r\n   setStore({\r\n    INIT_STATUS: INIT_STATUS.DONE\r\n   });\r\n  }\r\n });\r\n const initTheme = () => {\r\n  const themeDarkMode = localStorage.getItem(THEME.THEME_STORAGE_NAME);\r\n  console.log(`[AuthenticationService.useEffect] themeDarkMode=${themeDarkMode}, userObj=>`, userObj)\r\n\r\n  setDarkMode(themeDarkMode === 'Y' ? true : false);\r\n }\r\n\r\n const [darkMode, setDarkMode] = useState(false);\r\n\r\n const theme = createMuiTheme({\r\n  palette: {\r\n   type: darkMode ? THEME.DARK_MODE : THEME.LIGHT_MODE,\r\n  },\r\n });\r\n const toggleDarkMode = () => {\r\n  setDarkMode(!darkMode);\r\n  localStorage.setItem(THEME.THEME_STORAGE_NAME, !darkMode ? 'Y' : 'N');\r\n }\r\n\r\n // render = () => {\r\n const classes = useStylesRouting();\r\n\r\n return (\r\n  <div className=\"\">\r\n   <MuiThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <Router>\r\n     <div className={classes.root}>\r\n\r\n      <AppBarComponent darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\r\n\r\n      <main className={classes.content}>\r\n       <div className={classes.toolbar} />\r\n       {/* <Container component=\"main\" className={classes.container}> */}\r\n       <Switch>\r\n        <Route path={PAGE_URL.ROOT} exact component={Dashboard} />\r\n        <Route path={PAGE_URL.INDEX} exact component={Dashboard} />\r\n\r\n        <Route path={PAGE_URL.LOGOUT} component={LogoutComponent} />\r\n        <Route path={PAGE_URL.LOGIN} component={SignInComponent} />\r\n\r\n        <Route path={PAGE_URL.STUDENT_LIST} component={StudentListComponent} />\r\n        <Route path={PAGE_URL.STUDENT_DETAIL} component={StudentDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING_PAYABLES} exact component={BillingComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING} exact component={BillingComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.USER_LIST} exact component={EndUserListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_DETAIL} exact component={EndUserDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.ADDRESS_LIST} exact component={AddressListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ADDRESS_DETAIL} exact component={AddressDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_ADDRESS_DETAIL} exact component={AddressDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_LIST} exact component={CodeGroupsListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL} exact component={CodeGroupsDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_LIST} exact component={SchoolListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL} exact component={SchoolDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST} exact component={AccountPayablesSettingsListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL} exact component={AccountPayablesSettingsDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_LIST} exact component={GradeLevelPayablesListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL} exact component={GradeLevelPayablesDetailsComponent} />\r\n\r\n        <Route component={ErrorComponent} />\r\n       </Switch>\r\n       {/* </Container> */}\r\n       <FooterComponent />\r\n      </main>\r\n     </div>\r\n    </Router>\r\n   </MuiThemeProvider>\r\n  </div>\r\n );\r\n // }\r\n}\r\n\r\nexport default AppRouting;","import React from 'react';\nimport './App.css';\nimport { AuthenticationProvider } from './security/AuthenticationProvider';\n\nimport AppRouting from './AppRouting'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AuthenticationProvider>\n        <AppRouting />\n      </AuthenticationProvider>\n    </div >\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\nimport { TableCell, TableRow } from '@material-ui/core';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n});\r\n\r\nexport const USER_TEMP = {\r\n    userName: '',\r\n    userFullName: 'Guest',\r\n    schoolName: 'SARA PROJECT',\r\n    schoolAddress: '',\r\n    schoolLogo: '',\r\n    schoolId: ''\r\n}\r\n// export const URL_BASE = 'http://localhost:8081';\r\nexport const URL_BASE_DEV = 'http://localhost:5000';\r\nexport const URL_BASE = process.env.NODE_ENV === 'development' ? URL_BASE_DEV : '';\r\nexport const AUTH_URL_BASE = URL_BASE + '/auth';\r\nexport const API_URL_BASE = URL_BASE + '/api/';\r\n\r\nexport const URL_LIST = \"/l\";\r\nexport const URL_DELETE = \"/d\";\r\nexport const URL_DETAILS = \"/g\";\r\nexport const URL_SAVE = \"/s\";\r\n\r\nexport const AUTH_USER = 'auth/setUser';\r\nexport const AUTH_USER_OBJ = 'auth/setUserObj';\r\nexport const JWT_TOKEN = 'auth/setToken';\r\n\r\nexport const UPDATE_ERROR = 'Error: Unable to update. Please contact system administrator.';\r\nexport const REQUIRED_DESCRIPTION = 'Description is required';\r\nexport const REQUIRED_5_DESCRIPTION = 'Description should be atleast 5 characters';\r\nexport const REQUIRED_TARGET_DATE = 'Target date is required';\r\nexport const THEME = {\r\n    DARK_MODE: 'dark',\r\n    LIGHT_MODE: 'light',\r\n    THEME_STORAGE_NAME: 'THEME_DARK_MODE'\r\n}\r\nexport const PAGE_URL = {\r\n    LOGO_URL: '/r/logo/',\r\n    ROOT: '/',\r\n    INDEX: '/index.html',\r\n    DASHBOARD: '/dashboard',\r\n    LOGOUT: '/logout',\r\n    LOGIN: '/login',\r\n    GRADE_LEVEL_PAYABLES_LIST: '/ui/grade-level-payables-list',\r\n    GRADE_LEVEL_PAYABLES_DETAIL: '/ui/grade-level-payables-detail/:id',\r\n    GRADE_LEVEL_PAYABLES_DETAIL_URL: '/ui/grade-level-payables-detail',\r\n    ACCOUNT_PAYABLES_SETTINGS_LIST: '/ui/account-payables-settings-list',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL: '/ui/account-payables-settings-detail/:id',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL: '/ui/account-payables-settings-detail',\r\n    SCHOOL_LIST: '/ui/school-list',\r\n    SCHOOL_DETAIL: '/ui/school-detail/:id',\r\n    SCHOOL_DETAIL_URL: '/ui/school-detail',\r\n    STUDENT_LIST: '/ui/student-list',\r\n    STUDENT_DETAIL: '/ui/student-detail/:id',\r\n    STUDENT_DETAIL_URL: '/ui/student-detail',\r\n    BILLING: '/ui/billing',\r\n    BILLING_PAYABLES: '/ui/billing/:id',\r\n    BILLING_PAYABLES_URL: '/ui/billing',\r\n    USER_LIST: '/ui/user-list',\r\n    USER_DETAIL: '/ui/user-detail/:id',\r\n    USER_DETAIL_URL: '/ui/user-detail',\r\n    CODE_GROUPS_DETAIL: '/ui/code-groups-detail/:id',\r\n    CODE_GROUPS_DETAIL_URL: '/ui/code-groups-detail',\r\n    CODE_GROUPS_LIST: '/ui/code-groups-list',\r\n    ADDRESS_LIST: '/ui/address-list',\r\n    ADDRESS_DETAIL: '/ui/address-detail/:id',\r\n    USER_ADDRESS_DETAIL: '/ui/address-detail/:id/:refId/:typeId'\r\n}\r\n\r\nexport const INIT_STATUS = {\r\n    INIT: 'INIT',\r\n    DONE: 'DONE',\r\n    LOAD: 'LOAD',\r\n    RESET: 'RESET',\r\n    PAYABLES: 'PAYABLES',\r\n    PAYABLES_RESET: 'PAYABLES_RESET'\r\n}\r\n\r\nexport const ERROR_CODE = {\r\n    RETRIEVE_ERROR: '100001',\r\n    SAVE_ERROR: '100002',\r\n    DELETE_ERROR: '100003',\r\n    LIST_ERROR: '100004'\r\n}\r\n\r\nexport const ADDRESS_TYPE = {\r\n    USER: '1',\r\n    STUDENT: '2',\r\n    PARENT: '3'\r\n}\r\nexport const StyledTableHeadRow = withStyles((theme) => ({\r\n    root: {\r\n        fontWeight: \"bold\",\r\n        // '&:nth-of-type(odd)': {\r\n        //     backgroundColor: theme.palette.background,\r\n        // },\r\n    },\r\n    head: {\r\n        // backgroundColor: theme.palette.common.black,\r\n        // color: theme.palette.common.white,\r\n    },\r\n    // body: {\r\n    //     fontSize: 14,\r\n    //     fontWeight: \"bold\",\r\n    // },\r\n}))(TableRow);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        }\r\n    },\r\n}))(TableRow);\r\n\r\nexport const StyledTableHeadCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 16,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 12,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 14,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 20,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nclass Utils {\r\n    getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.log(`[${formMethod}] ${serviceName} error msg: ${errMsg}`);\r\n\r\n        // const errStr = JSON.stringify(error);\r\n\r\n        return errMsg;\r\n    }\r\n    urlListPattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_LIST;\r\n    }\r\n    urlDeletePattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_DELETE;\r\n    }\r\n    urlDetailsPattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_DETAILS;\r\n    }\r\n    urlSavePattern = (entity) => {\r\n        return API_URL_BASE + entity + URL_SAVE;\r\n    }\r\n    handleErrorResponse = (error, comp) => {\r\n        const errStr = JSON.stringify(error);\r\n        console.error(`Utils[][${comp}][ERROR] ${errStr}`)\r\n        if (error.status) {\r\n            //{\"timestamp\":\"2020-08-24T23:57:30.853+00:00\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"Unauthorized\",\"path\":\"/users/test/todos\"}\r\n            console.error(`[Utils][${comp}][ERROR] ${error.status}: ${error.message}`)\r\n        } else {\r\n            console.error(`[Utils][${comp}][ERROR] ${error.name}: ${error.message}`)\r\n            console.error(`[Utils][${comp}][ERROR] stack ${error.stack}`)\r\n        }\r\n\r\n        //const errorMessage = `${error.name}: ${error.message}`;\r\n        //this.handleState('', errorMessage);\r\n        //console.error(error);\r\n    }\r\n}\r\n\r\nexport default new Utils();"],"sourceRoot":""}