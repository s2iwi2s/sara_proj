{"version":3,"sources":["providers/GlobalVariableProvider.js","providers/AuthenticationProvider.js","api/CommonSlice.js","api/school/SchoolSlice.js","api/codeGroups/CodeGroupsSlice.js","api/endUser/UsersSlice.js","api/student/StudentSlice.js","api/gradeLevelPayables/GradeLevelSlice.js","api/accountPayablesSettings/AccountPayablesSettingsSlice.js","api/billing/BillingSlice.js","api/store.js","api/ErrorComponent.jsx","forms/common/FooterComponent.jsx","forms/common/PaginationComponent.js","forms/common/CustomTableGrid.js","api/endUser/EndUserService.jsx","forms/common/TitleComponent.jsx","api/useMessageAlert.js","forms/endUser/EndUserListComponent.jsx","forms/endUser/EndUserDetailHtml.js","forms/endUser/EndUserDetailComponent.jsx","security/useAuthServices.js","security/AuthenticatedRoute.jsx","forms/common/CSS.js","security/SignInHtml.js","security/SignInComponent.js","security/LogoutComponent.jsx","api/codeGroups/CodeGroupsService.js","forms/codeGroups/CodeGroupsListComponent.js","forms/codeGroups/CodeGroupsDetailComponent.jsx","forms/dashboard/Chart.js","forms/dashboard/StackedBarChart.js","forms/dashboard/CustomContentOfTooltip.js","forms/dashboard/Dashboard.jsx","forms/common/MenuListItems.js","forms/common/MiniDrawer.js","forms/common/AppBarComponent.js","forms/student/StudentDetailHtml.js","api/student/StudentService.jsx","forms/student/StudentDetailComponent.js","forms/student/StudentListComponent.jsx","api/school/SchoolService.js","forms/school/SchoolDetailComponent.jsx","forms/school/SchoolListComponent.js","forms/common/SubTitleComponent.jsx","forms/billing/SearchResultsHtmlComponent.js","forms/common/SelectGrid.js","forms/billing/PayablesHtmlComponent.js","forms/billing/BillingHtmlComponent.js","forms/billing/SavePayablesConfimationHtml.js","forms/billing/BillingComponent.js","api/billing/BillingService.jsx","api/accountPayablesSettings/AccountPayablesSettingsService.jsx","forms/accountPayables/AccountPayablesSettingsListComponent.js","forms/accountPayables/AccountPayablesSettingsDetailComponent.jsx","api/gradeLevelPayables/GradeLevelPayablesService.js","forms/gradeLevelPayables/GradeLevelPayablesListComponent.js","forms/gradeLevelPayables/GradeLevelAccountPayablesSettingsListComponent.js","forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent.jsx","forms/common/GlobalAlertMsgDialog.js","AppRouting.jsx","App.js","serviceWorker.js","index.js","api/Utils.js"],"names":["GlobalVariableContext","createContext","GlobalVariableProvider","props","useState","ui","darkMode","alert","open","severity","msg","globalProps","setGlobalProps","setAlertProps","prop","console","log","setUIProps","value","useMemo","Provider","AuthenticationContext","useAuth","context","useContext","Error","AuthenticationProvider","USER_TEMP","userObj","setUserObj","resetSelectedItemCommon","state","action","blankSelectedItem","selectedItem","setSelectedItemCommon","payload","updateSelectedItemCommon","temp","setPageableCommon","pageable","setPageableEntityCommon","blankPageable","list","setOptionsListCommon","optionsList","INIT_STATUS","INIT","searchValue","paging","rowsPerPage","totalElements","currentPage","totalPage","currentPeriod","periodList","SchoolSlice","createSlice","name","initialState","reducers","resetSelectedItem","setSelectedItem","data","values","initForm","updateSelectedItem","setPageable","setPageableEntity","setOptionsList","actions","selectPageable","school","selectSelectedItem","CodeGroupsSlice","codeGroups","id","schoolList","UsersSlice","setSearchValue","users","defaultPageable","level","studentLevelList","StudentSlice","birthDate","moment","format","students","period","active","levelList","applyToAllList","GradeLevelSlice","accountPayablesSettings","length","map","i","status","tempList","push","row","indexOf","rowTemp","gradeLevels","paymentPeriod","paymentPeriodList","AccountPayablesSettingsSlice","billingSearchBy","label","searchBy","searchFlag","payablesFlag","studentId","firstName","lastName","description","blankConfirmPayables","entity","payables","payablesByInvoiceNo","BillingSlice","confirmPayables","updatePageable","updatePageableCommon","setConfirmPayables","updateConfirmPayables","billing","configureStore","reducer","SchoolReducer","CodeGroupsReducer","UsersReducer","StudentReducer","GradeLevelReducer","AccountPayablesSettingsReducer","BillingReducer","ErrorComponent","render","className","React","Component","Copyright","Box","mx","pt","Divider","Typography","variant","color","align","href","Date","getFullYear","FooterComponent","mt","PaginationComponent","TablePagination","rowsPerPageOptions","component","page","count","onChangePage","onChangeRowsPerPage","CustomTableGrid","showPaging","showSearch","showAction","register","useForm","counter","setCounter","Grid","container","spacing","item","xs","sm","FormControl","Input","defaultValue","store","onKeyDown","e","key","doSearch","target","preventDefault","doHandleKeyDown","placeholder","inputRef","endAdornment","onClick","doRetrieve","children","TableContainer","Paper","elevation","Table","TableHead","cols","params","headerName","field","IconButton","aria-label","doNew","fontSize","TableBody","TableCell","doEdit","doDelete","doHandleChangePage","doHandleChangeRowsPerPage","ENTITY","TitleComponent","pb","useMessageAlert","useGlobalVariable","showMsgAlert","getFormatedErrorMessage","error","errorCode","formMethod","serviceName","JSON","stringify","errMsg","message","response","headers","EndUserListComponent","showErrorMsgAlert","dispatch","useDispatch","currPageable","useSelector","useEffect","retrieve","pageSize","axios","get","Utils","urlListPattern","getList","then","LOAD","pagingList","content","size","pageNumber","catch","ERROR_CODE","LIST_ERROR","newPage","selected","history","PAGE_URL","USER_DETAIL_URL","delete","urlDeletePattern","deleteItem","EndUserDetailHtml","control","handleSubmit","setStatus","useHistory","entityId","RESET","Alert","onSubmit","onSubmitForm","Button","type","startIcon","USER_LIST","TextField","required","fullWidth","autoComplete","autoFocus","InputLabelProps","shrink","userName","password","as","select","MenuItem","options","EndUserDetailComponent","setMessage","match","urlOptionsPattern","listService","RETRIEVE_ERROR","post","urlSavePattern","save","SAVE_ERROR","myInterceptor","useAuthServices","getJwtTokenHeader","jwtToken","getJwtToken","sessionStorage","getItem","JWT_TOKEN","setupAxiosInterceptors","authHeader","interceptors","request","use","a","config","isUserLoggedIn","authorization","getSessionStorageLoginUser","AUTH_USER","jwtTokenHeader","username","AUTH_URL_BASE","setItem","AUTH_USER_OBJ","user","parse","eject","removeItem","AuthenticatedRoute","isLoggedin","to","useStyles","makeStyles","theme","backgroundColor","palette","mode","grey","flexGrow","height","overflow","paddingTop","paddingBottom","login_paper","marginTop","display","flexDirection","alignItems","login_avatar","margin","secondary","main","login_form","width","login_submit","avatar_40","avatar_70","SignInHtml","classes","Container","maxWidth","Avatar","formData","onSignon","submit","SignInComponent","executeJwtAuthenticationService","registerJwtSucessfulLogin","userDetails","isLoggedIn","token","LOGIN_ERROR","LogoutComponent","logout","CodeGroupsListComponent","CODE_GROUPS_DETAIL_URL","DELETE_ERROR","CodeGroupsDetailComponent","CODE_GROUPS_LIST","code","priority","multiline","rows","json","uv","pv","amt","Chart","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","PureComponent","jsfiddleUrl","StackedBarChart","stackId","fill","getIntroOfPage","CustomTooltip","CustomContentOfTooltip","barSize","Dashboard","process","URL_BASE","isLogin","src","faker","image","fashion","commerce","productName","random","words","people","food","px","py","m","MenuListItems","List","aria-labelledby","ListItem","button","ListItemIcon","BILLING","ListItemText","primary","ACCOUNT_PAYABLES_SETTINGS_LIST","GRADE_LEVEL_PAYABLES_LIST","STUDENT_LIST","SCHOOL_LIST","LOGOUT","LOGIN","useStylesDrawer","drawer","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","MiniDrawer","useTheme","Drawer","clsx","paper","doHandleDrawerClose","direction","AppBarComponent","root","appBar","zIndex","appBarShift","marginLeft","menuButton","marginRight","hide","title","paddingLeft","useStylesAppBar","setDrawerOpen","AppBar","position","Toolbar","edge","schoolLogo","LOGO_URL","noWrap","style","textDecoration","schoolName","userFullName","pl","FormControlLabel","Switch","checked","onChange","toggleDarkMode","StudentDetailHtml","reset","onRetrieve","BUTTONS","STUDENT_DETAIL_URL","lrn","birthPlace","FormLabel","RadioGroup","Radio","labelPlacement","gender","contactNo","address1","address2","city","zipCode","editable","country","fathersName","mothersName","mothersOccupation","parentCivilStatus","guardianName","StudentDetailComponent","StudentListComponent","SchoolDetailComponent","SCHOOL_DETAIL_URL","schoolYear","logo","address","SchoolListComponent","currPageableSchools","SubTitleComponent","SearchResultsHtmlComponent","CustomTableHead","CustomTableBody","doPayables","doShowPayables","SelectGrid","rest","require","StyledTableRow","StyledTableHeadRow","StyledTableHeadCell","PayablesHtmlComponent","total","setTotal","setPayables","periodId","currentState","setCurrentState","changeSelectStateByPeriod","changeSelectState","PAYABLES_RESET","resetPayables","doUpdateCurrPageable","DONE","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","hasNext","doShowSaveBillingDialog","studentPayables","aps","payment","amount","toLocaleString","undefined","paid","balance","onBlur","el","replaceAll","numValue","Number","onPaymentBlur","InputProps","startAdornment","InputAdornment","colSpan","billingByInvoice","invoiceNo","invoiceDate","payablesMap","BillingHtmlComponent","my","Select","doShowSaveConfirmDialog","SavePayablesConfimationHtml","confirmStore","componentRef","useRef","handlePrint","useReactToPrint","current","ConfirmPage","balanceTotal","paymentTotal","PrintableInvoicePage","ref","border","schoolAddress","Dialog","onClose","closeDialog","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","saveDialog","BillingComponent","vertical","horizontal","snackbar","setSnackbar","setConfirmStore","doInitFormData","by","API_URL_BASE","doSavePayables","student","doOpenSnackBar","doInitConfirmStore","doCloseSnackbar","getStudentPayablesByPeriod","optionsListTemp","confirmStoreTemp","Snackbar","autoHideDuration","anchorOrigin","AccountPayablesSettingsListComponent","applyToAll","ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL","renderCount","AccountPayablesSettingsDetailComponent","GradeLevelPayablesListComponent","sort","b","GRADE_LEVEL_PAYABLES_DETAIL_URL","GradeLevelAccountPayablesSettingsListComponent","setStore","setGradeLevelPayables","doAddItem","GradeLevelPayablesDetailsComponent","onRetrieveResponseAction","GridActionButtons","filter","FormGroup","Checkbox","handleCheckboxChange","GlobalAlertMsgDialog","closeMsgAlert","useStylesRouting","AppRouting","initialize","getLoggedUserObj","initTheme","lu","themeDarkMode","localStorage","THEME","THEME_STORAGE_NAME","setDarkMode","createMuiTheme","DARK_MODE","LIGHT_MODE","CssBaseline","path","ROOT","exact","INDEX","STUDENT_DETAIL","BILLING_PAYABLES","USER_DETAIL","CODE_GROUPS_DETAIL","SCHOOL_DETAIL","ACCOUNT_PAYABLES_SETTINGS_DETAIL","GRADE_LEVEL_PAYABLES_DETAIL","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","PAYABLES","schoolId","URL_BASE_DEV","URL_LIST","URL_DELETE","URL_DETAILS","URL_OPTIONS","URL_SAVE","UPDATE_ERROR","REQUIRED_DESCRIPTION","REQUIRED_5_DESCRIPTION","REQUIRED_TARGET_DATE","DASHBOARD","BILLING_PAYABLES_URL","ADDRESS_LIST","ADDRESS_DETAIL","USER_ADDRESS_DETAIL","ADDRESS_TYPE","USER","STUDENT","PARENT","withStyles","fontWeight","head","TableRow","hover","fontStyle","body","StyledTableCell","urlDetailsPattern"],"mappings":"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","file":"static/js/main.a2859b56.chunk.js","sourcesContent":["import { createContext, useContext, useMemo, useState } from 'react';\r\n\r\nconst GlobalVariableContext = createContext();\r\n\r\nfunction useGlobalVariable() {\r\n    const context = useContext(GlobalVariableContext)\r\n    if (!context) {\r\n        throw new Error(`useGlobalVariable must be used within an GlobalVariableProvider`)\r\n    }\r\n    return context;\r\n}\r\n\r\nfunction GlobalVariableProvider(props) {\r\n    const [globalProps, setGlobalProps] = useState({\r\n        ui: {\r\n            darkMode: false\r\n        },\r\n        alert: {\r\n            open: false,\r\n            severity: 'info',\r\n            msg: ''\r\n        }\r\n    })\r\n\r\n    const setAlertProps = (prop) => {\r\n        console.log(`[useGlobalVariable.setAlertProps] 1 prop=>`, prop)\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            alert: {\r\n                ...globalProps.alert,\r\n                ...prop\r\n            }\r\n        })\r\n    }\r\n\r\n    const setUIProps = (prop) => {\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            ui: {\r\n                ...globalProps.ui,\r\n                ...prop\r\n            }\r\n        })\r\n    }\r\n\r\n    const value = useMemo(() => [globalProps, setGlobalProps, setAlertProps, setUIProps],\r\n        [globalProps])\r\n    return <GlobalVariableContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { GlobalVariableProvider, useGlobalVariable }\r\n\r\n","import { USER_TEMP } from '../api/Utils'\r\nimport { createContext, useContext, useMemo, useState } from 'react';\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nfunction useAuth() {\r\n const context = useContext(AuthenticationContext)\r\n if (!context) {\r\n  throw new Error(`useAuth must be used within an AuthenticationProvider`)\r\n }\r\n return context;\r\n}\r\n\r\nfunction AuthenticationProvider(props) {\r\n const [userObj, setUserObj] = useState(USER_TEMP);\r\n\r\n const value = useMemo(() => [userObj, setUserObj], [userObj])\r\n return <AuthenticationContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { AuthenticationProvider, useAuth }\r\n\r\n","\r\n\r\n\r\n\r\nexport const resetSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem\r\n }\r\n}\r\n\r\nexport const setSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem,\r\n  ...action.payload\r\n }\r\n}\r\n\r\nexport const updateSelectedItemCommon = (state, action) => {\r\n let temp = {\r\n  ...state.selectedItem,\r\n  ...action.payload\r\n }\r\n state.selectedItem = temp\r\n}\r\n\r\nexport const setPageableCommon = (state, action) => {\r\n state.pageable = action.payload\r\n}\r\n\r\nexport const updatePageableCommon = (state, action) => {\r\n state.pageable = {\r\n  ...state.pageable,\r\n  ...action.payload\r\n }\r\n}\r\n\r\nexport const setPageableEntityCommon = (state, action, blankPageable) => {\r\n let temp = {\r\n  ...blankPageable\r\n }\r\n temp.list = [action.payload]\r\n state.pageable = temp\r\n}\r\nexport const setSearchValueCommon = (state, action) => {\r\n state.searchValue = action.payload\r\n}\r\n\r\nexport const setOptionsListCommon = (state, action) => {\r\n state.selectedItem = {\r\n  ...state.selectedItem,\r\n  optionsList: { ...action.payload }\r\n }\r\n}\r\n\r\nexport default function CommonSlice() {\r\n\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\nimport { INIT_STATUS } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nexport const blankSelectedItem = {\r\n\tcurrentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tperiodList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.currentPeriod == null) {\r\n\t\tdata.currentPeriod = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const SchoolSlice = createSlice({\r\n\tname: 'school',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, updateSelectedItem, setOptionsList } = SchoolSlice.actions\r\n\r\nexport const selectPageable = state => state.school.pageable\r\nexport const selectSelectedItem = state => state.school.selectedItem\r\nexport const selectSearchValue = state => state.school.searchValue\r\n\r\nexport default SchoolSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\toptionsList: {\r\n\t}\r\n}\r\nexport const CodeGroupsSlice = createSlice({\r\n\tname: 'codeGroups',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity } = CodeGroupsSlice.actions\r\n\r\nexport const selectPageable = state => state.codeGroups.pageable\r\nexport const selectSelectedItem = state => state.codeGroups.selectedItem\r\nexport const selectSearchValue = state => state.codeGroups.searchValue\r\n\r\n\r\nexport default CodeGroupsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tschool: { id: '' },\r\n\toptionsList: {\r\n\t\tschoolList: [],\r\n\t}\r\n}\r\n\r\nexport const UsersSlice = createSlice({\r\n\tname: 'users',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem } = UsersSlice.actions\r\n\r\nexport const selectPageable = state => state.users.pageable\r\nexport const selectSelectedItem = state => state.users.selectedItem\r\nexport const selectSearchValue = state => state.users.searchValue\r\n\r\n\r\nexport default UsersSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\toptionsList: {\r\n\t\tstudentLevelList: []\r\n\t}\r\n}\r\n\r\nexport const StudentSlice = createSlice({\r\n\tname: 'students',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tbirthDate: moment(action.payload.birthDate).format('YYYY-MM-DD'),\r\n\t\t\t\toptionsList: {\r\n\t\t\t\t\tstudentLevelList: []\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, setSearchValue, updateSelectedItem, setOptionsList } = StudentSlice.actions\r\n\r\nexport const selectPageable = state => state.students.pageable\r\nexport const selectSelectedItem = state => state.students.selectedItem\r\nexport const selectSearchValue = state => state.students.searchValue\r\n\r\n\r\nexport default StudentSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, setPageableCommon, setPageableEntityCommon, updateSelectedItemCommon } from '../CommonSlice';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\tperiod: { 'id': '' },\r\n\tactive: true,\r\n\tlist: [],\r\n\toptionsList: {\r\n\t\tlevelList: [],\r\n\t\tperiodList: [],\r\n\t\tapplyToAllList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.period == null) {\r\n\t\tdata.period = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const GradeLevelSlice = createSlice({\r\n\tname: 'gradeLevels',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetOptionsList: (state, action) => {\r\n\t\t\tconsole.log(`[GradeLevelSlice.setOptionsList] action=`, action)\r\n\t\t\tconst optionsList = action.payload\r\n\t\t\tlet list = state.selectedItem.accountPayablesSettings ? state.selectedItem.accountPayablesSettings : []\r\n\t\t\tlet applyToAllList = optionsList.applyToAllList;\r\n\t\t\tif (list.length === 0) {\r\n\t\t\t\tlist = [...applyToAllList]\r\n\t\t\t\tlist.map(i => i.status = 'NEW')\r\n\t\t\t} else {\r\n\t\t\t\tlet temp = [];\r\n\t\t\t\tlet tempList = [];\r\n\r\n\t\t\t\tlist.map(({ id }) => temp.push(id));\r\n\t\t\t\tapplyToAllList.map(row => {\r\n\t\t\t\t\tif (temp.indexOf(row.id) === -1) {\r\n\t\t\t\t\t\tlet rowTemp = {\r\n\t\t\t\t\t\t\t...row,\r\n\t\t\t\t\t\t\tstatus: 'NEW'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttempList.push(rowTemp)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn row\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet tempList2 = [\r\n\t\t\t\t\t...tempList,\r\n\t\t\t\t\t...list\r\n\t\t\t\t];\r\n\t\t\t\tlist = tempList2;\r\n\t\t\t}\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...state.selectedItem,\r\n\t\t\t\tlist: list,\r\n\t\t\t\toptionsList: { ...optionsList }\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\t// updateSelectedItem: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...state.selectedItem,\r\n\t\t// \t\t...action.payload\r\n\t\t// \t}\r\n\t\t// \tstate.selectedItem = temp\r\n\t\t// },\r\n\r\n\t\t// setPageable: (state, action) => {\r\n\t\t// \tstate.pageable = action.payload\r\n\t\t// },\r\n\r\n\t\t// setPageableEntity: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...blankPageable\r\n\t\t// \t}\r\n\t\t// \ttemp.list = [action.payload]\r\n\t\t// \tstate.pageable = temp\r\n\t\t// },\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, resetSelectedItem, setOptionsList, updateSelectedItem, setPageable, setPageableEntity, setSearchValue } = GradeLevelSlice.actions\r\n\r\nexport const selectPageable = state => state.gradeLevels.pageable\r\nexport const selectSelectedItem = state => state.gradeLevels.selectedItem\r\nexport const selectSearchValue = state => state.gradeLevels.searchValue\r\n\r\n\r\nexport default GradeLevelSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tperiod: { 'id': '' },\r\n\tpaymentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tpaymentPeriodList: [],\r\n\t\tperiodList: []\r\n\t}\r\n}\r\nexport const AccountPayablesSettingsSlice = createSlice({\r\n\tname: 'accountPayablesSettings',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setOptionsList } = AccountPayablesSettingsSlice.actions\r\n\r\nexport const selectPageable = state => state.accountPayablesSettings.pageable\r\nexport const selectSelectedItem = state => state.accountPayablesSettings.selectedItem\r\nexport const selectSearchValue = state => state.accountPayablesSettings.searchValue\r\n\r\n\r\nexport default AccountPayablesSettingsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon, updatePageableCommon } from '../CommonSlice'\r\n\r\n\r\nexport const optionsList = {\r\n\tbillingSearchBy: [{\r\n\t\tid: '1',\r\n\t\tvalue: 'STUDENT_ID',\r\n\t\tlabel: 'Student ID'\r\n\t}, {\r\n\t\tid: '2',\r\n\t\tvalue: 'STUDENT_NAME',\r\n\t\tlabel: 'Student Name'\r\n\t}]\r\n}\r\nexport const blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tsearchBy: '',\r\n\tsearchFlag: true,\r\n\tpayablesFlag: false,\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t},\r\n\toptionsList: optionsList\r\n}\r\nconst blankSelectedItem = {\r\n\tstudentId: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\tlevel: {\r\n\t\tid: '',\r\n\t\tvalue: '',\r\n\t\tdescription: ''\r\n\t},\r\n\tschool: {\r\n\t\tid: ''\r\n\t}\r\n}\r\n\r\nconst blankConfirmPayables = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tentity: {\r\n\t\tstudentId: '',\r\n\t\tfirstName: '',\r\n\t\tlastName: '',\r\n\t\tlevel: {\r\n\t\t\tid: '',\r\n\t\t\tvalue: '',\r\n\t\t\tdescription: ''\r\n\t\t}\r\n\t},\r\n\tpayables: [],\r\n\tpayablesByInvoiceNo: [],\r\n\topen: false\r\n}\r\n\r\nexport const BillingSlice = createSlice({\r\n\tname: 'billing',\r\n\tinitialState: {\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t},\r\n\t\tconfirmPayables: {\r\n\t\t\t...blankConfirmPayables\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tupdatePageable: (state, action) => updatePageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\r\n\t\tsetConfirmPayables: (state, action) => {\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] action.payload==>`, action.payload)\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] 1 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t\tstate.confirmPayables = {\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] 2 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t},\r\n\t\tupdateConfirmPayables: (state, action) => {\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] action.payload==>`, action.payload)\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] 1 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t\tstate.confirmPayables = {\r\n\t\t\t\t...state.confirmPayables,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] 2 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, updatePageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem, setConfirmPayables, updateConfirmPayables } = BillingSlice.actions\r\n\r\nexport const selectPageable = state => state.billing.pageable\r\nexport const selectSelectedItem = state => state.billing.selectedItem\r\nexport const selectSearchValue = state => state.billing.searchValue\r\nexport const selectConfirmPayables = state => state.billing.confirmPayables\r\n\r\n\r\nexport default BillingSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport SchoolReducer from './school/SchoolSlice';\r\nimport CodeGroupsReducer from './codeGroups/CodeGroupsSlice';\r\nimport UsersReducer from './endUser/UsersSlice';\r\nimport StudentReducer from './student/StudentSlice';\r\nimport GradeLevelReducer from './gradeLevelPayables/GradeLevelSlice';\r\nimport AccountPayablesSettingsReducer from './accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport BillingReducer from './billing/BillingSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        school: SchoolReducer,\r\n        codeGroups: CodeGroupsReducer,\r\n        users: UsersReducer,\r\n        students: StudentReducer,\r\n        gradeLevels: GradeLevelReducer,\r\n        accountPayablesSettings: AccountPayablesSettingsReducer,\r\n        billing: BillingReducer\r\n    },\r\n});","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"container\">Oooops!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorComponent;","import { Box, Divider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FooterComponent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nfunction Copyright() {\r\n    return (\r\n        <>\r\n            <Box mx=\"auto\" pt={3}><Divider />\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    <Link color=\"inherit\" href=\"https://material-ui.com/\">Your Website</Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nexport default FooterComponent;","import { TablePagination } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst PaginationComponent = (props) => {\r\n return (\r\n  <TablePagination rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n   component=\"div\"\r\n   page={props.paging.currentPage}\r\n   count={props.paging.totalElements}\r\n   rowsPerPage={props.paging.rowsPerPage}\r\n   onChangePage={props.onChangePage}\r\n   onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n  />\r\n )\r\n}\r\nexport default PaginationComponent;","\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Table, TableHead, TableCell, TableBody, FormControl, Input, Grid, IconButton, TableContainer, Paper } from '@material-ui/core';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils'\r\nimport PaginationComponent from './PaginationComponent';\r\n\r\nexport default function CustomTableGrid(props) {\r\n const { showPaging = true, showSearch = true, showAction = true } = props;\r\n\r\n const { register } = useForm();\r\n const [counter, setCounter] = useState(0);\r\n\r\n const doHandleKeyDown = (e) => {\r\n  if (e.key === 'Enter') {\r\n   props.doSearch(e.target.value)\r\n   e.preventDefault();\r\n  }\r\n  setCounter(counter + 1)\r\n }\r\n\r\n return (\r\n  <>\r\n   <Grid container spacing={3}>\r\n    {\r\n     showSearch &&\r\n     <Grid item xs={12} sm={8}>\r\n      <FormControl variant=\"filled\">\r\n       <Input name=\"searchValue\"\r\n        defaultValue={props.store.searchValue}\r\n        onKeyDown={e => doHandleKeyDown(e)}\r\n        placeholder=\"Search\"\r\n        inputRef={register}\r\n        endAdornment={<SearchIcon onClick={() => props.doRetrieve()} />}\r\n       />\r\n       {props.children}\r\n      </FormControl>\r\n     </Grid>\r\n    }\r\n\r\n    {\r\n     showPaging &&\r\n     <Grid item xs={12} sm={4}>\r\n      <PaginationComponent\r\n       paging={props.store.paging}\r\n       onChangePage={props.onChangePage}\r\n       onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n      />\r\n     </Grid>\r\n    }\r\n\r\n   </Grid>\r\n\r\n   <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n    <Table>\r\n     <TableHead>\r\n      <StyledTableHeadRow>\r\n       {props.cols.map(params => (\r\n        <>\r\n         <StyledTableHeadCell key={params.field}>{params.headerName}</StyledTableHeadCell>\r\n        </>\r\n       ))}\r\n       {showAction && <StyledTableHeadCell align=\"right\">\r\n        Action\r\n        <IconButton aria-label=\"add\" onClick={() => props.doNew()}>\r\n         <AddIcon fontSize=\"large\" />\r\n        </IconButton>\r\n       </StyledTableHeadCell>}\r\n\r\n      </StyledTableHeadRow>\r\n     </TableHead>\r\n     <TableBody>\r\n      {props.store.list.map(row => (\r\n       <StyledTableRow key={row.id}>\r\n        {props.cols.map(params => (\r\n         <>\r\n          <TableCell>{params.render ? params.render(row) : row[params.field]}</TableCell>\r\n         </>\r\n        ))}\r\n        {showAction && <TableCell align=\"right\">\r\n         <IconButton aria-label=\"edit\" onClick={() => props.doEdit(row)}>\r\n          <EditIcon fontSize=\"large\" />\r\n         </IconButton>\r\n         <IconButton aria-label=\"delete\" onClick={() => props.doDelete(row.id)}>\r\n          <DeleteIcon fontSize=\"large\" />\r\n         </IconButton>\r\n        </TableCell>}\r\n\r\n       </StyledTableRow>\r\n      ))}\r\n     </TableBody>\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   {props.showPaging && <PaginationComponent\r\n    paging={props.store.paging}\r\n    doHandleChangePage={props.doHandleChangePage}\r\n    doHandleChangeRowsPerPage={props.doHandleChangeRowsPerPage}\r\n   />}\r\n\r\n  </ >\r\n );\r\n}","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"user\";\r\n\r\nconst sort = \"lastName, firstName\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => {\r\n console.log(`[EndUserService.save] data=`, data)\r\n return axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n}\r\n\r\n\r\nconst EndUserService = () => {\r\n const test = () => {\r\n\r\n }\r\n return [test]\r\n}\r\n\r\nexport default EndUserService\r\n\r\n\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst TitleComponent = (props) => {\r\n return (\r\n  <Box pb={1}>\r\n   <Typography variant=\"h4\">\r\n    {props.children}\r\n   </Typography>\r\n  </Box>\r\n )\r\n}\r\n\r\nexport default TitleComponent","\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nexport const useMessageAlert = () => {\r\n\r\n    // const [globalProps, , setAlertProps, , , , ,] = useGlobalVariable();\r\n    const [globalProps, , setAlertProps] = useGlobalVariable();\r\n    const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n        showMsgAlert(true, errMsg, 'error')\r\n    }\r\n\r\n    const showErrorAlert = (msg) => {\r\n        showMsgAlert(true, msg, 'error')\r\n    }\r\n\r\n    const showInfoAlert = (msg) => {\r\n        showMsgAlert(true, msg, 'info')\r\n    }\r\n\r\n    const showWarningAlert = (msg) => {\r\n        showMsgAlert(true, msg, 'warning')\r\n    }\r\n\r\n    const showSuccessAlert = (msg) => {\r\n        showMsgAlert(true, msg, 'success')\r\n    }\r\n\r\n    const showMsgAlert = (open, msg, severity) => {\r\n        setAlertProps({\r\n            open: open,\r\n            severity: severity,\r\n            msg: msg,\r\n        })\r\n    }\r\n\r\n    const closeMsgAlert = () => {\r\n        console.log(`[useMessageAlert.closeMsgAlert] 1 globalProps=>`, globalProps)\r\n        setAlertProps({\r\n            open: false\r\n        })\r\n\r\n        console.log(`[useMessageAlert.closeMsgAlert] 2 globalProps=>`, globalProps)\r\n    }\r\n\r\n    const getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        console.error(`[useMessageAlert.getFormatedErrorMessage] error=>`, JSON.stringify(error));\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.error(`[${formMethod}] ${serviceName} error `, JSON.stringify(error));\r\n\r\n        if (error.message) {\r\n            console.error(`[useMessageAlert.getFormatedErrorMessage] error.message=>`, JSON.stringify(error.message));\r\n            errMsg = error.message\r\n        }\r\n\r\n        if (error.response) {\r\n            console.error(`[useMessageAlert.getFormatedErrorMessage] error.response=>`, JSON.stringify(error.response));\r\n            // Request made and server responded\r\n            console.log('error.response.data', error.response.data);\r\n            console.log('error.response.status', error.response.status);\r\n            console.log('error.response.headers', error.response.headers);\r\n            if (error.response.data.error && error.response.data.status) {\r\n                errMsg = `[${error.response.data.status}: ${error.response.data.error}] - ${error.response.data.message}`\r\n            } else {\r\n                errMsg = `${error.response.data}`\r\n            }\r\n        }\r\n\r\n        console.error(`[${formMethod}] ${serviceName} error msg: ${errMsg}`);\r\n        return errMsg;\r\n    }\r\n\r\n    return [\r\n        globalProps,\r\n        showErrorAlert,\r\n        showErrorMsgAlert,\r\n        showInfoAlert,\r\n        showWarningAlert,\r\n        showSuccessAlert,\r\n        closeMsgAlert\r\n    ]\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nimport { PAGE_URL, INIT_STATUS, ERROR_CODE } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/endUser/EndUserService';\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/endUser/UsersSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function EndUserListComponent(props) {\r\n\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.getList'))\r\n\r\n\r\n\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'firstName',\r\n      headerName: 'First Name',\r\n    },\r\n    {\r\n      field: 'lastName',\r\n      headerName: 'Last Name',\r\n      render: function (row) {\r\n        return row.firstName + ' ' + row.lastName;\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Users</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { Box, Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst EndUserDetailHtml = props => {\r\n      const { control, register, handleSubmit } = useForm();\r\n      const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n      const history = useHistory();\r\n\r\n      useEffect(() => {\r\n            if (status === INIT_STATUS.LOAD) {\r\n                  props.doRetrieve(props.store.entityId);\r\n                  setStatus(INIT_STATUS.RESET)\r\n            }\r\n      }, [props.store])\r\n\r\n      return (\r\n            <>\r\n                  {console.log(`[EndUserDetailHtml.return] props.store==>`, props.store)}\r\n                  <TitleComponent>User Detail</TitleComponent>\r\n                  {props.message && <Alert severity=\"info\">{props.message}</Alert>}\r\n                  <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                        <TextField type=\"hidden\"\r\n                              name=\"id\"\r\n                              inputRef={register}\r\n                              defaultValue={props.store.id}\r\n                        />\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"userName\"\r\n                                          name=\"userName\"\r\n                                          label=\"User Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-userName\"\r\n                                          variant=\"filled\"\r\n                                          autoFocus\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.userName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          id=\"password\"\r\n                                          type=\"password\"\r\n                                          name=\"password\"\r\n                                          label=\"Password\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-password\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.password}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"firstName\"\r\n                                          name=\"firstName\"\r\n                                          label=\"First Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-firstName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.firstName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={612}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"lastName\"\r\n                                          name=\"lastName\"\r\n                                          label=\"Last Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-lastName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.lastName}\r\n                                    />\r\n                              </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                              <Box pt={3}>\r\n                                    {/* <TextField id=\"school\"\r\n                                          select\r\n                                          required\r\n                                          name=\"school.id\"\r\n                                          label=\"School\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-school\"\r\n                                          variant=\"filled\"\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.school.id}\r\n                                          error={!!errors.name}\r\n                                    >\r\n                                          {props.store.optionsList.schoolList.map(row => (\r\n                                                <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                          ))}\r\n                                    </TextField> */}\r\n                                    <Controller\r\n                                          as={\r\n                                                <TextField id=\"school\"\r\n                                                      required\r\n                                                      select\r\n                                                      label=\"School\"\r\n                                                      fullWidth\r\n                                                      autoComplete=\"student-school\"\r\n                                                      variant=\"filled\"\r\n                                                      InputLabelProps={{ shrink: true }}\r\n                                                      inputRef={register}\r\n                                                // error={!!errors.name}\r\n                                                >\r\n                                                      {props.store.optionsList.schoolList.map(row => (\r\n                                                            <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                                      ))}\r\n                                                </TextField>\r\n                                          }\r\n                                          name=\"school.id\"\r\n                                          control={control}\r\n                                          defaultValue={props.store.school.id}\r\n                                          options={props.store.optionsList.studentLevelList}\r\n                                    />\r\n                              </Box>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                  </form>\r\n            </ >\r\n      );\r\n};\r\n\r\nexport default EndUserDetailHtml;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getOptions, save } from '../../api/endUser/EndUserService';\r\nimport EndUserDetailHtml from './EndUserDetailHtml';\r\nimport { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport { resetSelectedItem, selectSelectedItem, setOptionsList, setPageableEntity } from '../../api/endUser/UsersSlice';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function EndUserDetailComponent(props) {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n\r\n    setMessage(`Loading. Please wait...`);\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage(``);\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'EndUserDetailComponent.doRetrieve', 'EndUserService.getOptions'))\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage(``);\r\n        props.history.push(PAGE_URL.USER_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'EndUserDetailComponent.onSubmitForm', 'EndUserService.save'))\r\n  }\r\n\r\n\r\n  return (\r\n    <EndUserDetailHtml store={selectedItem}\r\n      doRetrieve={doRetrieve}\r\n      onSubmitForm={onSubmitForm}\r\n      message={message} />\r\n\r\n  );\r\n}\r\n\r\n\r\n","import axios from \"axios\"\r\nimport { AUTH_URL_BASE, AUTH_USER, AUTH_USER_OBJ, JWT_TOKEN, USER_TEMP } from \"../api/Utils\"\r\n\r\nimport { useAuth } from '../providers/AuthenticationProvider';\r\n\r\nlet myInterceptor\r\n\r\nexport const useAuthServices = () => {\r\n const [userObj, setUserObj] = useAuth();\r\n\r\n const initialize = () => {\r\n  if (isUserLoggedIn()) {\r\n   let jwtTokenHeader = getJwtTokenHeader()\r\n   setupAxiosInterceptors(jwtTokenHeader);\r\n  }\r\n }\r\n\r\n const executeJwtAuthenticationService = (username, password) => {\r\n  console.log('[useAuthServices.executeJwtAuthenticationService]');\r\n\r\n  return axios.post(`${AUTH_URL_BASE}`, { username, password })\r\n }\r\n\r\n const registerJwtSucessfulLogin = (userObj, jwtToken) => {\r\n  console.log('[useAuthServices.registerJwtSucessfulLogin] jwtToken=', jwtToken);\r\n  console.log('[useAuthServices.registerJwtSucessfulLogin] userObj=', userObj);\r\n  sessionStorage.setItem(AUTH_USER_OBJ, JSON.stringify(userObj));\r\n  sessionStorage.setItem(AUTH_USER, userObj.userName);\r\n  sessionStorage.setItem(JWT_TOKEN, jwtToken);\r\n\r\n\r\n  let jwtTokenHeader = getJwtTokenHeader()\r\n  setupAxiosInterceptors(jwtTokenHeader);\r\n }\r\n\r\n const getJwtTokenHeader = () => {\r\n  let jwtToken = getJwtToken();\r\n  let jwtTokenHeader = `Bearer ${jwtToken}`;\r\n  return jwtTokenHeader;\r\n }\r\n\r\n const getJwtToken = () => sessionStorage.getItem(JWT_TOKEN)\r\n\r\n const setupAxiosInterceptors = (authHeader) => {\r\n  console.log('[useAuthServices.setupAxiosInterceptors] init..');\r\n  console.log(`[useAuthServices.setupAxiosInterceptors] authHeader: ${authHeader}`);\r\n  myInterceptor = axios.interceptors.request.use(\r\n   async config => {\r\n    if (isUserLoggedIn()) {\r\n     config.headers.authorization = authHeader;\r\n    }\r\n    return config;\r\n   }\r\n  );\r\n  console.log('[useAuthServices.setupAxiosInterceptors] done!');\r\n }\r\n\r\n const isUserLoggedIn = () => {\r\n  let user = getSessionStorageLoginUser()\r\n  return (user != null);\r\n }\r\n\r\n const getSessionStorageLoginUser = () => sessionStorage.getItem(AUTH_USER)\r\n\r\n const getLoggedUserObj = () => {\r\n  let user = JSON.parse(sessionStorage.getItem(AUTH_USER_OBJ));\r\n  console.error('[useAuthServices.getLoggedUserObj] 1 user=>', user);\r\n  if (!user) {\r\n   user = USER_TEMP;\r\n  }\r\n  console.error('[useAuthServices.getLoggedUserObj] 2 user=>', user);\r\n  return user;\r\n  // return {}\r\n }\r\n\r\n const logout = () => {\r\n  axios.interceptors.request.eject(myInterceptor);\r\n  sessionStorage.removeItem(AUTH_USER);\r\n  sessionStorage.removeItem(AUTH_USER_OBJ);\r\n  sessionStorage.removeItem(JWT_TOKEN);\r\n\r\n  setUserObj(USER_TEMP)\r\n  console.log('[useAuthServices.logout]  userObj=>', userObj);\r\n }\r\n\r\n return [\r\n  initialize,\r\n  executeJwtAuthenticationService,\r\n  registerJwtSucessfulLogin,\r\n  getLoggedUserObj,\r\n  isUserLoggedIn,\r\n  logout\r\n ]\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuthServices } from './useAuthServices'\r\n\r\nconst AuthenticatedRoute = (props) => {\r\n    const [,\r\n        ,\r\n        ,\r\n        ,\r\n        isUserLoggedIn,\r\n\r\n    ] = useAuthServices()\r\n\r\n    const isLoggedin = isUserLoggedIn()\r\n    console.log(`[AuthenticatedRoute] isLoggedin=>`, isLoggedin)\r\n    if (isUserLoggedIn()) {\r\n        return <Route {...props} />;\r\n    } else {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        backgroundColor:\r\n            theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    login_paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    login_avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    login_form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login_submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n    avatar_40: {\r\n        width: theme.spacing(40),\r\n        height: theme.spacing(40),\r\n    },\r\n    avatar_70: {\r\n        width: theme.spacing(70),\r\n        height: theme.spacing(70),\r\n    }\r\n}));\r\n\r\nclass CSS {\r\n\r\n}\r\n\r\nexport default new CSS();","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useStyles } from '../forms/common/CSS'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst SignInHtml = props => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  function onSubmitForm(formData) {\r\n    props.onSignon(formData.userName, formData.password);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.login_paper}>\r\n        <Avatar className={classes.login_avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n        <form className={classes.login_form} onSubmit={handleSubmit(onSubmitForm)}>\r\n\r\n          <TextField type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userName\"\r\n            label=\"User Name\"\r\n            name=\"userName\"\r\n            autoComplete=\"userName\"\r\n            autoFocus\r\n            inputRef={register}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignInHtml;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport SignInHtml from './SignInHtml.js';\r\nimport { useMessageAlert } from \"../api/useMessageAlert\"\r\nimport { useAuth } from '../providers/AuthenticationProvider';\r\nimport { useAuthServices } from './useAuthServices'\r\nimport { ERROR_CODE } from '../api/Utils.js';\r\n\r\nexport default function SignInComponent() {\r\n\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n\r\n  const [,\r\n    executeJwtAuthenticationService,\r\n    registerJwtSucessfulLogin,\r\n    ,\r\n    ,\r\n  ] = useAuthServices()\r\n\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [userObj, setUserObj] = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n  // const setError = (error, errorCode, formMethod, serviceName) => {\r\n  //   console.error(`[SignInComponent.setError]  error=`, error)\r\n  //   showErrorMsgAlert(error, errorCode, formMethod, serviceName)\r\n  // }\r\n\r\n  const onSignon = (userName, password) => {\r\n    console.error(`[SignInComponent.onSignon] userName=${userName}`)\r\n    setMessage('');\r\n\r\n    executeJwtAuthenticationService(userName, password)\r\n      .then(response => {\r\n        const userDetails = {\r\n          ...response.data.userDetails,\r\n          isLoggedIn: true\r\n        }\r\n        registerJwtSucessfulLogin(userDetails, response.data.token)\r\n        setUserObj(userDetails)\r\n\r\n        console.error(`[SignInComponent.onSignon useAuthServices.xecuteJwtAuthenticationService] userDetails=`, userDetails)\r\n        console.error(`[SignInComponent.onSignon useAuthServices.xecuteJwtAuthenticationService] userObj=`, userObj)\r\n\r\n        setMessage('Login Successful!');\r\n        history.push(`/`);\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LOGIN_ERROR, 'SignInComponent.onSignon', 'useAuthServices.executeJwtAuthenticationService'))\r\n\r\n  }\r\n  return (\r\n    <SignInHtml message={message} onSignon={onSignon} />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useAuthServices } from './useAuthServices'\r\nimport { useAuth } from '../providers/AuthenticationProvider';\r\n\r\nexport default function LogoutComponent() {\r\n    const [userObj] = useAuth();\r\n    const [,\r\n        ,\r\n        ,\r\n        ,\r\n        ,\r\n        logout] = useAuthServices()\r\n\r\n    useEffect(() => {\r\n        console.log('[LogoutComponent.useEffect]: userObj', userObj);\r\n        logout();\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <h1>You are logged out</h1>\r\n            <div className=\"container\">\r\n                Thank you. Come again!\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"codeGroups\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function CodeGroupsService() {\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList } from '../../api/codeGroups/CodeGroupsService';\r\nimport { selectPageable, resetSelectedItem, setPageable, setSelectedItem } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function CodeGroupsListComponent(props) {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'CodeGroupsListComponent.retrieve', 'CodeGroupsService.getList'))\r\n\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}/-1`)\r\n\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.DELETE_ERROR, 'CodeGroupsListComponent.doDelete', 'CodeGroupsService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'code',\r\n      headerName: 'Code',\r\n    },\r\n    {\r\n      field: 'value',\r\n      headerName: 'Value',\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n\r\n      <TitleComponent>Code Groups List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nimport { selectSelectedItem, resetSelectedItem, setPageableEntity } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport { save } from '../../api/codeGroups/CodeGroupsService';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function CodeGroupsDetailComponent(props) {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem, status]);\r\n\r\n\r\n  const doSave = data => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.CODE_GROUPS_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[CodeGroupsDetailComponent.render] selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Code Groups Detail</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id=\"code\"\r\n              name=\"code\"\r\n              label=\"Code\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-code\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.code}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={5}>\r\n            <TextField\r\n              required\r\n              id=\"value\"\r\n              name=\"value\"\r\n              label=\"Value\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-value\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.value}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"priority\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-priority\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-description\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n            <Grid item xs={12} sm={12}>&nbsp;</Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                multiline\r\n                rows={4}\r\n                id=\"json\"\r\n                name=\"json\"\r\n                label=\"JSON\"\r\n                fullWidth\r\n                autoComplete=\"code-groups-json\"\r\n                variant=\"filled\"\r\n                InputLabelProps={{ shrink: true }}\r\n                inputRef={register}\r\n                defaultValue={selectedItem.json}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Chart extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\r\n\r\n  render() {\r\n    return (\r\n      <LineChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\nexport default class StackedBarChart extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/90v76x08/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 20, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n    <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\n\r\nconst getIntroOfPage = (label) => {\r\n if (label === 'Page A') {\r\n  return \"Page A is about men's clothing\";\r\n } if (label === 'Page B') {\r\n  return \"Page B is about women's dress\";\r\n } if (label === 'Page C') {\r\n  return \"Page C is about women's bag\";\r\n } if (label === 'Page D') {\r\n  return 'Page D is about household goods';\r\n } if (label === 'Page E') {\r\n  return 'Page E is about food';\r\n } if (label === 'Page F') {\r\n  return 'Page F is about baby food';\r\n }\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n if (active) {\r\n  return (\r\n   <div className=\"custom-tooltip\">\r\n    <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n    <p className=\"intro\">{getIntroOfPage(label)}</p>\r\n    <p className=\"desc\">Anything you want can be displayed here.</p>\r\n   </div>\r\n  );\r\n }\r\n\r\n return null;\r\n};\r\n\r\nexport default class CustomContentOfTooltip extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/vxq4ep63/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 5, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip content={<CustomTooltip />} />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" barSize={20} fill=\"#8884d8\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React from 'react';\r\nimport faker from 'faker'\r\nimport { URL_BASE } from '../../api/Utils'\r\nimport { useStyles } from '../common/CSS'\r\n\r\nimport { Avatar, Box, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport Chart from './Chart';\r\nimport StackedBarChart from './StackedBarChart';\r\nimport CustomContentOfTooltip from './CustomContentOfTooltip';\r\n\r\nimport { useAuthServices } from '../../security/useAuthServices'\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  console.log(`[Dashboard] process.env.NODE_ENV= ${process.env.NODE_ENV}`)\r\n  console.log(`[Dashboard] URL_BASE= ${URL_BASE}`)\r\n\r\n  const [,\r\n    ,\r\n    ,\r\n    ,\r\n    isUserLoggedIn,\r\n\r\n  ] = useAuthServices()\r\n  const isLogin = isUserLoggedIn()\r\n\r\n  console.log(`[Dashboard] isLogin=${isLogin}`)\r\n  return (\r\n    <> {\r\n      !isLogin &&\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.fashion(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.people(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.food(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n      </Grid>\r\n    }\r\n\r\n      {\r\n        isLogin &&\r\n        <>\r\n          <Box component={Paper} elevation={3} variant=\"elevation\" px={3} py={3} m=\"auto\">\r\n            <Typography variant=\"h4\">Chart samples click <a href=\"https://recharts.org/en-US/examples\">here</a></Typography>\r\n            <Grid container spacing={5}>\r\n              <Grid item xs={12} sm={4}>\r\n                <Chart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <StackedBarChart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <CustomContentOfTooltip />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </>\r\n      }\r\n    </ >\r\n  )\r\n}","import React from 'react';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PAGE_URL } from '../../api/Utils'\r\nimport { Divider } from '@material-ui/core';\r\n\r\nimport { useAuthServices } from '../../security/useAuthServices'\r\n\r\nexport default function MenuListItems() {\r\n  const [,\r\n    ,\r\n    ,\r\n    ,\r\n    isUserLoggedIn,\r\n    \r\n  ] = useAuthServices()\r\n  const isLoggedIn = isUserLoggedIn();\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    // subheader={\r\n    //  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n    //   Menu\r\n    //  </ListSubheader>\r\n    // }\r\n    >\r\n      {\r\n        isLoggedIn && <>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AccountBalanceWalletIcon onClick={() => history.push(PAGE_URL.BILLING)} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Billing\" onClick={() => history.push(PAGE_URL.BILLING)} />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Payables Settings\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIndIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Level Payables\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.STUDENT_LIST)}>\r\n            <ListItemIcon>\r\n              <LocalLibraryIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Student\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.SCHOOL_LIST)} >\r\n            <ListItemIcon>\r\n              <SchoolIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"School\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.USER_LIST)} >\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)}>\r\n            <ListItemIcon>\r\n              <CodeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Code Groups\" />\r\n          </ListItem>\r\n\r\n        </>\r\n      }\r\n\r\n      {isLoggedIn &&\r\n        <>\r\n          <Divider />\r\n          <ListItem button onClick={() => history.push(PAGE_URL.LOGOUT)} >\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </>\r\n      }\r\n\r\n      {!isLoggedIn &&\r\n        <ListItem button onClick={() => history.push(PAGE_URL.LOGIN)} >\r\n          <ListItemIcon>\r\n            <VpnKeyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Login\" />\r\n        </ListItem>}\r\n\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuListItems from './MenuListItems';\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStylesDrawer = makeStyles((theme) => ({\r\n drawer: {\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: 'nowrap',\r\n },\r\n drawerOpen: {\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n },\r\n drawerClose: {\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: theme.spacing(7) + 1,\r\n  [theme.breakpoints.up('sm')]: {\r\n   width: theme.spacing(9) + 1,\r\n  },\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n const classes = useStylesDrawer();\r\n const theme = useTheme();\r\n\r\n return (\r\n  <Drawer\r\n   variant=\"permanent\"\r\n   className={clsx(classes.drawer, {\r\n    [classes.drawerOpen]: props.drawerOpen,\r\n    [classes.drawerClose]: !props.drawerOpen,\r\n   })}\r\n   classes={{\r\n    paper: clsx({\r\n     [classes.drawerOpen]: props.drawerOpen,\r\n     [classes.drawerClose]: !props.drawerOpen,\r\n    }),\r\n   }}\r\n  >\r\n   <div className={classes.toolbar}>\r\n    <IconButton onClick={props.doHandleDrawerClose}>\r\n     {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n    </IconButton>\r\n   </div>\r\n   <Divider />\r\n   <MenuListItems />\r\n  </Drawer>\r\n );\r\n}\r\n","\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { AppBar, IconButton, Toolbar, Typography, Avatar, Box, FormControlLabel, Switch, makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nimport { PAGE_URL, URL_BASE } from '../../api/Utils'\r\nimport { useAuth } from '../../providers/AuthenticationProvider';\r\nimport MiniDrawer from './MiniDrawer';\r\n\r\nexport default function AppBarComponent(props) {\r\n const [userObj] = useAuth();\r\n\r\n const drawerWidth = 240;\r\n const useStylesAppBar = makeStyles((theme) => ({\r\n  root: {\r\n   display: 'flex',\r\n  },\r\n  appBar: {\r\n   zIndex: theme.zIndex.drawer + 1,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n   }),\r\n  },\r\n  appBarShift: {\r\n   marginLeft: drawerWidth,\r\n   width: `calc(100% - ${drawerWidth}px)`,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n   }),\r\n  },\r\n  menuButton: {\r\n   marginRight: 36,\r\n  },\r\n  hide: {\r\n   display: 'none',\r\n  },\r\n  title: {\r\n   flexGrow: 1,\r\n   display: 'none',\r\n   [theme.breakpoints.up('sm')]: {\r\n    display: 'block',\r\n    paddingLeft: theme.spacing(1)\r\n   },\r\n   //backgroundColor: fade(theme.palette.common.white, 0.25),\r\n  },\r\n }));\r\n // const [userObj, setUserObj] = useState({\r\n //  userName: '',\r\n //  userFullName: 'Guest',\r\n //  schoolName: '',\r\n //  schoolLogo: ''\r\n // });\r\n\r\n const classes = useStylesAppBar();\r\n // const userName = AuthenticationService.getLoginUserName();\r\n // const isLogin = AuthenticationService.isUserLoggedIn();\r\n\r\n // printme(userObj);\r\n\r\n const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n const doHandleDrawerOpen = () => {\r\n  setDrawerOpen(true);\r\n  console.log(`[AppBarComponent.doHandleDrawerOpen] drawerOpen=>${drawerOpen}`)\r\n }\r\n const doHandleDrawerClose = () => {\r\n  setDrawerOpen(false);\r\n  console.log(`[AppBarComponent.doHandleDrawerClose] doHandleDrawerClose=>${drawerOpen}`)\r\n }\r\n return (\r\n  < div className={classes.root} >\r\n   {console.log('[AppBarComponent.return] userObj=>', userObj)}\r\n   <AppBar\r\n    position=\"fixed\"\r\n    className={clsx(classes.appBar, {\r\n     [classes.appBarShift]: drawerOpen,\r\n    })}>\r\n    <Toolbar>\r\n     <IconButton\r\n      color=\"inherit\"\r\n      aria-label=\"open drawer\"\r\n      onClick={doHandleDrawerOpen}\r\n      edge=\"start\"\r\n      className={clsx(classes.menuButton, {\r\n       [classes.hide]: drawerOpen,\r\n      })}\r\n     >\r\n      <MenuIcon />\r\n     </IconButton>\r\n\r\n     {userObj && userObj.schoolLogo && <Avatar src={(URL_BASE + PAGE_URL.LOGO_URL + userObj.schoolLogo)} />}\r\n     {(!userObj || !userObj.schoolLogo) && <SchoolIcon />}\r\n\r\n     <Typography className={classes.title} variant=\"h6\" noWrap>\r\n      <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n       {userObj && <b>{userObj.schoolName}</b>}\r\n      </Link>\r\n     </Typography>\r\n     {userObj && <div>Welcome <b>{userObj.userFullName}</b></div>}\r\n\r\n     <Box pl={5}>\r\n      <FormControlLabel control={<Switch checked={props.darkMode} onChange={props.toggleDarkMode} />} />\r\n     </Box>\r\n    </Toolbar>\r\n   </AppBar>\r\n   <MiniDrawer drawerOpen={drawerOpen} doHandleDrawerClose={doHandleDrawerClose} />\r\n  </div >\r\n );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Divider, FormControlLabel, FormLabel, Grid, MenuItem, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst StudentDetailHtml = props => {\r\n\r\n  const { control, register, handleSubmit, reset } = useForm();\r\n  const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setCounter(counter + 1);\r\n    console.log(`[StudentDetailHtml.useEffect] status=>${status}, counter=${counter}`);\r\n    if (status === INIT_STATUS.LOAD) {\r\n      props.onRetrieve();\r\n      setStatus(INIT_STATUS.RESET)\r\n    }\r\n    reset(props.store)\r\n  }, [props.store])\r\n\r\n  const BUTTONS = () => {\r\n    return (\r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.STUDENT_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.STUDENT_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <TitleComponent>Student Detail</TitleComponent>\r\n      {props.message && <Alert severity=\"info\">{props.message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n        <BUTTONS />\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={props.store.id}\r\n        />\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"lrn\"\r\n              name=\"lrn\"\r\n              label=\"LRN\"\r\n              fullWidth\r\n              autoComplete=\"lrn\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lrn}\r\n            />\r\n          </Grid><Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"studentId\"\r\n              name=\"studentId\"\r\n              label=\"Student Id\"\r\n              fullWidth\r\n              autoComplete=\"studentId\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.studentId}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.firstName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              autoComplete=\"family-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lastName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"level\"\r\n                  required\r\n                  select\r\n                  name=\"level.id\"\r\n                  label=\"Grade Level\"\r\n                  fullWidth\r\n                  autoComplete=\"student level\"\r\n                  variant=\"filled\"\r\n                  inputRef={register}\r\n                >\r\n                  {props.store.optionsList.studentLevelList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"level.id\"\r\n              control={control}\r\n              defaultValue={props.store.level.id}\r\n              options={props.store.optionsList.studentLevelList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthDate\"\r\n              name=\"birthDate\"\r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              fullWidth\r\n              autoComplete=\"birth-date\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.birthDate}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthPlace\"\r\n              name=\"birthPlace\"\r\n              label=\"Birth Place\"\r\n              fullWidth\r\n              autoComplete=\"birth-place\"\r\n              InputLabelProps={{ shrink: true }}\r\n              variant=\"filled\"\r\n              inputRef={register}\r\n              defaultValue={props.store.birthPlace}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <FormLabel component=\"gender\"\r\n              variant=\"filled\">Gender</FormLabel>\r\n            <Controller\r\n              as={\r\n                <RadioGroup row\r\n                  label=\"Gender\"\r\n                  aria-label=\"gender\"\r\n                  variant=\"filled\">\r\n                  <FormControlLabel\r\n                    value=\"Male\"\r\n                    control={<Radio\r\n                      variant=\"filled\" />}\r\n                    label=\"Male\"\r\n                    labelPlacement=\"end\"\r\n                    defaultValue={props.store.gender}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                    labelPlacement=\"end\"\r\n                    variant=\"filled\" defaultValue={props.store.gender}\r\n                  />\r\n                </RadioGroup>\r\n              }\r\n              name=\"gender\"\r\n              fullWidth\r\n              defaultValue={props.store.gender}\r\n              inputRef={register}\r\n              variant=\"filled\"\r\n              control={control}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"contactNo\"\r\n              name=\"contactNo\"\r\n              label=\"Contact No\"\r\n              fullWidth\r\n              autoComplete=\"contactNo\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.contactNo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" >Address:</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n\r\n            <TextField\r\n              id=\"address.address1\"\r\n              name=\"address1\"\r\n              label=\"Address line 1\"\r\n              fullWidth\r\n              autoComplete=\"shipping address1\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address1}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"address.address2\"\r\n              name=\"address2\"\r\n              label=\"Address line 2\"\r\n              fullWidth\r\n              autoComplete=\"shipping address2\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address2}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.city\"\r\n              name=\"city\"\r\n              label=\"City\"\r\n              fullWidth\r\n              autoComplete=\"shipping address city\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.city}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.zip\"\r\n              name=\"zipCode\"\r\n              label=\"Zip / Postal code\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-code\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.zipCode}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField editable={false}\r\n              required\r\n              id=\"address.country\"\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-country\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.country}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}><Typography variant=\"h6\" >Parent/Guardian:</Typography></Grid>\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"fathersName\"\r\n              name=\"fathersName\"\r\n              label=\"Father's Name\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"fathersOccupation\"\r\n              name=\"fathersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"mothersName\"\r\n              name=\"mothersName\"\r\n              label=\"Mother's Name\"\r\n              fullWidth\r\n              autoComplete=\"mothersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"mothersOccupation\"\r\n              name=\"mothersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"mothersOccupation\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersOccupation}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"parentCivilStatus\"\r\n              name=\"parentCivilStatus\"\r\n              label=\"Parent CivilStatus\"\r\n              fullWidth\r\n              autoComplete=\"parentCivilStatus\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.parentCivilStatus}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} />\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"guardianName\"\r\n              name=\"guardianName\"\r\n              label=\"Guardian Name\"\r\n              fullWidth\r\n              autoComplete=\"guardianName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.guardianName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <BUTTONS />\r\n\r\n      </form>\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\nexport default StudentDetailHtml;","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"student\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlDetailsPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport  const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport  const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function StudentService  () {\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport StudentDetailHtml from './StudentDetailHtml.js';\r\nimport { save, getOptions } from '../../api/student/StudentService'\r\nimport { selectSelectedItem, setOptionsList, setPageableEntity, resetSelectedItem } from '../../api/student/StudentSlice';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function StudentDetailComponent(props) {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log('[StudentDetailComponent.onSubmitForm] data==>', data)\r\n\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        props.history.push(PAGE_URL.STUDENT_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'StudentDetailComponent.onSubmitForm', 'StudentService.save'));\r\n  }\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[StudentDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    setMessage(`Loading. Please wait...`);\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage(``)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'StudentDetailComponent.onRetrieve', 'StudentService.getOptions'));\r\n  }\r\n\r\n  return (\r\n    <StudentDetailHtml\r\n      store={selectedItem}\r\n      message={message}\r\n      onSubmitForm={onSubmitForm}\r\n      onRetrieve={onRetrieve}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/student/StudentService'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/student/StudentSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function StudentListComponent(props) {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [currPageable]);\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.retrieve', 'StudentService.getList'))\r\n\r\n\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.doDelete', 'StudentService.deleteItem'))\r\n  }\r\n\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  const cols = [\r\n    {\r\n      field: 'studentId',\r\n      headerName: 'Student ID',\r\n    },\r\n    {\r\n      field: 'lrn',\r\n      headerName: 'LRN',\r\n    },\r\n    {\r\n      headerName: 'Name',\r\n      render: function (row) {\r\n        return <>\r\n          {row.firstName} {row.lastName}\r\n        </>\r\n      }\r\n    },\r\n    {\r\n      field: 'gender',\r\n      headerName: 'Gender',\r\n    },\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return <>\r\n          {row.level && row.level.description}\r\n        </>\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Student List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"school\";\r\nconst sort = \"schoolYear,name\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\n\r\nexport default function SchoolService() {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport TitleComponent from '../common/TitleComponent'\r\n\r\nimport { save, getOptions } from '../../api/school/SchoolService'\r\nimport {\r\n  selectSelectedItem,\r\n  setSelectedItem,\r\n  setPageableEntity,\r\n  updateSelectedItem,\r\n  blankSelectedItem,\r\n  setOptionsList,\r\n  resetSelectedItem,\r\n} from '../../api/school/SchoolSlice'\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function SchoolDetailComponent(props) {\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { control, register, handleSubmit } = useForm()\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...')\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT)\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      `[SchoolDetailComponent.useEffect] status=${status}, selectedItem==>`,\r\n      selectedItem\r\n    )\r\n\r\n    if (selectedItem.currentPeriod == null) {\r\n      dispatch(\r\n        updateSelectedItem({\r\n          currentPeriod: { id: '' },\r\n        })\r\n      )\r\n    }\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(setSelectedItem(blankSelectedItem))\r\n      }\r\n      doRetrieve()\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem])\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n\r\n    setMessage('Loading. Please wait...')\r\n\r\n    getOptions().then((response) => {\r\n      dispatch(setOptionsList(response.data.listService))\r\n      setMessage('')\r\n    })\r\n      .catch((error) =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.RETRIEVE_ERROR,\r\n          'SchoolDetailComponent.doRetrieve',\r\n          'SchoolService.getOptions'\r\n        )\r\n      )\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log(\r\n      `[SchoolDetailComponent.onSubmitForm] data = `, data\r\n    )\r\n    setMessage('Saving...')\r\n    console.log(\r\n      `[SchoolDetailComponent.onSubmitForm] message = `, message\r\n    )\r\n    save(data)\r\n      .then((response) => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.SCHOOL_LIST)\r\n      })\r\n      .catch((error) =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.SAVE_ERROR,\r\n          'SchoolDetailComponent.save',\r\n          'SchoolService.save'\r\n        )\r\n      )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(\r\n        `[SchoolDetailComponent.render] selectedItem ==> `,\r\n        selectedItem\r\n      )}\r\n      <TitleComponent>School Detail</TitleComponent>\r\n      {message && <Alert severity='info'>{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(onSubmitForm)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          type='hidden'\r\n          name='id'\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id='name'\r\n              name='name'\r\n              label='Name'\r\n              fullWidth\r\n              autoComplete='school-name'\r\n              autoFocus\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id='schoolYear'\r\n              name='schoolYear'\r\n              label='School Year'\r\n              fullWidth\r\n              autoComplete='school-schoolYear'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.schoolYear}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"currentPeriod\"\r\n                  required\r\n                  select\r\n                  label=\"Current Period\"\r\n                  fullWidth\r\n                  autoComplete=\"school-currentPeriod\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.periodList.map(({ id, description }) => (\r\n                    <MenuItem key={id} value={id}>{description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"currentPeriod.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.currentPeriod.id}\r\n              options={selectedItem.optionsList.periodList}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id='logo'\r\n              name='logo'\r\n              label='Logo'\r\n              fullWidth\r\n              autoComplete='school-logo'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.logo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id='address'\r\n              name='address'\r\n              label='Address'\r\n              fullWidth\r\n              autoComplete='school-address'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.address}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport { deleteItem, getList } from '../../api/school/SchoolService'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem, } from '../../api/school/SchoolSlice'\r\nimport TitleComponent from '../common/TitleComponent'\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function SchoolListComponent(props) {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n  const dispatch = useDispatch()\r\n  const currPageableSchools = useSelector(selectPageable)\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [])\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage).then(\r\n      ({ data }) =>\r\n        dispatch(\r\n          setPageable({\r\n            INIT_STATUS: INIT_STATUS.LOAD,\r\n            list: data.pagingList.content,\r\n            searchValue: searchValue,\r\n            paging: {\r\n              rowsPerPage: data.pagingList.size,\r\n              currentPage: data.pagingList.pageable.pageNumber,\r\n              totalElements: data.pagingList.totalElements,\r\n              totalPage: data.pagingList.totalPage,\r\n            },\r\n          })\r\n        )).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n\r\n\r\n  const doRetrieve = () =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: currPageableSchools.paging,\r\n    })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}`)\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}/-1`)\r\n  }\r\n\r\n  const doDelete = (id) =>\r\n    deleteItem(id)\r\n      .then(doRetrieve())\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n  const doHandleChangePage = (e, newPage) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        currentPage: newPage,\r\n      },\r\n    })\r\n\r\n  const doHandleChangeRowsPerPage = (e) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0,\r\n      },\r\n    })\r\n\r\n  const doSearch = (searchValue) =>\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n      },\r\n    })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n    },\r\n    {\r\n      field: 'schoolYear',\r\n      headerName: 'School Year',\r\n    },\r\n    {\r\n      field: 'logo',\r\n      headerName: 'Logo',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Schools</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageableSchools}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst SubTitleComponent = (props) => {\r\n return (\r\n  <>\r\n   <Box>\r\n    <Typography variant=\"h5\">{props.children}</Typography>\r\n   </Box>\r\n  </>\r\n )\r\n}\r\n\r\nexport default SubTitleComponent","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead } from '@material-ui/core';\r\n\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\n\r\nimport { PAGE_URL, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\nimport PaginationComponent from '../common/PaginationComponent';\r\nimport SubTitleComponent from '../common/SubTitleComponent';\r\n\r\nconst SearchResultsHtmlComponent = (props) => {\r\n const { list, paging } = props.store;\r\n const history = useHistory();\r\n\r\n\r\n const doEditUser = id => history.push(PAGE_URL.STUDENT_DETAIL_URL + '/' + id)\r\n\r\n const doShowPayables = (row) => props.doPayables(row.id, row.school.currentPeriod.id)\r\n\r\n const CustomTableHead = () => {\r\n  return (<>\r\n   <TableHead>\r\n    <StyledTableHeadRow>\r\n     <StyledTableHeadCell>Student ID</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Name</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Grade Level</StyledTableHeadCell>\r\n     <StyledTableHeadCell align=\"right\">\r\n      <IconButton aria-label=\"add\" onClick={() => props.doEdit(-1)}>\r\n       <AddIcon fontSize=\"large\" />\r\n      </IconButton>\r\n     </StyledTableHeadCell>\r\n    </StyledTableHeadRow>\r\n   </TableHead>\r\n  </>)\r\n }\r\n const CustomTableBody = () => {\r\n  return (<>\r\n   <TableBody>\r\n    {list.map(row => (\r\n     <StyledTableRow key={row.id}>\r\n      <TableCell variant=\"head\">{row.studentId}</TableCell>\r\n      <TableCell>{row.firstName} {row.lastName}</TableCell>\r\n      <TableCell>{row.level.description}</TableCell>\r\n      <TableCell align=\"right\">\r\n       <IconButton aria-label=\"payment\" onClick={() => doShowPayables(row)}>\r\n        <AccountBalanceWalletIcon fontSize=\"large\" />\r\n       </IconButton>\r\n       <IconButton aria-label=\"edit\" onClick={() => doEditUser(row.id)}>\r\n        <EditIcon fontSize=\"large\" />\r\n       </IconButton>\r\n      </TableCell>\r\n     </StyledTableRow>\r\n    ))}\r\n   </TableBody>\r\n  </>)\r\n }\r\n\r\n return (\r\n  <>\r\n   <SubTitleComponent>Search Results</SubTitleComponent>\r\n   {/* <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   /> */}\r\n\r\n   <TableContainer component={Paper}>\r\n    <Table>\r\n     <CustomTableHead />\r\n     <CustomTableBody />\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   />\r\n  </>\r\n )\r\n}\r\n\r\nexport default SearchResultsHtmlComponent;","import React from 'react';\r\nimport { Grid, MenuItem, TextField } from \"@material-ui/core\";\r\n\r\nexport default function SelectGrid({ sm, name, label, options, ...rest }) {\r\n return (<>\r\n  <Grid item xs={12} sm={sm}>\r\n   <TextField id={name}\r\n    select\r\n    name={name}\r\n    label={label}\r\n    variant=\"filled\"\r\n    fullWidth\r\n    InputLabelProps={{ shrink: true }}\r\n    autoComplete={label + \"-\" + name}\r\n    {...rest}\r\n   >\r\n    {options.map(({ id, description }) => (\r\n     <MenuItem key={id} value={id}>{description}</MenuItem>\r\n    ))}\r\n   </TextField>\r\n  </Grid>\r\n </>)\r\n}","\r\nimport React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Box, Paper, Grid, TextField, Table, TableContainer, TableHead, TableCell, TableBody, Button, InputAdornment } from \"@material-ui/core\"\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport SubTitleComponent from '../common/SubTitleComponent'\r\nimport SelectGrid from '../common/SelectGrid'\r\n\r\nconst { StyledTableRow, StyledTableHeadRow, StyledTableHeadCell, INIT_STATUS } = require(\"../../api/Utils\")\r\n\r\n\r\nconst PayablesHtmlComponent = (props) => {\r\n  const { register, handleSubmit, reset } = useForm()\r\n\r\n  const [total, setTotal] = useState(0)\r\n  const [payables, setPayables] = useState({})\r\n  const [currentState, setCurrentState] = useState({\r\n    period: {\r\n      id: props.store.periodId\r\n    }\r\n  })\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[PayablesHtmlComponent.changeSelectState] name=${name}, value=${value}`)\r\n    setCurrentState({\r\n      [name]: { id: value }\r\n    })\r\n    console.log(`[PayablesHtmlComponent.changeSelectState] currentState=>`, currentState)\r\n  }\r\n\r\n\r\n  const changeSelectStateByPeriod = (e) => {\r\n    changeSelectState(e)\r\n    const { value } = e.target\r\n    // props.doUpdateCurrPageable({\r\n    //   ...props.store.studentPayables,\r\n    //   studentPayables: {\r\n    //     payables: []\r\n    //   },\r\n    //   searchFlag: true,\r\n    //   payablesFlag: false,\r\n    // })\r\n    props.doPayables(props.store.entity.id, value)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(`[PayablesHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n    console.log(`[PayablesHtmlComponent.useEffect] currentState => `, currentState)\r\n    console.log(`[PayablesHtmlComponent.useEffect] props.store.periodId => `, props.store.periodId)\r\n    if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES_RESET) {\r\n      resetPayables();\r\n      props.doUpdateCurrPageable({\r\n        INIT_STATUS: INIT_STATUS.DONE\r\n      })\r\n      // setCurrentState({\r\n      //   period: { id: props.store.periodId }\r\n      // })\r\n\r\n      reset(props.store);\r\n    }\r\n  }, [props.store])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  const resetPayables = () => {\r\n    console.log(`[PayablesHtmlComponent.resetPayables] payables => `, payables);\r\n    setTotal(0);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let data = {\r\n      ...payables\r\n    }\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        data[`payables[${i}].payment`] = formatter.format(0);\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setPayables(data);\r\n  }\r\n\r\n  const onPaymentBlur = (e) => {\r\n    const el = e.target\r\n    let value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    el.value = formatter.format(value);\r\n\r\n    console.log(`[PayablesHtmlComponent.onPaymentBlur] value = ${value}, payables => `, payables)\r\n    value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    let numValue = Number(value);\r\n    let data = {\r\n      ...payables,\r\n    };\r\n\r\n    data[el.name] = numValue;\r\n    setPayables(data);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let total = 0;\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        total = total + payment;\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setTotal(formatter.format(total));\r\n    console.log(`[PayablesHtmlComponent.onPaymentBlur] total = ${total}, payables => `, payables)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[PayablesHtmlComponent.return] props.store => `, props.store)}\r\n      <SubTitleComponent>Student Information</SubTitleComponent>\r\n      <Paper elevation={3} variant=\"elevation\" >\r\n        <Box py={3} px={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>Student Id</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.studentId}</Grid>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.firstName + ' ' + props.store.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n      <form onSubmit={handleSubmit(props.doShowSaveBillingDialog)}>\r\n        <TextField\r\n          type=\"hidden\"\r\n          name=\"id\"\r\n          value={props.store.entity.id}\r\n          inputRef={register}\r\n        />\r\n        <SubTitleComponent>Payables</SubTitleComponent>\r\n        <Box py={3} px={3}>\r\n          <Grid container spacing={3}>\r\n            <SelectGrid sm={3} required name=\"period\" label=\"Period\"\r\n              value={currentState.period.id}\r\n              options={props.store.optionsList.periodList}\r\n              onChange={e => changeSelectStateByPeriod(e)} />\r\n          </Grid>\r\n        </Box>\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Paid</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }}>Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.studentPayables.payables.map((row, i) => (\r\n                  < StyledTableRow key={row.id}>\r\n                    <TableCell>{row.aps.label}</TableCell>\r\n\r\n                    {row.code === 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">({row.payment})</TableCell>\r\n                      </>\r\n                    }\r\n\r\n                    {row.code !== 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\">P{row.amount.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.paid.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.balance.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        }\r\n                        )}</ TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].student.id`}\r\n                            value={props.store.entity.id}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].balance`}\r\n                            value={row.balance}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].order`}\r\n                            value={i}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].code`}\r\n                            value={row.code}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].amount`}\r\n                            value={row.amount}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].name`}\r\n                            value={row.name}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].paid`}\r\n                            value={row.paid}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField id={row.code}\r\n                            type=\"currency\"\r\n                            name={`payables[${i}].payment`}\r\n                            onBlur={e => onPaymentBlur(e)}\r\n                            fullWidth\r\n                            inputRef={register}\r\n                            // disabled={row.balance === 0}\r\n                            defaultValue={row.payment}\r\n                            variant=\"filled\"\r\n                            InputProps={{\r\n                              startAdornment: <InputAdornment position=\"start\">P</InputAdornment>,\r\n                            }} />\r\n\r\n                        </TableCell>\r\n                      </>}\r\n                  </StyledTableRow>\r\n                ))\r\n              }\r\n              <StyledTableRow>\r\n                <TableCell colSpan=\"4\" align=\"right\">Total</TableCell>\r\n                <TableCell align=\"right\">{total}</TableCell>\r\n              </StyledTableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box pt={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={10}>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save Payment</Button>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Reciept</Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Box>\r\n        <SubTitleComponent>Invoice</SubTitleComponent>\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Date</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Invoice #</StyledTableHeadCell>\r\n                {\r\n                  props.store.billingByInvoice.accountPayablesSettings.map(({ id, label }) => (\r\n                    <StyledTableHeadCell key={id} variant=\"head\" align=\"right\">{label}</StyledTableHeadCell>\r\n                  ))\r\n                }\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.billingByInvoice.list.map(({ invoiceNo, invoiceDate, payablesMap }) => (\r\n                  < StyledTableRow >\r\n                    <TableCell>{moment(invoiceDate).format('lll')}</TableCell>\r\n                    <TableCell>{invoiceNo}</TableCell>\r\n                    {\r\n                      props.store.billingByInvoice.accountPayablesSettings.map(({ id }) => (\r\n                        <TableCell key={id} align=\"right\">{(payablesMap[id] ? payablesMap[id].payment : 0).toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        }\r\n                        )}</TableCell>\r\n                      ))\r\n                    }\r\n                  </ StyledTableRow>\r\n                ))\r\n              }\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\nexport default PayablesHtmlComponent;","import React, { useEffect } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport { Box, Button, Grid, MenuItem, Paper, TextField, Typography, Select } from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { INIT_STATUS } from '../../api/Utils'\r\nimport SearchResultsHtmlComponent from './SearchResultsHtmlComponent';\r\nimport PayablesHtmlComponent from './PayablesHtmlComponent';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function BillingHtmlComponent(props) {\r\n        const { control, register, handleSubmit, reset } = useForm();\r\n\r\n        useEffect(() => {\r\n                console.log(`[BillingHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n                // if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES) {\r\n                //         props.doPayables();\r\n                // } else if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                //         reset(props.store)\r\n                // }\r\n                if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                        reset(props.store)\r\n                }\r\n        }, [props.store])\r\n\r\n        return (\r\n                <>\r\n                        {console.log(`[BillingHtmlComponent.return], INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)}\r\n                        <TitleComponent>Payment</TitleComponent>\r\n\r\n                        <form onSubmit={handleSubmit(props.doRetrieve)}>\r\n                                <Paper elevation={3} variant=\"elevation\" >\r\n                                        <Box my={3} mx={3}>\r\n                                                <Grid container spacing={3}>\r\n                                                        <Grid item xs={12} sm={2}><Typography variant=\"h6\">Search By</Typography></Grid>\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Controller\r\n                                                                        as={<Select fullWidth >\r\n                                                                                {props.store.optionsList.billingSearchBy.map(m => (\r\n                                                                                        <MenuItem key={m.id} value={m.value}>\r\n                                                                                                {m.label}\r\n                                                                                        </MenuItem>\r\n                                                                                ))}\r\n                                                                        </Select>}\r\n                                                                        required\r\n                                                                        name=\"searchBy\"\r\n                                                                        control={control}\r\n                                                                        defaultValue={props.store.searchBy}\r\n                                                                        options={props.store.optionsList.billingSearchBy}\r\n                                                                />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                                <TextField id=\"searchValue\"\r\n                                                                        required\r\n                                                                        name=\"searchValue\"\r\n                                                                        // label=\"Search Value\"\r\n                                                                        fullWidth\r\n                                                                        autoComplete=\"billing-search-value\"\r\n                                                                        inputRef={register}\r\n                                                                        defaultValue={props.store.searchValue}\r\n                                                                />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SearchIcon />}>Search</Button>\r\n                                                        </Grid>\r\n                                                </Grid>\r\n                                        </Box>\r\n                                </Paper>\r\n                        </form>\r\n                        {props.store.searchFlag &&\r\n                                <SearchResultsHtmlComponent\r\n                                        store={props.store}\r\n                                        onChangePage={props.onChangePage}\r\n                                        onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n                                        doPayables={props.doPayables}\r\n                                        doUpdateCurrPageable={props.doUpdateCurrPageable}\r\n                                />}\r\n                        {props.store.payablesFlag &&\r\n                                <PayablesHtmlComponent\r\n                                        register={register}\r\n                                        handleSubmit={handleSubmit}\r\n                                        doShowSaveBillingDialog={props.doShowSaveConfirmDialog}\r\n                                        // doSavePayables={props.doSavePayables}\r\n                                        store={props.store}\r\n                                        doUpdateCurrPageable={props.doUpdateCurrPageable}\r\n                                        doPayables={props.doPayables} />}\r\n                </>\r\n        )\r\n}","\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nimport { formatter, INIT_STATUS, StyledTableCell, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\n\r\nimport { useAuth } from '../../providers/AuthenticationProvider';\r\n\r\nexport default function SavePayablesConfimationHtml(props) {\r\n\r\n  const [userObj] = useAuth();\r\n  const { reset } = useForm(props.confirmStore);\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(`[SavePayablesConfimationHtml.useEffect] confirmStore=>`, props.confirmStore)\r\n    if (props.confirmStore.INIT_STATUS === INIT_STATUS.RESET) {\r\n      reset(props.confirmStore);\r\n    }\r\n    props.confirmStore.INIT_STATUS = INIT_STATUS.DONE;\r\n  }, [props.confirmStore])\r\n\r\n  const ConfirmPage = () => {\r\n    return (<>\r\n      {/* <div className={classes.root}>\r\n        <table width=\"100%\" border=\"0\" >\r\n          <tr >\r\n            <th align=\"right\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"right\" width=\"20%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr >\r\n            <th align=\"right\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"right\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n          </tr>\r\n        </table>\r\n      </div> */}\r\n      <Box pb={3}>\r\n        <Paper elevation={3} variant=\"elevation\" >\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}></Grid>\r\n            <Grid item xs={12} sm={4}></Grid>\r\n\r\n            <Grid item xs={12} sm={2}>Student Id</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.studentId}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Box>\r\n      <TableContainer component={Paper} elevation={3} variant=\"elevation\">\r\n        {props.confirmStore.payables.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payables.map((row) => <>\r\n                {row.payment > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.payment)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell>\r\n                  {props.confirmStore.balanceTotal > 0 &&\r\n                    <Typography variant=\"h6\" color=\"textPrimary\">Remaining balance is {formatter.format(props.confirmStore.balanceTotal)}</Typography>\r\n                  }\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={3}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n              {props.confirmStore.invoiceNo && <>\r\n                <StyledTableRow>\r\n                  <StyledTableCell align=\"right\" colSpan={1}><Typography variant=\"h4\" color=\"textPrimary\">Invoice No: </Typography></StyledTableCell>\r\n                  <StyledTableCell align=\"left\" colSpan={2}>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n\r\n                  </StyledTableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n                  </TableCell>\r\n                </ StyledTableRow>\r\n              </>}\r\n            </TableBody>\r\n          </Table>\r\n        }\r\n      </TableContainer>\r\n    </>);\r\n  }\r\n\r\n  const PrintableInvoicePage = () => {\r\n    return (<>\r\n      <div ref={componentRef} className=\"root\">\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userObj.schoolName}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userObj.schoolAddress}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">&nbsp;</th>\r\n          </tr>\r\n\r\n          {/* <th align=\"left\">{(\"0000000000\" + props.confirmStore.invoiceNo).slice(-10)}</th> */}\r\n          {/* <tr>\r\n            <th align=\"left\" width=\"25%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n            <th align=\"left\" width=\"25%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr> */}\r\n\r\n          <tr>\r\n            <th align=\"left\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"left\" width=\"20%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"left\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n            <th align=\"left\"></th>\r\n            <th align=\"left\"></th>\r\n          </tr>\r\n        </table>\r\n        <br />\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th></th>\r\n            <th width=\"25%\" align=\"right\">Total</th>\r\n            <th width=\"25%\" align=\"right\">Balance</th>\r\n            <th width=\"25%\" align=\"right\">Amount Paid</th>\r\n          </tr>\r\n          {props.confirmStore.payablesByInvoiceNo.map((row) => <>\r\n            {row.paid != 0 &&\r\n              <tr>\r\n                <td align=\"left\">{row.name}</td>\r\n                <td align=\"right\">{formatter.format(row.amount)}</td>\r\n                <td align=\"right\">{formatter.format(row.balance)}</td>\r\n                <td align=\"right\">{formatter.format(row.paid)}</td>\r\n              </tr>\r\n            }\r\n          </>\r\n          )}\r\n          <tr>\r\n            <td></td>\r\n            <td colSpan={4} align=\"right\"><h3>Total Amount Paid: {formatter.format(props.confirmStore.paymentTotal)}</h3></td>\r\n          </tr>\r\n        </table>\r\n        {/* <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Student Name:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName} </TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>Invoice Date:</>}</TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>{props.confirmStore.invoiceDate}</>}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Student Id:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.studentId}</TableCell>\r\n              <TableCell>Level:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.level.description}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n        {props.confirmStore.payablesByInvoiceNo.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Invoice</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount Paid</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payablesByInvoiceNo.map((row, i) => <>\r\n                {row.paid > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.paid)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Invoice No: </Typography>\r\n                  <Typography variant=\"h4\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount paid is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        } */}\r\n      </div>\r\n    </>);\r\n  }\r\n  return (<>\r\n    {console.log(`[SavePayablesConfimationHtml.return] confirmStore=>`, props.confirmStore)}\r\n    <Dialog fullWidth=\"true\" maxWidth=\"md\"\r\n      open={props.open}\r\n      onClose={props.closeDialog}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{!props.confirmStore.invoiceNo && <Alert severity=\"info\" align=\"right\">{props.title}</Alert>}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {!props.confirmStore.invoiceNo && <ConfirmPage />}\r\n          {props.confirmStore.invoiceNo && <PrintableInvoicePage />}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button className=\"not-printable\" onClick={handlePrint} variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            <Button className=\"not-printable\" onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />}>Close</Button>\r\n          </>\r\n        }\r\n        {!props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />} > Cancel</Button>\r\n            <Button onClick={props.saveDialog} variant=\"contained\" color=\"primary\" autoFocus startIcon={<SaveIcon />} > Save</Button>\r\n          </>\r\n        }\r\n      </DialogActions>\r\n    </Dialog>\r\n  </>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport { ERROR_CODE, formatter, INIT_STATUS } from '../../api/Utils'\r\n\r\nimport BillingHtmlComponent from './BillingHtmlComponent';\r\nimport SavePayablesConfimationHtml from './SavePayablesConfimationHtml';\r\n\r\nimport { getListBy, getStudentPayablesByPeriod, save } from '../../api/billing/BillingService'\r\nimport { optionsList, selectPageable, setPageable, updatePageable } from '../../api/billing/BillingSlice';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function BillingComponent() {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    vertical: 'top',\r\n    horizontal: 'center'\r\n  })\r\n  const { message, open, vertical, horizontal } = snackbar\r\n\r\n\r\n  const [confirmStore, setConfirmStore] = useState({\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    entity: {\r\n      studentId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      level: {\r\n        id: '',\r\n        value: '',\r\n        description: ''\r\n      }\r\n    },\r\n    payables: [],\r\n    payablesByInvoiceNo: [],\r\n    open: false\r\n  })\r\n\r\n\r\n  const doInitFormData = data => {\r\n    //data.optionsList = optionsList;\r\n\r\n    if (!data.currentPage) {\r\n      data.paging = {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0\r\n      };\r\n    }\r\n\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n\r\n    if (!data.studentPayables) {\r\n      data.studentPayables = {\r\n        invoiceNo: '',\r\n        payables: [],\r\n        payablesByInvoiceNo: []\r\n      };\r\n    }\r\n    if (!data.studentPayables.payables) {\r\n      data.studentPayables.payables = [];\r\n    }\r\n    if (!data.studentPayables.payablesByInvoiceNo) {\r\n      data.studentPayables.payablesByInvoiceNo = [];\r\n    }\r\n  }\r\n\r\n  const doRetrieve = (data) => {\r\n    console.log(`[BillingComponent.doRetrieve] data==>`, data)\r\n    getListBy(data.searchBy, data.searchValue, currPageable.paging.currentPage, currPageable.paging.rowsPerPage)\r\n      .then(response => {\r\n        console.log(`[BillingComponent.doRetrieve BillingService.getListBy] response==>`, response)\r\n        let formData = {\r\n          ...currPageable,\r\n          INIT_STATUS: INIT_STATUS.RESET,\r\n          searchValue: data.searchValue,\r\n          searchBy: data.searchBy,\r\n          searchFlag: true,\r\n          payablesFlag: false,\r\n          list: response.data.content,\r\n          optionsList: optionsList,\r\n          paging: {\r\n            rowsPerPage: response.data.size,\r\n            totalElements: response.data.totalElements,\r\n            currentPage: response.data.pageable.pageNumber,\r\n          }\r\n        }\r\n        doInitFormData(formData);\r\n        dispatch(setPageable(formData))\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doRetrieve', 'BillingService.getListBy'));\r\n  }\r\n\r\n  const onChangeRowsPerPage = (e) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    let data = {\r\n      paging: paging\r\n    }\r\n    doUpdateCurrPageable(data)\r\n\r\n    doRetrieve();\r\n  }\r\n  const onChangePage = (e, newPage) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.currentPage = newPage\r\n\r\n    let data = {\r\n      paging: paging\r\n    }\r\n    doUpdateCurrPageable(data)\r\n\r\n    doRetrieve({\r\n      searchBy: data.searchBy,\r\n      searchValue: data.searchValue,\r\n      currentPage: data.paging.currentPage,\r\n      rowsPerPage: data.paging.rowsPerPage\r\n    });\r\n  }\r\n\r\n  const doUpdateCurrPageable = (formData) => {\r\n    dispatch(updatePageable(formData))\r\n  }\r\n  const doPayables = (id, periodId) => {\r\n    console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] id=${id}, periodId=${periodId}`)\r\n    getStudentPayablesByPeriod(id, periodId).then(response => {\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] response==>`, response)\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] response.data.optionsList==>`, response.data.optionsList)\r\n      let payables = response.data.studentPayables.payables;\r\n      payables.map((row) => {\r\n        // let value = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n        row.payment = formatter.format(row.payment);\r\n        return row\r\n      });\r\n\r\n      let optionsListTemp = {\r\n        ...response.data.optionsList,\r\n        ...optionsList\r\n      }\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] optionsListTemp==>`, optionsListTemp)\r\n      let formData = {\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        entity: response.data.student,\r\n        periodId: periodId,\r\n        studentPayables: {\r\n          ...response.data.studentPayables,\r\n          payables: payables\r\n        },\r\n        billingByInvoice: {\r\n          ...response.data.billingByInvoice\r\n        },\r\n        searchFlag: false,\r\n        payablesFlag: true\r\n      }\r\n\r\n      doInitFormData(formData);\r\n      formData.optionsList = optionsListTemp\r\n\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] formData==>`, formData)\r\n      doUpdateCurrPageable(formData)\r\n\r\n\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doPayables', 'BillingService.getStudentPayables'));\r\n  }\r\n  const doShowSaveConfirmDialog = (data) => {\r\n    console.log(`[BillingComponent.doShowSaveConfirmDialog] data==>`, data);\r\n    let paymentTotal = 0;\r\n    let balanceTotal = 0;\r\n    data.payables.map((row) => {\r\n      let balance = row.balance ? row.balance.replaceAll(',', '') : 0;\r\n      let payment = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n\r\n      row.balance = Number(balance);\r\n      row.payment = Number(payment);\r\n\r\n      balanceTotal += row.balance;\r\n      paymentTotal += row.payment;\r\n      return row\r\n    });\r\n\r\n    // doOpenSnackBar({\r\n    //   message: `Total amount is ${paymentTotal}`\r\n    // })\r\n\r\n    if (Number(paymentTotal) == 0) {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 1 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n\r\n      doOpenSnackBar({\r\n        message: `Total amount is ${paymentTotal}`\r\n      })\r\n    } else {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 2 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n      let confirmStoreTemp = {\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        open: true,\r\n        entity: currPageable.entity,\r\n        payables: data.payables,\r\n        payablesByInvoiceNo: [],\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: balanceTotal - paymentTotal,\r\n        invoiceNo: '',\r\n        periodId: currPageable.periodId\r\n      }\r\n      doInitConfirmStore(confirmStoreTemp);\r\n\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] confirmStoreTemp==>`, confirmStoreTemp);\r\n      setConfirmStore(confirmStoreTemp);\r\n    }\r\n\r\n  }\r\n  const doConfirmSavePayables = () => {\r\n    console.log(`[BillingComponent.doConfirmSavePayables] confirmStore==>`, confirmStore);\r\n    doSavePayables(confirmStore);\r\n  }\r\n\r\n  const doSavePayables = (data) => {\r\n    console.log(`[BillingComponent.doSavePayables] data==>`, data);\r\n\r\n    save(data.payables, data.entity.id, data.periodId).then(response => {\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] response==>`, response)\r\n      let formData = {\r\n        INIT_STATUS: INIT_STATUS.PAYABLES_RESET,\r\n        entity: response.data.student,\r\n        studentPayables: response.data.studentPayables,\r\n        searchFlag: false,\r\n        payablesFlag: true,\r\n      }\r\n\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 1 formData==>`, formData)\r\n      doInitFormData(formData);\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 2 formData==>`, formData)\r\n      dispatch(updatePageable(formData));\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 3 formData==>`, formData)\r\n      let payablesByInvoiceNo = [\r\n        //...response.data.studentPayables.payablesByInvoiceNo\r\n      ]\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 0 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n      for (const row of response.data.studentPayables.payablesByInvoiceNo) {\r\n        let temp = {\r\n          ...row\r\n        }\r\n        payablesByInvoiceNo.push(temp)\r\n      }\r\n\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 1 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      let paymentTotal = 0;\r\n      payablesByInvoiceNo.map((row) => {\r\n        row.paid = Number(row.paid);\r\n        paymentTotal += row.paid;\r\n        return row\r\n      });\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 2 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      setConfirmStore({\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        payables: [],\r\n        invoiceDate: moment(response.data.studentPayables.invoiceDate).format('lll'),\r\n        invoiceNo: response.data.studentPayables.invoiceNo,\r\n        payablesByInvoiceNo: payablesByInvoiceNo,\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: 0\r\n      });\r\n\r\n      doUpdateCurrPageable({\r\n        billingByInvoice: {\r\n          ...response.data.billingByInvoice\r\n        },\r\n      })\r\n\r\n      doOpenSnackBar({\r\n        message: 'Payables saved successfully!'\r\n      })\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doSavePayables', 'BillingService.save'));\r\n  }\r\n\r\n  const doCloseSaveBillingDialog = () => {\r\n    let confirmStoreTemp = {\r\n      ...confirmStore,\r\n      open: false\r\n    }\r\n    setConfirmStore(confirmStoreTemp);\r\n  }\r\n\r\n  const doInitConfirmStore = data => {\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n    if (!data.payables) {\r\n      data.payables = [];\r\n    }\r\n  }\r\n\r\n  const doOpenSnackBar = (state) => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: true,\r\n      ...state\r\n    })\r\n  }\r\n  const doCloseSnackbar = () => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: false,\r\n      message: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BillingHtmlComponent\r\n        store={currPageable}\r\n        doRetrieve={doRetrieve}\r\n        doPayables={doPayables}\r\n        onChangePage={onChangePage}\r\n        onChangeRowsPerPage={onChangeRowsPerPage}\r\n        doShowSaveConfirmDialog={doShowSaveConfirmDialog}\r\n        doSavePayables={doSavePayables}\r\n        doUpdateCurrPageable={doUpdateCurrPageable}\r\n      />\r\n      <SavePayablesConfimationHtml\r\n        confirmStore={confirmStore}\r\n        title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        closeDialog={doCloseSaveBillingDialog}\r\n        saveDialog={doConfirmSavePayables} />\r\n      {/* <SaveBillingDialog title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        <SavePayablesConfimationHtml confirmStore={confirmStore}/>\r\n      </SaveBillingDialog> */}\r\n\r\n\r\n      <Snackbar open={open}\r\n        autoHideDuration={6000}\r\n        onClose={doCloseSnackbar}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n      >\r\n        <Alert onClose={doCloseSnackbar} severity=\"success\">\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from \"../Utils\";\r\n\r\nexport const getListBy = (by, searchValue, page, pageSize) => axios.get(`${API_URL_BASE}billing/search/${by}?searchValue=${searchValue}&page=${page}&size=${pageSize}`)\r\n\r\nexport const getStudentPayables = (id) => axios.get(`${API_URL_BASE}billing/payables/${id}`)\r\nexport const getStudentPayablesByPeriod = (id, periodId) => axios.get(`${API_URL_BASE}billing/payables/${id}/period/${periodId}`)\r\n\r\nexport const save = (data, id, periodId) => axios.post(`${Utils.urlSavePattern('billing')}/${id}/period/${periodId}`, data)\r\n\r\nexport default function BillingService() {\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from \"../Utils\";\r\n\r\n\r\nexport const ENTITY = \"accountPayablesSettings\";\r\nconst sort = \"priority,description,amount\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport const getActiveList = (period, searchValue, page, pageSize) => axios.get(`${API_URL_BASE + ENTITY + \"/active/\"}${period}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`)\r\nexport const getApplyToAllList = () => axios.get(`${API_URL_BASE + ENTITY + \"/applyToAllList\"}`)\r\n\r\nexport default function AccountPayablesSettingsService() {\r\n}\r\n\r\n// class AccountPayablesSettingsService {\r\n\r\n//  getList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description, amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  get = (id) => {\r\n//   const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  delete = (id) => {\r\n//   const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\r\n//   return axios.delete(theurl);\r\n//  }\r\n//  save = (data) => {\r\n//   const theurl = `${Utils.urlSavePattern(ENTITY)}`\r\n//   return axios.post(theurl, data);\r\n//  }\r\n//  getActiveList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/active\"}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  getApplyToAllList = () => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/applyToAllList\"}`\r\n//   return axios.get(theurl);\r\n//  }\r\n// }\r\n\r\n// export default new AccountPayablesSettingsService();\r\n\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport { selectPageable, setPageable, setSelectedItem } from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function AccountPayablesSettingsListComponent(props) {\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => dispatch(setPageable({\r\n      INIT_STATUS: INIT_STATUS.LOAD,\r\n      list: data.pagingList.content,\r\n      searchValue: searchValue,\r\n      paging: {\r\n        rowsPerPage: data.pagingList.size,\r\n        currentPage: data.pagingList.pageable.pageNumber,\r\n        totalElements: data.pagingList.totalElements,\r\n        totalPage: data.pagingList.totalPage\r\n      }\r\n    })))\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsListComponent.retrieve', 'AccountPayablesSettingsService.getList'));\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    let data = {\r\n      ...selected\r\n    }\r\n    if (!data.period) {\r\n      data.period = { 'id': '' }\r\n    }\r\n    console.log(`[AccountPayablesSettingsListComponent.doEdit]  data=`, data)\r\n    dispatch(setSelectedItem(data))\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsListComponent.doDelete', 'AccountPayablesSettingsService.deleteItem'));\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod.description;\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    },\r\n    {\r\n      field: 'applyToAll',\r\n      headerName: 'Apply To All',\r\n      render: function (row) {\r\n        return row.applyToAll ? 'Y' : 'N';\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N';\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Accounts Payables Settings List</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      >\r\n\r\n        {/* <Box pb={1}> Filter by: </Box> */}\r\n\r\n      </CustomTableGrid>\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nimport { selectSelectedItem, resetSelectedItem, setPageableEntity, setOptionsList } from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport { save, getOptions } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nlet renderCount = 0;\r\n\r\nexport default function AccountPayablesSettingsDetailComponent(props) {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { control, register, handleSubmit } = useForm({\r\n    'id': '',\r\n    'label': '',\r\n    'description': 'test',\r\n    'paymentPeriod': { 'id': '' },\r\n    'amount': 0,\r\n    'priority': 1,\r\n    'applyToAll': true,\r\n    'active': false\r\n  });\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n    if (status === INIT_STATUS.LOAD) {\r\n      onRetrieve()\r\n      setStatus(INIT_STATUS.DONE)\r\n    }\r\n  }, [selectedItem, status]);\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[AccountPayablesSettingsDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    setMessage(`Loading. Please wait...`);\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage('')\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsDetailComponent.onRetrieve', 'AccountPayablesSettingsService.getOptions'));\r\n  }\r\n\r\n\r\n  const doSave = data => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'))\r\n  }\r\n\r\n  renderCount++;\r\n  return (\r\n    <>\r\n      {console.log(`[AccountPayablesSettingsDetailComponent.render] renderCount=${renderCount} selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Account Payables Settings Details</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-description\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"label\"\r\n              name=\"label\"\r\n              label=\"Label\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-label\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.label}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"period\"\r\n                  required\r\n                  select\r\n                  label=\"Period\"\r\n                  fullWidth\r\n                  autoComplete=\"period\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.periodList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              required\r\n              name=\"period.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.period.id}\r\n              options={selectedItem.optionsList.periodList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"paymentPeriod\"\r\n                  required\r\n                  select\r\n                  label=\"Payment Period\"\r\n                  fullWidth\r\n                  autoComplete=\"paymentPeriod\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.paymentPeriodList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              required\r\n              name=\"paymentPeriod.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.paymentPeriod.id}\r\n              options={selectedItem.optionsList.paymentPeriodList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"Priority\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-priority\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              label=\"Amount\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-amount\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.amount}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"applyToAll\"\r\n                  required\r\n                  select\r\n                  label=\"Applicable to All\"\r\n                  fullWidth\r\n                  autoComplete=\"applyToAll\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\r\n                  <MenuItem key={2} value={false}>No</MenuItem>\r\n                </TextField>\r\n              }\r\n              name=\"applyToAll\"\r\n              control={control}\r\n              defaultValue={selectedItem.applyToAll}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"active\"\r\n                  required\r\n                  select\r\n                  label=\"Active\"\r\n                  fullWidth\r\n                  autoComplete=\"active\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\r\n                  <MenuItem key={2} value={false}>No</MenuItem>\r\n                </TextField>\r\n              }\r\n              name=\"active\"\r\n              control={control}\r\n              defaultValue={selectedItem.active}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nexport const ENTITY = \"gradeLevelPayables\";\r\nconst sort = \"priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function GradeLevelPayablesService() {\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { deleteItem, getList } from '../../api/gradeLevelPayables/GradeLevelPayablesService';\r\nimport { selectPageable, setPageable, setSelectedItem, resetSelectedItem } from '../../api/gradeLevelPayables/GradeLevelSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function GradeLevelPayablesListComponent(props) {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const cols = [\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return row.level.description\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N'\r\n      }\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        console.log(`[GradeLevelPayablesListComponent.retrieve] data=`, data)\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.retrieve', 'GradeLevelPayablesService.getList'))\r\n\r\n\r\n\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n\r\n  const doEdit = (selected) => {\r\n    let aps = [...selected.accountPayablesSettings]\r\n    aps.sort((a, b) => {\r\n      return a.priority - b.priority;\r\n    })\r\n    dispatch(setSelectedItem({\r\n      ...selected,\r\n      accountPayablesSettings: [...aps]\r\n    }))\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.doDelete', 'GradeLevelPayablesService.deleteItem'))\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Grade Level Payables List</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        // list={this.state.list}\r\n        // searchValue={this.state.searchValue}\r\n        // paging={this.state.paging}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doDelete}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { getActiveList } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { ERROR_CODE } from '../../api/Utils';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function GradeLevelAccountPayablesSettingsListComponent(props) {\r\n\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n  const [store, setStore] = useState({\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n      rowsPerPage: 25,\r\n      totalElements: 0,\r\n      currentPage: 0\r\n    }\r\n  });\r\n\r\n  const doRetrieve = () => {\r\n    if (!props.selectedItem.period || !props.selectedItem.period.id) {\r\n      showErrorMsgAlert('Please select period')\r\n      return\r\n    }\r\n    getActiveList(props.selectedItem.period.id, store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\r\n      .then(response => {\r\n        let data = {\r\n          list: response.data.pagingList.content,\r\n          searchValue: store.searchValue,\r\n          paging: {\r\n            rowsPerPage: response.data.pagingList.size,\r\n            currentPage: response.data.pagingList.pageable.pageNumber,\r\n            totalElements: response.data.pagingList.totalElements,\r\n            totalPage: response.data.pagingList.totalPage\r\n          }\r\n        }\r\n        setStore(data);\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelAccountPayablesSettingsListComponent.retrieve', 'AccountPayablesSettingsService.getActiveList'))\r\n  }\r\n\r\n\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.currentPage = newPage\r\n    setStore(data);\r\n\r\n    doRetrieve();\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    setStore(data)\r\n    doRetrieve();\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    store.searchValue = searchValue\r\n    doRetrieve();\r\n  }\r\n  const doAddItem = (row) => {\r\n    props.setGradeLevelPayables(row);\r\n  }\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Add',\r\n      render: function (row) {\r\n        return (<IconButton aria-label=\"add\" onClick={() => doAddItem(row)}>\r\n          <AddIcon fontSize=\"large\" />\r\n        </IconButton>);\r\n      }\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod.description;\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CustomTableGrid\r\n        store={store}\r\n        cols={cols}\r\n        showAction={false}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Box, Button, Checkbox, FormControlLabel, FormGroup, Grid, IconButton } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport GradeLevelAccountPayablesSettingsListComponent from './GradeLevelAccountPayablesSettingsListComponent'\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\nimport SelectGrid from '../common/SelectGrid';\r\nimport { save, getOptions } from '../../api/gradeLevelPayables/GradeLevelPayablesService';\r\nimport { selectSelectedItem, setOptionsList, updateSelectedItem, resetSelectedItem, setPageableEntity } from '../../api/gradeLevelPayables/GradeLevelSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nlet renderCount = 0;\r\n\r\nexport default function GradeLevelPayablesDetailsComponent(props) {\r\n  const [,\r\n    ,\r\n    showErrorMsgAlert,\r\n    ,\r\n    ,\r\n    ,\r\n  ] = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    } else if (status === INIT_STATUS.LOAD) {\r\n      onRetrieve()\r\n      setStatus(INIT_STATUS.RESET)\r\n    }\r\n\r\n  }, [selectedItem, status]);\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target\r\n\r\n    console.log(`[GradeLevelPayablesDetailsComponent.handleCheckboxChange] name=${name}, checked=${checked}`)\r\n    dispatch(updateSelectedItem({\r\n      [name]: checked\r\n    }))\r\n  };\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n\r\n    if (props.match.params.id === -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    setMessage(`Loading. Please wait...`);\r\n    getOptions().then(response => onRetrieveResponseAction(response))\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'GradeLevelPayablesDetailsComponent.onRetrieve', 'GradeLevelPayablesService.getOptions'));\r\n  }\r\n\r\n  const onRetrieveResponseAction = (response) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.onRetrieveResponseAction]  response==>`, response)\r\n    dispatch(setOptionsList(response.data.listService))\r\n    setMessage(``);\r\n  }\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(``);\r\n    save({\r\n      id: selectedItem.id,\r\n      level: selectedItem.level,\r\n      period: selectedItem.period,\r\n      active: selectedItem.active,\r\n      accountPayablesSettings: selectedItem.list\r\n    })\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'GradeLevelPayablesDetailsComponent.onSubmitForm', 'GradeLevelPayablesService.save'));\r\n  }\r\n\r\n  const setGradeLevelPayables = (data) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.setGradeLevelPayables] data==>`, data)\r\n\r\n    let list = [...selectedItem.list]\r\n    if (list.filter(row => row.id === data.id).length === 0) {\r\n      let temp = {\r\n        ...data,\r\n        status: 'NEW'\r\n      }\r\n      list.push(temp);\r\n      dispatch(updateSelectedItem({\r\n        list: list\r\n      }))\r\n    }\r\n  }\r\n\r\n  const doDeleteItem = (id) => dispatch(updateSelectedItem({\r\n    list: [...selectedItem.list.filter(item => item.id !== id)]\r\n  }))\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[GradeLevelPayablesDetailsComponent.changeSelectState] name=${name}, value=${value}`)\r\n    dispatch(updateSelectedItem({\r\n      [name]: { id: value }\r\n    }))\r\n  }\r\n\r\n  const GridActionButtons = () => {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={9}>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" href={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const cols = [{\r\n    field: 'description',\r\n    headerName: 'Description',\r\n    render: function (row) {\r\n      return (<>\r\n        {row.status === 'NEW' && <>{row.description} <WarningIcon fontSize=\"small\" /></>}\r\n        {row.status !== 'NEW' && row.description}\r\n      </>);\r\n    }\r\n  },\r\n  {\r\n    headerName: 'Period',\r\n    render: function (row) {\r\n      // return row.period.description;\r\n      return (<>\r\n        {row.period.id !== selectedItem.period.id && <>{row.period.description} <WarningIcon fontSize=\"small\" /></>}\r\n        {row.period.id === selectedItem.period.id && row.period.description}\r\n      </>);\r\n    }\r\n  },\r\n  {\r\n    headerName: 'Payment Period',\r\n    render: function (row) {\r\n      return row.paymentPeriod.description;\r\n    }\r\n  },\r\n  {\r\n    field: 'amount',\r\n    headerName: 'Amount',\r\n  },\r\n  {\r\n    field: 'priority',\r\n    headerName: 'Priority',\r\n  },\r\n  {\r\n    headerName: 'Action',\r\n    render: function (row) {\r\n      return (<IconButton aria-label=\"add\" onClick={() => doDeleteItem(row.id)}>\r\n        <DeleteIcon fontSize=\"large\" />\r\n      </IconButton>);\r\n    }\r\n  }\r\n  ];\r\n  renderCount++;\r\n  return (\r\n    <>\r\n      {console.log(`[GradeLevelPayablesDetailsComponent.render] renderCount=${renderCount} selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Grade Level Payables</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n\r\n      <form onSubmit={e => onSubmitForm(e)}>\r\n        <GridActionButtons />\r\n\r\n        <Box pb={3}>\r\n          <Grid container spacing={3}>\r\n            <SelectGrid sm={2} required name=\"level\" label=\"Level\" value={selectedItem.level.id} options={selectedItem.optionsList.levelList}\r\n              onChange={e => changeSelectState(e)} />\r\n\r\n            <SelectGrid sm={3} required name=\"period\" label=\"Period\" value={selectedItem.period.id} options={selectedItem.optionsList.periodList}\r\n              onChange={e => changeSelectState(e)} />\r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <FormGroup aria-label=\"position\" row>\r\n                <FormControlLabel\r\n                  value=\"true\"\r\n                  control={<Checkbox checked={selectedItem.active} onChange={e => handleCheckboxChange(e)} name=\"active\" />}\r\n                  label=\"Active\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </FormGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box py={3}>\r\n          <Box pb={3}>\r\n            <CustomTableGrid\r\n              store={selectedItem}\r\n              cols={cols}\r\n              showAction={false}\r\n              showPaging={false}\r\n              showSearch={false}\r\n            />\r\n          </Box>\r\n          <GridActionButtons />\r\n        </Box>\r\n\r\n        <GradeLevelAccountPayablesSettingsListComponent setGradeLevelPayables={setGradeLevelPayables} selectedItem={selectedItem} />\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function GlobalAlertMsgDialog(props) {\r\n    const [\r\n        globalProps, , , , , , closeMsgAlert] = useMessageAlert();\r\n\r\n\r\n    console.log(`[GlobalAlertMsgDialog] globalProps=>`, globalProps)\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth=\"md\"\r\n                open={globalProps.alert.open}\r\n                onClose={closeMsgAlert}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\"><Alert severity={globalProps.alert.severity} align=\"right\">\r\n                    <Typography variant=\"h6\">\r\n                        {globalProps.alert.severity === 'error' && 'Error'}\r\n                        {globalProps.alert.severity === 'info' && 'Alert'}\r\n                        {globalProps.alert.severity === 'warning' && 'Warning'}\r\n                        {globalProps.alert.severity === 'success' && 'Success'}\r\n                    </Typography>\r\n                </Alert></DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {globalProps.alert.msg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeMsgAlert}>Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nimport { PAGE_URL, THEME } from './api/Utils';\r\nimport { useAuth } from './providers/AuthenticationProvider';\r\n\r\nimport ErrorComponent from './api/ErrorComponent'\r\nimport FooterComponent from './forms/common/FooterComponent'\r\n\r\nimport EndUserListComponent from './forms/endUser/EndUserListComponent';\r\nimport EndUserDetailComponent from './forms/endUser/EndUserDetailComponent';\r\n\r\nimport AuthenticatedRoute from './security/AuthenticatedRoute'\r\nimport SignInComponent from './security/SignInComponent';\r\nimport LogoutComponent from './security/LogoutComponent'\r\nimport CodeGroupsListComponent from './forms/codeGroups/CodeGroupsListComponent';\r\nimport CodeGroupsDetailComponent from './forms/codeGroups/CodeGroupsDetailComponent';\r\nimport Dashboard from './forms/dashboard/Dashboard';\r\nimport AppBarComponent from './forms/common/AppBarComponent';\r\nimport StudentDetailComponent from './forms/student/StudentDetailComponent';\r\nimport StudentListComponent from './forms/student/StudentListComponent';\r\nimport SchoolDetailComponent from './forms/school/SchoolDetailComponent';\r\nimport SchoolListComponent from './forms/school/SchoolListComponent';\r\n\r\n// import AuthenticationService from './security/AuthenticationService';\r\nimport BillingComponent from './forms/billing/BillingComponent';\r\n\r\nimport AccountPayablesSettingsListComponent from './forms/accountPayables/AccountPayablesSettingsListComponent';\r\nimport AccountPayablesSettingsDetailComponent from './forms/accountPayables/AccountPayablesSettingsDetailComponent';\r\n\r\nimport GradeLevelPayablesListComponent from './forms/gradeLevelPayables/GradeLevelPayablesListComponent';\r\nimport GradeLevelPayablesDetailsComponent from './forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent';\r\nimport GlobalAlertMsgDialog from './forms/common/GlobalAlertMsgDialog';\r\n\r\n\r\nimport { useAuthServices } from './security/useAuthServices'\r\n\r\nconst useStylesRouting = makeStyles((theme) => ({\r\n root: {\r\n  display: 'flex',\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n container: {\r\n  paddingTop: theme.spacing(4),\r\n  paddingBottom: theme.spacing(4),\r\n },\r\n // content: {\r\n //  backgroundColor:\r\n //   theme.palette.mode === 'light'\r\n //    ? theme.palette.grey[100]\r\n //    : theme.palette.grey[900],\r\n //  flexGrow: 1,\r\n //  height: '100vh',\r\n //  overflow: 'auto',\r\n // },\r\n}));\r\n\r\nconst AppRouting = () => {\r\n\r\n\r\n const [initialize,\r\n  ,\r\n  ,\r\n  getLoggedUserObj,\r\n ] = useAuthServices()\r\n\r\n\r\n const [userObj, setUserObj] = useAuth();\r\n\r\n useEffect(() => {\r\n  console.log(`[AppRouting.useEffect] 1 userObj=>`, userObj)\r\n  initTheme();\r\n\r\n  //initialize user\r\n  initialize()\r\n  let lu = getLoggedUserObj()\r\n  // console.log(`[AppRouting.useEffect] 2 lu=>`, lu)\r\n  setUserObj(lu);\r\n  // console.log(`[AppRouting.useEffect] 3 userObj=>`, userObj)\r\n }, []);\r\n\r\n const initTheme = () => {\r\n  const themeDarkMode = localStorage.getItem(THEME.THEME_STORAGE_NAME);\r\n  setDarkMode(themeDarkMode === 'Y' ? true : false);\r\n }\r\n\r\n const [darkMode, setDarkMode] = useState(false);\r\n\r\n const toggleDarkMode = () => {\r\n  setDarkMode(!darkMode);\r\n  localStorage.setItem(THEME.THEME_STORAGE_NAME, !darkMode ? 'Y' : 'N');\r\n }\r\n\r\n const theme = createMuiTheme({\r\n  palette: {\r\n   type: darkMode ? THEME.DARK_MODE : THEME.LIGHT_MODE,\r\n  },\r\n });\r\n\r\n // render = () => {\r\n const classes = useStylesRouting();\r\n\r\n return (\r\n  <div className=\"\">\r\n   <MuiThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <Router>\r\n     <div className={classes.root}>\r\n\r\n      <AppBarComponent darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\r\n\r\n      <main className={classes.content}>\r\n       <div className={classes.toolbar} />\r\n\r\n       <GlobalAlertMsgDialog />\r\n\r\n       {/* <Container component=\"main\" className={classes.container}> */}\r\n       <Switch>\r\n        <Route path={PAGE_URL.ROOT} exact component={Dashboard} />\r\n        <Route path={PAGE_URL.INDEX} exact component={Dashboard} />\r\n\r\n        <Route path={PAGE_URL.LOGOUT} component={LogoutComponent} />\r\n        <Route path={PAGE_URL.LOGIN} component={SignInComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.STUDENT_LIST} component={StudentListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL} component={StudentDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL_URL} component={StudentDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING_PAYABLES} exact component={BillingComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING} exact component={BillingComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.USER_LIST} exact component={EndUserListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_DETAIL} exact component={EndUserDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_DETAIL_URL} exact component={EndUserDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_LIST} exact component={CodeGroupsListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL} exact component={CodeGroupsDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL_URL} exact component={CodeGroupsDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_LIST} exact component={SchoolListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL} exact component={SchoolDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL_URL} exact component={SchoolDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST} exact component={AccountPayablesSettingsListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL} exact component={AccountPayablesSettingsDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL} exact component={AccountPayablesSettingsDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_LIST} exact component={GradeLevelPayablesListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL} exact component={GradeLevelPayablesDetailsComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL} exact component={GradeLevelPayablesDetailsComponent} />\r\n\r\n        <Route component={ErrorComponent} />\r\n       </Switch>\r\n       {/* </Container> */}\r\n       <FooterComponent />\r\n      </main>\r\n     </div>\r\n    </Router>\r\n   </MuiThemeProvider>\r\n  </div>\r\n );\r\n // }\r\n}\r\n\r\nexport default AppRouting;","import React from 'react';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { GlobalVariableProvider } from './providers/GlobalVariableProvider';\r\nimport { AuthenticationProvider } from './providers/AuthenticationProvider';\r\nimport store from './api/store';\r\n\r\nimport AppRouting from './AppRouting'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <GlobalVariableProvider>\r\n          <AuthenticationProvider>\r\n            <AppRouting />\r\n          </AuthenticationProvider>\r\n        </GlobalVariableProvider>\r\n      </Provider>\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","\r\nimport { TableCell, TableRow } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport const INIT_STATUS = {\r\n    INIT: 'INIT',\r\n    DONE: 'DONE',\r\n    LOAD: 'LOAD',\r\n    RESET: 'RESET',\r\n    PAYABLES: 'PAYABLES',\r\n    PAYABLES_RESET: 'PAYABLES_RESET'\r\n}\r\n\r\nexport const defaultPageable = {\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0,\r\n        totalPage: 0\r\n    }\r\n}\r\n\r\n\r\nexport const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n});\r\n\r\nexport const USER_TEMP = {\r\n    userName: '',\r\n    userFullName: 'Guest',\r\n    schoolName: 'SARA PROJECT',\r\n    schoolAddress: '',\r\n    schoolLogo: '',\r\n    schoolId: '',\r\n}\r\n// export const URL_BASE = 'http://localhost:8081';\r\nexport const URL_BASE_DEV = 'http://localhost:5000';\r\nexport const URL_BASE = process.env.NODE_ENV === 'development' ? URL_BASE_DEV : '';\r\nexport const AUTH_URL_BASE = URL_BASE + '/auth';\r\nexport const API_URL_BASE = URL_BASE + '/api/';\r\n\r\nexport const URL_LIST = \"/l\";\r\nexport const URL_DELETE = \"/d\";\r\nexport const URL_DETAILS = \"/g\";\r\nexport const URL_OPTIONS = \"/o\";\r\nexport const URL_SAVE = \"/s\";\r\n\r\nexport const AUTH_USER = 'auth/setUser';\r\nexport const AUTH_USER_OBJ = 'auth/setUserObj';\r\nexport const JWT_TOKEN = 'auth/setToken';\r\n\r\nexport const UPDATE_ERROR = 'Error: Unable to update. Please contact system administrator.';\r\nexport const REQUIRED_DESCRIPTION = 'Description is required';\r\nexport const REQUIRED_5_DESCRIPTION = 'Description should be atleast 5 characters';\r\nexport const REQUIRED_TARGET_DATE = 'Target date is required';\r\nexport const THEME = {\r\n    DARK_MODE: 'dark',\r\n    LIGHT_MODE: 'light',\r\n    THEME_STORAGE_NAME: 'THEME_DARK_MODE'\r\n}\r\nexport const PAGE_URL = {\r\n    LOGO_URL: '/r/logo/',\r\n    ROOT: '/',\r\n    INDEX: '/index.html',\r\n    DASHBOARD: '/dashboard',\r\n    LOGOUT: '/logout',\r\n    LOGIN: '/login',\r\n    GRADE_LEVEL_PAYABLES_LIST: '/ui/grade-level-payables-list',\r\n    GRADE_LEVEL_PAYABLES_DETAIL: '/ui/grade-level-payables-detail/:id',\r\n    GRADE_LEVEL_PAYABLES_DETAIL_URL: '/ui/grade-level-payables-detail',\r\n    ACCOUNT_PAYABLES_SETTINGS_LIST: '/ui/account-payables-settings-list',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL: '/ui/account-payables-settings-detail/:id',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL: '/ui/account-payables-settings-detail',\r\n    SCHOOL_LIST: '/ui/school-list',\r\n    SCHOOL_DETAIL: '/ui/school-detail/:id',\r\n    SCHOOL_DETAIL_URL: '/ui/school-detail',\r\n    STUDENT_LIST: '/ui/student-list',\r\n    STUDENT_DETAIL: '/ui/student-detail/:id',\r\n    STUDENT_DETAIL_URL: '/ui/student-detail',\r\n    BILLING: '/ui/billing',\r\n    BILLING_PAYABLES: '/ui/billing/:id',\r\n    BILLING_PAYABLES_URL: '/ui/billing',\r\n    USER_LIST: '/ui/user-list',\r\n    USER_DETAIL: '/ui/user-detail/:id',\r\n    USER_DETAIL_URL: '/ui/user-detail',\r\n    CODE_GROUPS_DETAIL: '/ui/code-groups-detail/:id',\r\n    CODE_GROUPS_DETAIL_URL: '/ui/code-groups-detail',\r\n    CODE_GROUPS_LIST: '/ui/code-groups-list',\r\n    ADDRESS_LIST: '/ui/address-list',\r\n    ADDRESS_DETAIL: '/ui/address-detail/:id',\r\n    USER_ADDRESS_DETAIL: '/ui/address-detail/:id/:refId/:typeId'\r\n}\r\nexport const ERROR_CODE = {\r\n    LOGIN_ERROR: '100000',\r\n    RETRIEVE_ERROR: '100001',\r\n    SAVE_ERROR: '100002',\r\n    DELETE_ERROR: '100003',\r\n    LIST_ERROR: '100004'\r\n}\r\n\r\nexport const ADDRESS_TYPE = {\r\n    USER: '1',\r\n    STUDENT: '2',\r\n    PARENT: '3'\r\n}\r\nexport const StyledTableHeadRow = withStyles((theme) => ({\r\n    root: {\r\n        fontWeight: \"bold\",\r\n        // '&:nth-of-type(odd)': {\r\n        //     backgroundColor: theme.palette.background,\r\n        // },\r\n    },\r\n    head: {\r\n        // backgroundColor: theme.palette.common.black,\r\n        // color: theme.palette.common.white,\r\n    },\r\n    // body: {\r\n    //     fontSize: 14,\r\n    //     fontWeight: \"bold\",\r\n    // },\r\n}))(TableRow);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        }\r\n    },\r\n}))(TableRow);\r\n\r\nexport const StyledTableHeadCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 16,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 12,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 14,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 20,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nclass Utils {\r\n\r\n    getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.error(`[${formMethod}] ${serviceName} error msg: ${errMsg}`, error);\r\n        console.error(`[${formMethod}] ${serviceName} error `, JSON.stringify(error));\r\n\r\n        if (error.message) {\r\n            errMsg = error.message\r\n        }\r\n\r\n        if (error.response) {\r\n            // Request made and server responded\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n            errMsg = `${error.response.data}`\r\n        }\r\n\r\n        return errMsg;\r\n    }\r\n    urlListPattern = (entity) => API_URL_BASE + entity + URL_LIST\r\n    urlDeletePattern = (entity) => API_URL_BASE + entity + URL_DELETE\r\n    urlDetailsPattern = (entity) => API_URL_BASE + entity + URL_DETAILS\r\n    urlOptionsPattern = (entity) => API_URL_BASE + entity + URL_OPTIONS\r\n    urlSavePattern = (entity) => API_URL_BASE + entity + URL_SAVE\r\n}\r\n\r\nexport default new Utils();"],"sourceRoot":""}