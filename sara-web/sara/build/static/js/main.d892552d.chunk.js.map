{"version":3,"sources":["api/CommonSlice.js","api/school/SchoolSlice.js","api/codeGroups/CodeGroupsSlice.js","api/endUser/UsersSlice.js","api/student/StudentSlice.js","api/gradeLevelPayables/GradeLevelSlice.js","api/accountPayablesSettings/AccountPayablesSettingsSlice.js","api/billing/BillingSlice.js","api/processing/ProcessingSlice.js","api/store.js","api/ErrorComponent.jsx","forms/common/FooterComponent.jsx","forms/common/PaginationComponent.js","forms/common/CustomTableGrid.js","api/endUser/EndUserService.jsx","forms/common/TitleComponent.jsx","providers/GlobalVariableProvider.js","api/useMessageAlert.js","forms/common/ConfirmMsgDialog.js","forms/endUser/EndUserListComponent.jsx","forms/endUser/EndUserDetailHtml.js","forms/endUser/EndUserDetailComponent.jsx","security/useSecurityServices.js","security/AuthenticatedRoute.jsx","forms/common/CSS.js","security/SignInHtml.js","security/SignInComponent.js","security/LogoutComponent.jsx","api/codeGroups/CodeGroupsService.js","forms/codeGroups/CodeGroupsListComponent.js","forms/codeGroups/CodeGroupsDetailComponent.jsx","forms/dashboard/Chart.js","forms/dashboard/StackedBarChart.js","forms/dashboard/CustomContentOfTooltip.js","forms/dashboard/Dashboard.jsx","forms/common/MenuListItems.js","forms/common/MiniDrawer.js","api/useTheme.js","forms/common/AppBarComponent.js","forms/student/StudentDetailHtml.js","api/student/StudentService.jsx","forms/student/StudentDetailComponent.js","forms/student/StudentListComponent.jsx","api/school/SchoolService.js","forms/school/SchoolDetailComponent.jsx","forms/school/SchoolListComponent.js","forms/common/SubTitleComponent.jsx","forms/billing/SearchResultsHtmlComponent.js","forms/common/SelectGrid.js","forms/billing/PayablesHtmlComponent.js","forms/billing/BillingHtmlComponent.js","forms/billing/SavePayablesConfimationHtml.js","forms/billing/BillingComponent.js","api/billing/BillingService.jsx","api/accountPayablesSettings/AccountPayablesSettingsService.jsx","forms/accountPayables/AccountPayablesSettingsListComponent.js","forms/accountPayables/AccountPayablesSettingsDetailComponent.jsx","api/gradeLevelPayables/GradeLevelPayablesService.js","forms/gradeLevelPayables/GradeLevelPayablesListComponent.js","forms/gradeLevelPayables/GradeLevelAccountPayablesSettingsListComponent.js","forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent.jsx","forms/common/GlobalAlertMsgDialog.js","forms/closePeriod/ClosePeriodComponent.jsx","api/processing/ProcessingService.js","AppRouting.jsx","App.js","serviceWorker.js","index.js","api/Utils.js"],"names":["resetSelectedItemCommon","state","action","blankSelectedItem","selectedItem","setSelectedItemCommon","payload","updateSelectedItemCommon","temp","setPageableCommon","pageable","setPageableEntityCommon","blankPageable","list","setOptionsListCommon","optionsList","INIT_STATUS","INIT","searchValue","paging","rowsPerPage","totalElements","currentPage","totalPage","currentPeriod","periodList","SchoolSlice","createSlice","name","initialState","reducers","resetSelectedItem","setSelectedItem","data","values","initForm","updateSelectedItem","setPageable","setPageableEntity","setOptionsList","actions","selectPageable","school","selectSelectedItem","CodeGroupsSlice","codeGroups","id","schoolList","UsersSlice","setSearchValue","users","defaultPageable","level","studentLevelList","StudentSlice","birthDate","moment","format","students","period","active","levelList","applyToAllList","GradeLevelSlice","console","log","accountPayablesSettings","length","map","i","status","tempList","push","row","indexOf","rowTemp","gradeLevels","paymentPeriod","paymentPeriodList","AccountPayablesSettingsSlice","billingSearchBy","value","label","searchBy","searchFlag","payablesFlag","studentId","firstName","lastName","description","blankConfirmPayables","entity","payables","payablesByInvoiceNo","open","BillingSlice","confirmPayables","updatePageable","updatePageableCommon","setConfirmPayables","updateConfirmPayables","billing","ProcessingSlice","processing","configureStore","reducer","SchoolReducer","CodeGroupsReducer","UsersReducer","StudentReducer","GradeLevelReducer","AccountPayablesSettingsReducer","BillingReducer","ProcessingReducer","ErrorComponent","render","className","React","Component","Copyright","Box","mx","pt","Divider","Typography","variant","color","align","href","Date","getFullYear","FooterComponent","mt","PaginationComponent","props","TablePagination","rowsPerPageOptions","component","page","count","onChangePage","onChangeRowsPerPage","CustomTableGrid","showPaging","showSearch","showAction","register","useForm","useState","counter","setCounter","Grid","container","spacing","item","xs","sm","FormControl","Input","defaultValue","store","onKeyDown","e","key","doSearch","target","preventDefault","doHandleKeyDown","placeholder","inputRef","endAdornment","onClick","doRetrieve","children","TableContainer","Paper","elevation","Table","TableHead","cols","params","headerName","field","IconButton","aria-label","doNew","fontSize","TableBody","TableCell","doEdit","doDelete","doHandleChangePage","doHandleChangeRowsPerPage","ENTITY","TitleComponent","pb","GlobalVariableContext","createContext","useGlobalVariable","context","useContext","Error","GlobalVariableProvider","USER_TEMP","userName","userFullName","schoolName","schoolAddress","schoolLogo","schoolId","userLogin","setUserLogin","ui","darkMode","alert","title","severity","msg","globalProps","setGlobalProps","clearUser","setAlertProps","prop","setUIProps","Provider","useMessageAlert","showMsgAlert","getFormatedErrorMessage","error","errorCode","formMethod","serviceName","JSON","stringify","errMsg","message","response","headers","closeMsgAlert","showErrorMsgAlert","showErrorAlert","showInfoAlert","showWarningAlert","showSuccessAlert","ConfirmMsgDialog","closeDialog","type","OPTIONS","YESNO","setReturnValue","setDialogSelection","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","Alert","DialogContent","DialogContentText","DialogActions","Button","YES","NO","OKCANCEL","OK","CANCEL","EndUserListComponent","dispatch","useDispatch","currPageable","useSelector","deleteDialogOpen","setDeleteDialogOpen","deleteId","setDeleteId","useEffect","retrieve","pageSize","axios","get","Utils","urlListPattern","getList","then","LOAD","pagingList","content","size","pageNumber","catch","ERROR_CODE","LIST_ERROR","delete","urlDeletePattern","deleteItem","newPage","selected","history","PAGE_URL","USER_DETAIL_URL","EndUserDetailHtml","control","handleSubmit","setStatus","useHistory","entityId","RESET","onSubmit","onSubmitForm","startIcon","USER_LIST","TextField","required","fullWidth","autoComplete","autoFocus","InputLabelProps","shrink","password","as","select","MenuItem","options","EndUserDetailComponent","setMessage","match","urlOptionsPattern","listService","RETRIEVE_ERROR","post","urlSavePattern","save","SAVE_ERROR","myInterceptor","useSecurityServices","getJwtTokenHeader","jwtToken","getJwtToken","sessionStorage","getItem","JWT_TOKEN","setupAxiosInterceptors","authHeader","interceptors","request","use","a","config","isUserLoggedIn","authorization","getSessionStorageLoginUser","AUTH_USER","getLoggedUserObj","user","parse","AUTH_USER_OBJ","initAxios","jwtTokenHeader","initUser","lu","executeJwtAuthenticationService","username","AUTH_URL_BASE","registerJwtSucessfulLogin","setItem","logout","eject","removeItem","AuthenticatedRoute","isLoggedin","to","useStyles","makeStyles","theme","backgroundColor","palette","mode","grey","flexGrow","height","overflow","paddingTop","paddingBottom","login_paper","marginTop","display","flexDirection","alignItems","login_avatar","margin","secondary","main","login_form","width","login_submit","avatar_40","avatar_70","SignInHtml","classes","Container","maxWidth","Avatar","formData","onSignon","submit","SignInComponent","userDetails","isLoggedIn","token","LOGIN_ERROR","LogoutComponent","CodeGroupsListComponent","DELETE_ERROR","CODE_GROUPS_DETAIL_URL","CodeGroupsDetailComponent","CODE_GROUPS_LIST","code","priority","multiline","rows","json","uv","pv","amt","Chart","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","PureComponent","jsfiddleUrl","StackedBarChart","stackId","fill","getIntroOfPage","CustomTooltip","CustomContentOfTooltip","barSize","Dashboard","process","URL_BASE","isLogin","src","faker","image","fashion","commerce","productName","random","words","people","food","px","py","m","root","background","paper","nested","paddingLeft","MenuListItems","setStore","List","ListItem","button","BILLING","ListItemIcon","ListItemText","primary","ACCOUNT_PAYABLES_SETTINGS_LIST","GRADE_LEVEL_PAYABLES_LIST","STUDENT_LIST","SCHOOL_LIST","sourceName","isopen","doHandleClick","Collapse","in","timeout","unmountOnExit","disablePadding","CLOSE_PERIOD_DETAIL_URL","LOGOUT","LOGIN","useStylesDrawer","drawer","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","MiniDrawer","useTheme","Drawer","clsx","doHandleDrawerClose","direction","THEME","initTheme","localStorage","toggleDarkMode","AppBarComponent","useAppTheme","appBar","zIndex","appBarShift","marginLeft","menuButton","marginRight","hide","useStylesAppBar","setDrawerOpen","AppBar","position","Toolbar","edge","LOGO_URL","noWrap","style","textDecoration","pl","FormControlLabel","Switch","checked","onChange","StudentDetailHtml","reset","onRetrieve","BUTTONS","STUDENT_DETAIL_URL","lrn","birthPlace","FormLabel","RadioGroup","Radio","labelPlacement","gender","contactNo","address1","address2","city","zipCode","editable","country","fathersName","mothersName","mothersOccupation","parentCivilStatus","guardianName","StudentDetailComponent","StudentListComponent","SchoolDetailComponent","SCHOOL_DETAIL_URL","logo","address","SchoolListComponent","currPageableSchools","SubTitleComponent","SearchResultsHtmlComponent","CustomTableHead","CustomTableBody","doPayables","doShowPayables","SelectGrid","rest","require","StyledTableRow","StyledTableHeadRow","StyledTableHeadCell","PayablesHtmlComponent","total","setTotal","setPayables","periodId","currentState","setCurrentState","changeSelectStateByPeriod","changeSelectState","PAYABLES_RESET","resetPayables","doUpdateCurrPageable","DONE","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","hasNext","doShowSaveBillingDialog","studentPayables","aps","payment","amount","toLocaleString","undefined","paid","balance","onBlur","el","replaceAll","numValue","Number","onPaymentBlur","InputProps","startAdornment","InputAdornment","colSpan","billingByInvoice","invoiceNo","invoiceDate","payablesMap","BillingHtmlComponent","my","Select","doShowSaveConfirmDialog","SavePayablesConfimationHtml","confirmStore","componentRef","useRef","handlePrint","useReactToPrint","current","ConfirmPage","balanceTotal","paymentTotal","PrintableInvoicePage","ref","border","saveDialog","BillingComponent","vertical","horizontal","snackbar","setSnackbar","setConfirmStore","doInitFormData","by","API_URL_BASE","doSavePayables","student","doOpenSnackBar","doInitConfirmStore","doCloseSnackbar","getStudentPayablesByPeriod","optionsListTemp","confirmStoreTemp","Snackbar","autoHideDuration","anchorOrigin","getOptions","AccountPayablesSettingsListComponent","filter","setFilter","doInitOptions","applyToAll","ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL","renderCount","AccountPayablesSettingsDetailComponent","GradeLevelPayablesListComponent","sort","b","GRADE_LEVEL_PAYABLES_DETAIL_URL","GradeLevelAccountPayablesSettingsListComponent","setGradeLevelPayables","doAddItem","GradeLevelPayablesDetailsComponent","URL_OPTIONS","onRetrieveResponseAction","GridActionButtons","disabled","onChangePeriod","FormGroup","Checkbox","handleCheckboxChange","GlobalAlertMsgDialog","ClosePeriodComponent","getListClosePeriod","getOptionsByPeriod","saveClosePeriod","patch","ProcessingService","periodFrom","periodTo","confirmDialogOpen","setConfirmDialogOpen","doValidateParameters","errorMsg","join","doProcesses","fromPeriodId","toPeriodId","createdDate","useStylesRouting","AppRouting","CssBaseline","path","ROOT","exact","INDEX","STUDENT_DETAIL","BILLING_PAYABLES","USER_DETAIL","CODE_GROUPS_DETAIL","SCHOOL_DETAIL","ACCOUNT_PAYABLES_SETTINGS_DETAIL","GRADE_LEVEL_PAYABLES_DETAIL","App","createMuiTheme","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","PAYABLES","URL_BASE_DEV","URL_LIST","URL_DELETE","URL_DETAILS","URL_SAVE","UPDATE_ERROR","REQUIRED_DESCRIPTION","REQUIRED_5_DESCRIPTION","REQUIRED_TARGET_DATE","DASHBOARD","BILLING_PAYABLES_URL","ADDRESS_LIST","ADDRESS_DETAIL","USER_ADDRESS_DETAIL","ADDRESS_TYPE","USER","STUDENT","PARENT","withStyles","fontWeight","head","TableRow","hover","fontStyle","body","StyledTableCell","urlDetailsPattern"],"mappings":"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","file":"static/js/main.d892552d.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\nexport const resetSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem\r\n }\r\n}\r\n\r\nexport const setSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem,\r\n  ...action.payload\r\n }\r\n}\r\n\r\nexport const updateSelectedItemCommon = (state, action) => {\r\n let temp = {\r\n  ...state.selectedItem,\r\n  ...action.payload\r\n }\r\n state.selectedItem = temp\r\n}\r\n\r\nexport const setPageableCommon = (state, action) => {\r\n state.pageable = action.payload\r\n}\r\n\r\nexport const updatePageableCommon = (state, action) => {\r\n state.pageable = {\r\n  ...state.pageable,\r\n  ...action.payload\r\n }\r\n}\r\n\r\nexport const setPageableEntityCommon = (state, action, blankPageable) => {\r\n let temp = {\r\n  ...blankPageable\r\n }\r\n temp.list = [action.payload]\r\n state.pageable = temp\r\n}\r\nexport const setSearchValueCommon = (state, action) => {\r\n state.searchValue = action.payload\r\n}\r\n\r\nexport const setOptionsListCommon = (state, action) => {\r\n state.selectedItem = {\r\n  ...state.selectedItem,\r\n  optionsList: { ...action.payload }\r\n }\r\n}\r\n\r\nexport default function CommonSlice() {\r\n\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\nimport { INIT_STATUS } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nexport const blankSelectedItem = {\r\n\tcurrentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tperiodList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.currentPeriod == null) {\r\n\t\tdata.currentPeriod = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const SchoolSlice = createSlice({\r\n\tname: 'school',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, updateSelectedItem, setOptionsList } = SchoolSlice.actions\r\n\r\nexport const selectPageable = state => state.school.pageable\r\nexport const selectSelectedItem = state => state.school.selectedItem\r\nexport const selectSearchValue = state => state.school.searchValue\r\n\r\nexport default SchoolSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\toptionsList: {\r\n\t}\r\n}\r\nexport const CodeGroupsSlice = createSlice({\r\n\tname: 'codeGroups',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity } = CodeGroupsSlice.actions\r\n\r\nexport const selectPageable = state => state.codeGroups.pageable\r\nexport const selectSelectedItem = state => state.codeGroups.selectedItem\r\nexport const selectSearchValue = state => state.codeGroups.searchValue\r\n\r\n\r\nexport default CodeGroupsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tschool: { id: '' },\r\n\toptionsList: {\r\n\t\tschoolList: [],\r\n\t}\r\n}\r\n\r\nexport const UsersSlice = createSlice({\r\n\tname: 'users',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem } = UsersSlice.actions\r\n\r\nexport const selectPageable = state => state.users.pageable\r\nexport const selectSelectedItem = state => state.users.selectedItem\r\nexport const selectSearchValue = state => state.users.searchValue\r\n\r\n\r\nexport default UsersSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\toptionsList: {\r\n\t\tstudentLevelList: []\r\n\t}\r\n}\r\n\r\nexport const StudentSlice = createSlice({\r\n\tname: 'students',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tbirthDate: moment(action.payload.birthDate).format('YYYY-MM-DD'),\r\n\t\t\t\toptionsList: {\r\n\t\t\t\t\tstudentLevelList: []\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, setSearchValue, updateSelectedItem, setOptionsList } = StudentSlice.actions\r\n\r\nexport const selectPageable = state => state.students.pageable\r\nexport const selectSelectedItem = state => state.students.selectedItem\r\nexport const selectSearchValue = state => state.students.searchValue\r\n\r\n\r\nexport default StudentSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, setPageableCommon, setPageableEntityCommon, updateSelectedItemCommon } from '../CommonSlice';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\tperiod: { 'id': '' },\r\n\tactive: true,\r\n\tlist: [],\r\n\toptionsList: {\r\n\t\tlevelList: [],\r\n\t\tperiodList: [],\r\n\t\tapplyToAllList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.period == null) {\r\n\t\tdata.period = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const GradeLevelSlice = createSlice({\r\n\tname: 'gradeLevels',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetOptionsList: (state, action) => {\r\n\t\t\tconsole.log(`[GradeLevelSlice.setOptionsList] action=`, action)\r\n\t\t\tconst optionsList = action.payload\r\n\t\t\tlet list = state.selectedItem.accountPayablesSettings ? state.selectedItem.accountPayablesSettings : []\r\n\t\t\tlet applyToAllList = optionsList.applyToAllList;\r\n\t\t\tif (list.length === 0) {\r\n\t\t\t\tlist = [...applyToAllList]\r\n\t\t\t\tlist.map(i => i.status = 'NEW')\r\n\t\t\t} else {\r\n\t\t\t\tlet temp = [];\r\n\t\t\t\tlet tempList = [];\r\n\r\n\t\t\t\tlist.map(({ id }) => temp.push(id));\r\n\t\t\t\tapplyToAllList.map(row => {\r\n\t\t\t\t\tif (temp.indexOf(row.id) === -1) {\r\n\t\t\t\t\t\tlet rowTemp = {\r\n\t\t\t\t\t\t\t...row,\r\n\t\t\t\t\t\t\tstatus: 'NEW'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttempList.push(rowTemp)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn row\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet tempList2 = [\r\n\t\t\t\t\t...tempList,\r\n\t\t\t\t\t...list\r\n\t\t\t\t];\r\n\t\t\t\tlist = tempList2;\r\n\t\t\t}\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...state.selectedItem,\r\n\t\t\t\tlist: list,\r\n\t\t\t\toptionsList: { ...optionsList }\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\t// updateSelectedItem: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...state.selectedItem,\r\n\t\t// \t\t...action.payload\r\n\t\t// \t}\r\n\t\t// \tstate.selectedItem = temp\r\n\t\t// },\r\n\r\n\t\t// setPageable: (state, action) => {\r\n\t\t// \tstate.pageable = action.payload\r\n\t\t// },\r\n\r\n\t\t// setPageableEntity: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...blankPageable\r\n\t\t// \t}\r\n\t\t// \ttemp.list = [action.payload]\r\n\t\t// \tstate.pageable = temp\r\n\t\t// },\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, resetSelectedItem, setOptionsList, updateSelectedItem, setPageable, setPageableEntity, setSearchValue } = GradeLevelSlice.actions\r\n\r\nexport const selectPageable = state => state.gradeLevels.pageable\r\nexport const selectSelectedItem = state => state.gradeLevels.selectedItem\r\nexport const selectSearchValue = state => state.gradeLevels.searchValue\r\n\r\n\r\nexport default GradeLevelSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tperiod: { 'id': '' },\r\n\tpaymentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tpaymentPeriodList: [],\r\n\t\tperiodList: []\r\n\t}\r\n}\r\nexport const AccountPayablesSettingsSlice = createSlice({\r\n\tname: 'accountPayablesSettings',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setOptionsList } = AccountPayablesSettingsSlice.actions\r\n\r\nexport const selectPageable = state => state.accountPayablesSettings.pageable\r\nexport const selectSelectedItem = state => state.accountPayablesSettings.selectedItem\r\nexport const selectSearchValue = state => state.accountPayablesSettings.searchValue\r\n\r\n\r\nexport default AccountPayablesSettingsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon, updatePageableCommon } from '../CommonSlice'\r\n\r\n\r\nexport const optionsList = {\r\n\tbillingSearchBy: [{\r\n\t\tid: '1',\r\n\t\tvalue: 'LRN',\r\n\t\tlabel: 'LRN'\r\n\t}, {\r\n\t\tid: '2',\r\n\t\tvalue: 'STUDENT_NAME',\r\n\t\tlabel: 'Student Name'\r\n\t}]\r\n}\r\nexport const blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tsearchBy: '',\r\n\tsearchFlag: true,\r\n\tpayablesFlag: false,\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t},\r\n\toptionsList: optionsList\r\n}\r\nconst blankSelectedItem = {\r\n\tstudentId: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\tlevel: {\r\n\t\tid: '',\r\n\t\tvalue: '',\r\n\t\tdescription: ''\r\n\t},\r\n\tschool: {\r\n\t\tid: ''\r\n\t}\r\n}\r\n\r\nconst blankConfirmPayables = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tentity: {\r\n\t\tstudentId: '',\r\n\t\tfirstName: '',\r\n\t\tlastName: '',\r\n\t\tlevel: {\r\n\t\t\tid: '',\r\n\t\t\tvalue: '',\r\n\t\t\tdescription: ''\r\n\t\t}\r\n\t},\r\n\tpayables: [],\r\n\tpayablesByInvoiceNo: [],\r\n\topen: false\r\n}\r\n\r\nexport const BillingSlice = createSlice({\r\n\tname: 'billing',\r\n\tinitialState: {\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t},\r\n\t\tconfirmPayables: {\r\n\t\t\t...blankConfirmPayables\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tupdatePageable: (state, action) => updatePageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\r\n\t\tsetConfirmPayables: (state, action) => {\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] action.payload==>`, action.payload)\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] 1 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t\tstate.confirmPayables = {\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] 2 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t},\r\n\t\tupdateConfirmPayables: (state, action) => {\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] action.payload==>`, action.payload)\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] 1 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t\tstate.confirmPayables = {\r\n\t\t\t\t...state.confirmPayables,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] 2 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, updatePageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem, setConfirmPayables, updateConfirmPayables } = BillingSlice.actions\r\n\r\nexport const selectPageable = state => state.billing.pageable\r\nexport const selectSelectedItem = state => state.billing.selectedItem\r\nexport const selectSearchValue = state => state.billing.searchValue\r\nexport const selectConfirmPayables = state => state.billing.confirmPayables\r\n\r\n\r\nexport default BillingSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, setPageableCommon, setPageableEntityCommon, updateSelectedItemCommon } from '../CommonSlice';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\tperiod: { 'id': '' },\r\n\tactive: true,\r\n\tlist: [],\r\n\toptionsList: {\r\n\t\tlevelList: [],\r\n\t\tperiodList: [],\r\n\t\tapplyToAllList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.period == null) {\r\n\t\tdata.period = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const ProcessingSlice = createSlice({\r\n\tname: 'processing',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetOptionsList: (state, action) => {\r\n\t\t\tconsole.log(`[ProcessingSlice.setOptionsList] action=`, action)\r\n\t\t\tconst optionsList = action.payload\r\n\t\t\tlet list = state.selectedItem.accountPayablesSettings ? state.selectedItem.accountPayablesSettings : []\r\n\t\t\tlet applyToAllList = optionsList.applyToAllList;\r\n\t\t\tif (list.length === 0) {\r\n\t\t\t\tlist = [...applyToAllList]\r\n\t\t\t\tlist.map(i => i.status = 'NEW')\r\n\t\t\t} else {\r\n\t\t\t\tlet temp = [];\r\n\t\t\t\tlet tempList = [];\r\n\r\n\t\t\t\tlist.map(({ id }) => temp.push(id));\r\n\t\t\t\tapplyToAllList.map(row => {\r\n\t\t\t\t\tif (temp.indexOf(row.id) === -1) {\r\n\t\t\t\t\t\tlet rowTemp = {\r\n\t\t\t\t\t\t\t...row,\r\n\t\t\t\t\t\t\tstatus: 'NEW'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttempList.push(rowTemp)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn row\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet tempList2 = [\r\n\t\t\t\t\t...tempList,\r\n\t\t\t\t\t...list\r\n\t\t\t\t];\r\n\t\t\t\tlist = tempList2;\r\n\t\t\t}\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...state.selectedItem,\r\n\t\t\t\tlist: list,\r\n\t\t\t\toptionsList: { ...optionsList }\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\t// updateSelectedItem: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...state.selectedItem,\r\n\t\t// \t\t...action.payload\r\n\t\t// \t}\r\n\t\t// \tstate.selectedItem = temp\r\n\t\t// },\r\n\r\n\t\t// setPageable: (state, action) => {\r\n\t\t// \tstate.pageable = action.payload\r\n\t\t// },\r\n\r\n\t\t// setPageableEntity: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...blankPageable\r\n\t\t// \t}\r\n\t\t// \ttemp.list = [action.payload]\r\n\t\t// \tstate.pageable = temp\r\n\t\t// },\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, resetSelectedItem, setOptionsList, updateSelectedItem, setPageable, setPageableEntity, setSearchValue } = ProcessingSlice.actions\r\n\r\nexport const selectPageable = state => state.processing.pageable\r\nexport const selectSelectedItem = state => state.processing.selectedItem\r\nexport const selectSearchValue = state => state.processing.searchValue\r\n\r\n\r\nexport default ProcessingSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport SchoolReducer from './school/SchoolSlice';\r\nimport CodeGroupsReducer from './codeGroups/CodeGroupsSlice';\r\nimport UsersReducer from './endUser/UsersSlice';\r\nimport StudentReducer from './student/StudentSlice';\r\nimport GradeLevelReducer from './gradeLevelPayables/GradeLevelSlice';\r\nimport AccountPayablesSettingsReducer from './accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport BillingReducer from './billing/BillingSlice';\r\nimport ProcessingReducer from './processing/ProcessingSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        school: SchoolReducer,\r\n        codeGroups: CodeGroupsReducer,\r\n        users: UsersReducer,\r\n        students: StudentReducer,\r\n        gradeLevels: GradeLevelReducer,\r\n        accountPayablesSettings: AccountPayablesSettingsReducer,\r\n        billing: BillingReducer,\r\n        processing: ProcessingReducer\r\n    },\r\n});","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"container\">Oooops!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorComponent;","import { Box, Divider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FooterComponent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nfunction Copyright() {\r\n    return (\r\n        <>\r\n            <Box mx=\"auto\" pt={3}><Divider />\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    <Link color=\"inherit\" href=\"https://material-ui.com/\">Your Website</Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nexport default FooterComponent;","import { TablePagination } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst PaginationComponent = (props) => {\r\n return (\r\n  <TablePagination rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n   component=\"div\"\r\n   page={props.paging.currentPage}\r\n   count={props.paging.totalElements}\r\n   rowsPerPage={props.paging.rowsPerPage}\r\n   onChangePage={props.onChangePage}\r\n   onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n  />\r\n )\r\n}\r\nexport default PaginationComponent;","\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Table, TableHead, TableCell, TableBody, FormControl, Input, Grid, IconButton, TableContainer, Paper } from '@material-ui/core';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils'\r\nimport PaginationComponent from './PaginationComponent';\r\n\r\nexport default function CustomTableGrid(props) {\r\n const { showPaging = true, showSearch = true, showAction = true } = props;\r\n\r\n const { register } = useForm();\r\n const [counter, setCounter] = useState(0);\r\n\r\n const doHandleKeyDown = (e) => {\r\n  if (e.key === 'Enter') {\r\n   props.doSearch(e.target.value)\r\n   e.preventDefault();\r\n  }\r\n  setCounter(counter + 1)\r\n }\r\n\r\n return (\r\n  <>\r\n   <Grid container spacing={3}>\r\n    {\r\n     showSearch &&\r\n     <Grid item xs={12} sm={8}>\r\n      <FormControl variant=\"filled\">\r\n       <Input name=\"searchValue\"\r\n        defaultValue={props.store.searchValue}\r\n        onKeyDown={e => doHandleKeyDown(e)}\r\n        placeholder=\"Search\"\r\n        inputRef={register}\r\n        endAdornment={<SearchIcon onClick={() => props.doRetrieve()} />}\r\n       />\r\n       {props.children}\r\n      </FormControl>\r\n     </Grid>\r\n    }\r\n\r\n    {\r\n     showPaging &&\r\n     <Grid item xs={12} sm={4}>\r\n      <PaginationComponent\r\n       paging={props.store.paging}\r\n       onChangePage={props.onChangePage}\r\n       onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n      />\r\n     </Grid>\r\n    }\r\n\r\n   </Grid>\r\n\r\n   <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n    <Table>\r\n     <TableHead>\r\n      <StyledTableHeadRow>\r\n       {props.cols.map(params => (\r\n        <>\r\n         <StyledTableHeadCell key={params.field}>{params.headerName}</StyledTableHeadCell>\r\n        </>\r\n       ))}\r\n       {showAction && <StyledTableHeadCell align=\"right\">\r\n        Action\r\n        <IconButton aria-label=\"add\" onClick={() => props.doNew()}>\r\n         <AddIcon fontSize=\"large\" />\r\n        </IconButton>\r\n       </StyledTableHeadCell>}\r\n\r\n      </StyledTableHeadRow>\r\n     </TableHead>\r\n     <TableBody>\r\n      {props.store.list.map(row => (\r\n       <StyledTableRow key={row.id}>\r\n        {props.cols.map(params => (\r\n         <TableCell>{params.render ? params.render(row) : row[params.field]}</TableCell>\r\n        ))}\r\n        {showAction && <TableCell align=\"right\">\r\n         <IconButton aria-label=\"edit\" onClick={() => props.doEdit(row)}>\r\n          <EditIcon fontSize=\"large\" />\r\n         </IconButton>\r\n         <IconButton aria-label=\"delete\" onClick={() => props.doDelete(row.id)}>\r\n          <DeleteIcon fontSize=\"large\" />\r\n         </IconButton>\r\n        </TableCell>}\r\n\r\n       </StyledTableRow>\r\n      ))}\r\n     </TableBody>\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   {props.showPaging && <PaginationComponent\r\n    paging={props.store.paging}\r\n    doHandleChangePage={props.doHandleChangePage}\r\n    doHandleChangeRowsPerPage={props.doHandleChangeRowsPerPage}\r\n   />}\r\n\r\n  </ >\r\n );\r\n}","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"user\";\r\n\r\nconst sort = \"lastName, firstName\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => {\r\n console.log(`[EndUserService.save] data=`, data)\r\n return axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n}\r\n\r\n\r\nconst EndUserService = () => {\r\n const test = () => {\r\n\r\n }\r\n return [test]\r\n}\r\n\r\nexport default EndUserService\r\n\r\n\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst TitleComponent = (props) => {\r\n return (\r\n  <Box pb={1}>\r\n   <Typography variant=\"h4\">\r\n    {props.children}\r\n   </Typography>\r\n  </Box>\r\n )\r\n}\r\n\r\nexport default TitleComponent","import { createContext, useContext, useState } from 'react';\r\n\r\nconst GlobalVariableContext = createContext();\r\n\r\nfunction useGlobalVariable() {\r\n    const context = useContext(GlobalVariableContext)\r\n    if (!context) {\r\n        throw new Error(`useGlobalVariable must be used within an GlobalVariableProvider`)\r\n    }\r\n    return context;\r\n}\r\n\r\nfunction GlobalVariableProvider(props) {\r\n    const USER_TEMP = {\r\n        userName: '',\r\n        userFullName: 'Guest',\r\n        schoolName: 'SARA PROJECT',\r\n        schoolAddress: '',\r\n        schoolLogo: '',\r\n        schoolId: '',\r\n    }\r\n    const [userLogin, setUserLogin] = useState(USER_TEMP)\r\n    const [globalProps, setGlobalProps] = useState({\r\n        ui: {\r\n            darkMode: false\r\n        },\r\n        alert: {\r\n            title: '',\r\n            label: 'Ok',\r\n            open: false,\r\n            severity: 'info',\r\n            msg: '',\r\n            value: {}\r\n        }\r\n    })\r\n\r\n    const clearUser = () => {\r\n        setUserLogin(USER_TEMP)\r\n    }\r\n\r\n    const setAlertProps = (prop) => {\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            alert: {\r\n                ...globalProps.alert,\r\n                ...prop\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const setUIProps = (prop) => {\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            ui: {\r\n                ...globalProps.ui,\r\n                ...prop\r\n            }\r\n        })\r\n    }\r\n\r\n    const value = {\r\n        globalProps: globalProps,\r\n        USER_TEMP: USER_TEMP,\r\n        userLogin: userLogin,\r\n        clearUser: clearUser,\r\n        setUserLogin: setUserLogin,\r\n        setAlertProps: setAlertProps,\r\n        setUIProps: setUIProps\r\n    }\r\n    return <GlobalVariableContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { GlobalVariableProvider, useGlobalVariable }\r\n\r\n","\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nconst useMessageAlert = () => {\r\n\r\n    const { globalProps, setAlertProps, } = useGlobalVariable();\r\n\r\n    const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n        showMsgAlert('Error', errMsg, 'error')\r\n    }\r\n\r\n    const showErrorAlert = (msg) => {\r\n        showMsgAlert('Error', msg, 'error')\r\n    }\r\n\r\n    const showInfoAlert = (msg) => {\r\n        showMsgAlert('Information', msg, 'info')\r\n    }\r\n\r\n    const showWarningAlert = (msg) => {\r\n        showMsgAlert('Warning', msg, 'warning')\r\n    }\r\n\r\n    const showSuccessAlert = (msg) => {\r\n        showMsgAlert('Alert', msg, 'success')\r\n    }\r\n\r\n    const showMsgAlert = (title, msg, severity) => {\r\n        setAlertProps({\r\n            title: title,\r\n            open: true,\r\n            severity: severity,\r\n            msg: msg\r\n        })\r\n    }\r\n    const closeMsgAlert = () => {\r\n        setAlertProps({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    const getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        console.error(`[useMessageAlert.getFormatedErrorMessage] error=>`, JSON.stringify(error));\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.error(`[${formMethod}] ${serviceName} error `, JSON.stringify(error));\r\n\r\n        if (error.message) {\r\n            console.error(`[useMessageAlert.getFormatedErrorMessage] error.message=>`, JSON.stringify(error.message));\r\n            errMsg = error.message\r\n        }\r\n\r\n        if (error.response) {\r\n            console.error(`[useMessageAlert.getFormatedErrorMessage] error.response=>`, JSON.stringify(error.response));\r\n            // Request made and server responded\r\n            console.log('error.response.data', error.response.data);\r\n            console.log('error.response.status', error.response.status);\r\n            console.log('error.response.headers', error.response.headers);\r\n            if (error.response.data.error && error.response.data.status) {\r\n                errMsg = `[${error.response.data.status}: ${error.response.data.error}] - ${error.response.data.message}`\r\n            } else {\r\n                errMsg = `${error.response.data}`\r\n            }\r\n        }\r\n\r\n        console.error(`[${formMethod}] ${serviceName} error msg: ${errMsg}`);\r\n        return errMsg;\r\n    }\r\n\r\n    return {\r\n        props: globalProps.alert,\r\n        getFormatedErrorMessage: getFormatedErrorMessage,\r\n        closeMsgAlert: closeMsgAlert,\r\n        showErrorMsgAlert: showErrorMsgAlert,\r\n        showErrorAlert: showErrorAlert,\r\n        showInfoAlert: showInfoAlert,\r\n        showWarningAlert: showWarningAlert,\r\n        showSuccessAlert: showSuccessAlert\r\n    }\r\n}\r\nexport default useMessageAlert","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { OPTIONS } from '../../api/Utils';\r\n\r\nexport default function ConfirmMsgDialog(props) {\r\n    const { open, closeDialog, title, msg, type = OPTIONS.YESNO } = props\r\n\r\n    const setReturnValue = (value) => {\r\n        props.closeDialog();\r\n        props.setDialogSelection(value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {console.log(`[ConfirmMsgDialog.return] type=${type}`)}\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <Alert severity=\"info\" align=\"right\">\r\n                        <Typography variant=\"h6\">\r\n                            {title}\r\n                        </Typography>\r\n                    </Alert>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {msg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    {type === OPTIONS.YESNO && <>\r\n                        <Button onClick={() => setReturnValue(OPTIONS.YES)}>{OPTIONS.YES}</Button>\r\n                        <Button onClick={() => setReturnValue(OPTIONS.NO)}>{OPTIONS.NO}</Button>\r\n                    </>}\r\n                    {type === OPTIONS.OKCANCEL && <>\r\n                        <Button onClick={() => setReturnValue(OPTIONS.OK)}>{OPTIONS.OK}</Button>\r\n                        <Button onClick={() => setReturnValue(OPTIONS.CANCEL)}>{OPTIONS.CANCEL}</Button>\r\n                    </>}\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nimport { PAGE_URL, INIT_STATUS, ERROR_CODE, OPTIONS } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/endUser/EndUserService';\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/endUser/UsersSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function EndUserListComponent(props) {\r\n\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.getList'))\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}/-1`);\r\n  }\r\n\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'firstName',\r\n      headerName: 'First Name',\r\n    },\r\n    {\r\n      field: 'lastName',\r\n      headerName: 'Last Name',\r\n      render: function (row) {\r\n        return row.firstName + ' ' + row.lastName;\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Users</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { Box, Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst EndUserDetailHtml = props => {\r\n      const { control, register, handleSubmit } = useForm();\r\n      const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n      const history = useHistory();\r\n\r\n      useEffect(() => {\r\n            if (status === INIT_STATUS.LOAD) {\r\n                  props.doRetrieve(props.store.entityId);\r\n                  setStatus(INIT_STATUS.RESET)\r\n            }\r\n      }, [props.store])\r\n\r\n      return (\r\n            <>\r\n                  {console.log(`[EndUserDetailHtml.return] props.store==>`, props.store)}\r\n                  <TitleComponent>User Detail</TitleComponent>\r\n                  {props.message && <Alert severity=\"info\">{props.message}</Alert>}\r\n                  <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                        <TextField type=\"hidden\"\r\n                              name=\"id\"\r\n                              inputRef={register}\r\n                              defaultValue={props.store.id}\r\n                        />\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"userName\"\r\n                                          name=\"userName\"\r\n                                          label=\"User Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-userName\"\r\n                                          variant=\"filled\"\r\n                                          autoFocus\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.userName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          id=\"password\"\r\n                                          type=\"password\"\r\n                                          name=\"password\"\r\n                                          label=\"Password\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-password\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.password}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"firstName\"\r\n                                          name=\"firstName\"\r\n                                          label=\"First Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-firstName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.firstName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={612}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"lastName\"\r\n                                          name=\"lastName\"\r\n                                          label=\"Last Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-lastName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.lastName}\r\n                                    />\r\n                              </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                              <Box pt={3}>\r\n                                    {/* <TextField id=\"school\"\r\n                                          select\r\n                                          required\r\n                                          name=\"school.id\"\r\n                                          label=\"School\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-school\"\r\n                                          variant=\"filled\"\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.school.id}\r\n                                          error={!!errors.name}\r\n                                    >\r\n                                          {props.store.optionsList.schoolList.map(row => (\r\n                                                <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                          ))}\r\n                                    </TextField> */}\r\n                                    <Controller\r\n                                          as={\r\n                                                <TextField id=\"school\"\r\n                                                      required\r\n                                                      select\r\n                                                      label=\"School\"\r\n                                                      fullWidth\r\n                                                      autoComplete=\"student-school\"\r\n                                                      variant=\"filled\"\r\n                                                      InputLabelProps={{ shrink: true }}\r\n                                                      inputRef={register}\r\n                                                // error={!!errors.name}\r\n                                                >\r\n                                                      {props.store.optionsList.schoolList.map(row => (\r\n                                                            <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                                      ))}\r\n                                                </TextField>\r\n                                          }\r\n                                          name=\"school.id\"\r\n                                          control={control}\r\n                                          defaultValue={props.store.school.id}\r\n                                          options={props.store.optionsList.studentLevelList}\r\n                                    />\r\n                              </Box>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                  </form>\r\n            </ >\r\n      );\r\n};\r\n\r\nexport default EndUserDetailHtml;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getOptions, save } from '../../api/endUser/EndUserService';\r\nimport EndUserDetailHtml from './EndUserDetailHtml';\r\nimport { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport { resetSelectedItem, selectSelectedItem, setOptionsList, setPageableEntity } from '../../api/endUser/UsersSlice';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function EndUserDetailComponent(props) {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n\r\n    setMessage(`Loading. Please wait...`);\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage(``);\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'EndUserDetailComponent.doRetrieve', 'EndUserService.getOptions'))\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage(``);\r\n        props.history.push(PAGE_URL.USER_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'EndUserDetailComponent.onSubmitForm', 'EndUserService.save'))\r\n  }\r\n\r\n\r\n  return (\r\n    <EndUserDetailHtml store={selectedItem}\r\n      doRetrieve={doRetrieve}\r\n      onSubmitForm={onSubmitForm}\r\n      message={message} />\r\n\r\n  );\r\n}\r\n\r\n\r\n","import axios from \"axios\"\r\nimport { AUTH_URL_BASE, AUTH_USER, AUTH_USER_OBJ, JWT_TOKEN } from \"../api/Utils\"\r\n\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nlet myInterceptor\r\n\r\nconst useSecurityServices = () => {\r\n const { userLogin, setUserLogin, clearUser } = useGlobalVariable();\r\n\r\n const initAxios = () => {\r\n  if (isUserLoggedIn()) {\r\n   let jwtTokenHeader = getJwtTokenHeader()\r\n   setupAxiosInterceptors(jwtTokenHeader);\r\n  }\r\n }\r\n\r\n const initUser = () => {\r\n  let lu = getLoggedUserObj()\r\n  if (lu == null) {\r\n   clearUser()\r\n  } else {\r\n   setUserLogin(lu);\r\n  }\r\n\r\n }\r\n\r\n const executeJwtAuthenticationService = (username, password) => {\r\n  console.log('[useSecurityServices.executeJwtAuthenticationService]');\r\n\r\n  return axios.post(`${AUTH_URL_BASE}`, { username, password })\r\n }\r\n\r\n const registerJwtSucessfulLogin = (userLogin, jwtToken) => {\r\n  console.log('[useSecurityServices.registerJwtSucessfulLogin] jwtToken=', jwtToken);\r\n  console.log('[useSecurityServices.registerJwtSucessfulLogin] userObj=', userLogin);\r\n  sessionStorage.setItem(AUTH_USER_OBJ, JSON.stringify(userLogin));\r\n  sessionStorage.setItem(AUTH_USER, userLogin.userName);\r\n  sessionStorage.setItem(JWT_TOKEN, jwtToken);\r\n\r\n\r\n  let jwtTokenHeader = getJwtTokenHeader()\r\n  setupAxiosInterceptors(jwtTokenHeader);\r\n }\r\n\r\n const getJwtTokenHeader = () => {\r\n  let jwtToken = getJwtToken();\r\n  let jwtTokenHeader = `Bearer ${jwtToken}`;\r\n  return jwtTokenHeader;\r\n }\r\n\r\n const getJwtToken = () => sessionStorage.getItem(JWT_TOKEN)\r\n\r\n const setupAxiosInterceptors = (authHeader) => {\r\n  console.log('[useSecurityServices.setupAxiosInterceptors] init..');\r\n  console.log(`[useSecurityServices.setupAxiosInterceptors] authHeader: ${authHeader}`);\r\n  myInterceptor = axios.interceptors.request.use(\r\n   async config => {\r\n    if (isUserLoggedIn()) {\r\n     config.headers.authorization = authHeader;\r\n    }\r\n    return config;\r\n   }\r\n  );\r\n  console.log('[useSecurityServices.setupAxiosInterceptors] done!');\r\n }\r\n\r\n const isUserLoggedIn = () => {\r\n  let user = getSessionStorageLoginUser()\r\n  return (user != null);\r\n }\r\n\r\n const getSessionStorageLoginUser = () => sessionStorage.getItem(AUTH_USER)\r\n\r\n const getLoggedUserObj = () => {\r\n  let user = JSON.parse(sessionStorage.getItem(AUTH_USER_OBJ));\r\n  console.error('[useSecurityServices.getLoggedUserObj] 1 user=>', user);\r\n  if (!user) {\r\n   user = null;\r\n  }\r\n  console.error('[useSecurityServices.getLoggedUserObj] 2 user=>', user);\r\n  return user;\r\n  // return {}\r\n }\r\n\r\n const logout = () => {\r\n  axios.interceptors.request.eject(myInterceptor);\r\n  sessionStorage.removeItem(AUTH_USER);\r\n  sessionStorage.removeItem(AUTH_USER_OBJ);\r\n  sessionStorage.removeItem(JWT_TOKEN);\r\n\r\n  clearUser()\r\n  console.log('[useSecurityServices.logout]  userLogin=>', userLogin);\r\n }\r\n\r\n return {\r\n  initAxios: initAxios,\r\n  initUser: initUser,\r\n  executeJwtAuthenticationService: executeJwtAuthenticationService,\r\n  registerJwtSucessfulLogin: registerJwtSucessfulLogin,\r\n  getLoggedUserObj: getLoggedUserObj,\r\n  isUserLoggedIn: isUserLoggedIn,\r\n  logout: logout\r\n }\r\n\r\n}\r\n\r\nexport default useSecurityServices;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport useSecurityServices from './useSecurityServices'\r\n\r\nconst AuthenticatedRoute = (props) => {\r\n    const { isUserLoggedIn } = useSecurityServices()\r\n\r\n    const isLoggedin = isUserLoggedIn()\r\n    console.log(`[AuthenticatedRoute] isLoggedin=>`, isLoggedin)\r\n    if (isLoggedin) {\r\n        return <Route {...props} />;\r\n    } else {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        backgroundColor:\r\n            theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    login_paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    login_avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    login_form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login_submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n    avatar_40: {\r\n        width: theme.spacing(40),\r\n        height: theme.spacing(40),\r\n    },\r\n    avatar_70: {\r\n        width: theme.spacing(70),\r\n        height: theme.spacing(70),\r\n    }\r\n}));\r\n\r\nclass CSS {\r\n\r\n}\r\n\r\nexport default new CSS();","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useStyles } from '../forms/common/CSS'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst SignInHtml = props => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  function onSubmitForm(formData) {\r\n    props.onSignon(formData.userName, formData.password);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.login_paper}>\r\n        <Avatar className={classes.login_avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n        <form className={classes.login_form} onSubmit={handleSubmit(onSubmitForm)}>\r\n\r\n          <TextField type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userName\"\r\n            label=\"User Name\"\r\n            name=\"userName\"\r\n            autoComplete=\"userName\"\r\n            autoFocus\r\n            inputRef={register}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignInHtml;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { ERROR_CODE } from '../api/Utils.js';\r\nimport useMessageAlert from \"../api/useMessageAlert\"\r\nimport SignInHtml from './SignInHtml.js';\r\nimport useSecurityServices from './useSecurityServices.js';\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nexport default function SignInComponent() {\r\n\r\n  const { userLogin, setUserLogin } = useGlobalVariable();\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const { executeJwtAuthenticationService, registerJwtSucessfulLogin } = useSecurityServices()\r\n\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const onSignon = (userName, password) => {\r\n    console.error(`[SignInComponent.onSignon] userName=${userName}`)\r\n    setMessage('');\r\n\r\n    executeJwtAuthenticationService(userName, password)\r\n      .then(response => {\r\n        const userDetails = {\r\n          ...response.data.userDetails,\r\n          isLoggedIn: true\r\n        }\r\n        registerJwtSucessfulLogin(userDetails, response.data.token)\r\n        setUserLogin(userDetails);// setUserObj(userDetails)\r\n\r\n        console.error(`[SignInComponent.onSignon useSec.registerJwtSucessfulLogin] userDetails=`, userDetails)\r\n        console.error(`[SignInComponent.onSignon useSec.registerJwtSucessfulLogin] userLogin=`, userLogin)\r\n\r\n        setMessage('Login Successful!');\r\n        history.push(`/`);\r\n      })\r\n      // .catch(error => showErrorMsgAlert(error, ERROR_CODE.LOGIN_ERROR, 'SignInComponent.onSignon', 'useAuthServices.executeJwtAuthenticationService'))\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LOGIN_ERROR, 'SignInComponent.onSignon', 'useAuthServices.executeJwtAuthenticationService'))\r\n  }\r\n  return (\r\n    <SignInHtml message={message} onSignon={onSignon} />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport useSecurityServices from './useSecurityServices'\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nexport default function LogoutComponent() {\r\n    const { userLogin } = useGlobalVariable();\r\n    const { logout } = useSecurityServices()\r\n\r\n    useEffect(() => {\r\n        console.log('[LogoutComponent.useEffect]: userLogin', userLogin);\r\n        logout();\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <h1>You are logged out</h1>\r\n            <div className=\"container\">\r\n                Thank you. Come again!\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"codeGroups\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function CodeGroupsService() {\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList } from '../../api/codeGroups/CodeGroupsService';\r\nimport { selectPageable, resetSelectedItem, setPageable, setSelectedItem } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert  from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function CodeGroupsListComponent(props) {\r\n  const {showErrorMsgAlert} = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'CodeGroupsListComponent.retrieve', 'CodeGroupsService.getList'))\r\n\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}/-1`)\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.DELETE_ERROR, 'CodeGroupsListComponent.doDelete', 'CodeGroupsService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'code',\r\n      headerName: 'Code',\r\n    },\r\n    {\r\n      field: 'value',\r\n      headerName: 'Value',\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Code Groups List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nimport { selectSelectedItem, resetSelectedItem, setPageableEntity } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport { save } from '../../api/codeGroups/CodeGroupsService';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function CodeGroupsDetailComponent(props) {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem, status]);\r\n\r\n  const doSave = data => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.CODE_GROUPS_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[CodeGroupsDetailComponent.render] selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Code Groups Detail</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id=\"code\"\r\n              name=\"code\"\r\n              label=\"Code\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-code\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.code}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={5}>\r\n            <TextField\r\n              required\r\n              id=\"value\"\r\n              name=\"value\"\r\n              label=\"Value\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-value\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.value}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"priority\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-priority\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-description\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n            <Grid item xs={12} sm={12}>&nbsp;</Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                multiline\r\n                rows={4}\r\n                id=\"json\"\r\n                name=\"json\"\r\n                label=\"JSON\"\r\n                fullWidth\r\n                autoComplete=\"code-groups-json\"\r\n                variant=\"filled\"\r\n                InputLabelProps={{ shrink: true }}\r\n                inputRef={register}\r\n                defaultValue={selectedItem.json}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Chart extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\r\n\r\n  render() {\r\n    return (\r\n      <LineChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\nexport default class StackedBarChart extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/90v76x08/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 20, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n    <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\n\r\nconst getIntroOfPage = (label) => {\r\n if (label === 'Page A') {\r\n  return \"Page A is about men's clothing\";\r\n } if (label === 'Page B') {\r\n  return \"Page B is about women's dress\";\r\n } if (label === 'Page C') {\r\n  return \"Page C is about women's bag\";\r\n } if (label === 'Page D') {\r\n  return 'Page D is about household goods';\r\n } if (label === 'Page E') {\r\n  return 'Page E is about food';\r\n } if (label === 'Page F') {\r\n  return 'Page F is about baby food';\r\n }\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n if (active) {\r\n  return (\r\n   <div className=\"custom-tooltip\">\r\n    <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n    <p className=\"intro\">{getIntroOfPage(label)}</p>\r\n    <p className=\"desc\">Anything you want can be displayed here.</p>\r\n   </div>\r\n  );\r\n }\r\n\r\n return null;\r\n};\r\n\r\nexport default class CustomContentOfTooltip extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/vxq4ep63/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 5, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip content={<CustomTooltip />} />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" barSize={20} fill=\"#8884d8\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React from 'react';\r\nimport faker from 'faker'\r\nimport { URL_BASE } from '../../api/Utils'\r\nimport { useStyles } from '../common/CSS'\r\n\r\nimport { Avatar, Box, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport Chart from './Chart';\r\nimport StackedBarChart from './StackedBarChart';\r\nimport CustomContentOfTooltip from './CustomContentOfTooltip';\r\n\r\nimport useSecurityServices from '../../security/useSecurityServices'\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  console.log(`[Dashboard] process.env.NODE_ENV= ${process.env.NODE_ENV}`)\r\n  console.log(`[Dashboard] URL_BASE= ${URL_BASE}`)\r\n\r\n  const useSec = useSecurityServices()\r\n  const isLogin = useSec.isUserLoggedIn()\r\n\r\n  console.log(`[Dashboard] isLogin=${isLogin}`)\r\n  return (\r\n    <> {\r\n      !isLogin &&\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.fashion(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.people(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.food(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n      </Grid>\r\n    }\r\n\r\n      {\r\n        isLogin &&\r\n        <>\r\n          <Box component={Paper} elevation={3} variant=\"elevation\" px={3} py={3} m=\"auto\">\r\n            <Typography variant=\"h4\">Chart samples click <a href=\"https://recharts.org/en-US/examples\">here</a></Typography>\r\n            <Grid container spacing={5}>\r\n              <Grid item xs={12} sm={4}>\r\n                <Chart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <StackedBarChart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <CustomContentOfTooltip />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </>\r\n      }\r\n    </ >\r\n  )\r\n}","import React from 'react';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PAGE_URL } from '../../api/Utils'\r\nimport { Divider } from '@material-ui/core';\r\nimport useSecurityServices from '../../security/useSecurityServices';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function MenuListItems() {\r\n  const { isUserLoggedIn } = useSecurityServices()\r\n  const isLoggedIn = isUserLoggedIn();\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [store, setStore] = React.useState({});\r\n\r\n  const doHandleClick = (sourceName) => {\r\n    console.log(`[MenuListItems.doHandleClick] sourceName=${sourceName}, store=>`, store)\r\n\r\n    let isopen = store[sourceName] ? false : true;\r\n    setStore({\r\n      ...store,\r\n      [sourceName]: isopen\r\n    })\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    // subheader={\r\n    //  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n    //   Menu\r\n    //  </ListSubheader>\r\n    // }\r\n    >\r\n      {\r\n        isLoggedIn && <>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.BILLING)}>\r\n            <ListItemIcon>\r\n              <AccountBalanceWalletIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Billing\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Payables Settings\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIndIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Level Payables\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.STUDENT_LIST)}>\r\n            <ListItemIcon>\r\n              <LocalLibraryIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Student\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.SCHOOL_LIST)} >\r\n            <ListItemIcon>\r\n              <SchoolIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"School\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.USER_LIST)} >\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)}>\r\n            <ListItemIcon>\r\n              <CodeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Code Groups\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => doHandleClick(\"processing\")}>\r\n            <ListItemIcon>\r\n              <AllInclusiveIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Processing\" />\r\n            {store.processing ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={store.processing} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested} onClick={() => history.push(PAGE_URL.CLOSE_PERIOD_DETAIL_URL)} >\r\n                <ListItemIcon>\r\n                  <ArchiveIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Close Period\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested} >\r\n                <ListItemIcon>\r\n                  <SystemUpdateAltIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Generate Billing\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </>\r\n      }\r\n\r\n      {isLoggedIn &&\r\n        <>\r\n          <Divider />\r\n          <ListItem button onClick={() => history.push(PAGE_URL.LOGOUT)} >\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </>\r\n      }\r\n\r\n      {!isLoggedIn &&\r\n        <ListItem button onClick={() => history.push(PAGE_URL.LOGIN)} >\r\n          <ListItemIcon>\r\n            <VpnKeyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Login\" />\r\n        </ListItem>}\r\n\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuListItems from './MenuListItems';\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStylesDrawer = makeStyles((theme) => ({\r\n drawer: {\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: 'nowrap',\r\n },\r\n drawerOpen: {\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n },\r\n drawerClose: {\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: theme.spacing(7) + 1,\r\n  [theme.breakpoints.up('sm')]: {\r\n   width: theme.spacing(9) + 1,\r\n  },\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n const classes = useStylesDrawer();\r\n const theme = useTheme();\r\n\r\n return (\r\n  <Drawer\r\n   variant=\"permanent\"\r\n   className={clsx(classes.drawer, {\r\n    [classes.drawerOpen]: props.drawerOpen,\r\n    [classes.drawerClose]: !props.drawerOpen,\r\n   })}\r\n   classes={{\r\n    paper: clsx({\r\n     [classes.drawerOpen]: props.drawerOpen,\r\n     [classes.drawerClose]: !props.drawerOpen,\r\n    }),\r\n   }}\r\n  >\r\n   <div className={classes.toolbar}>\r\n    <IconButton onClick={props.doHandleDrawerClose}>\r\n     {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n    </IconButton>\r\n   </div>\r\n   <Divider />\r\n   <MenuListItems />\r\n  </Drawer>\r\n );\r\n}\r\n","\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nexport const THEME = {\r\n DARK_MODE: 'dark',\r\n LIGHT_MODE: 'light',\r\n THEME_STORAGE_NAME: 'THEME_DARK_MODE'\r\n}\r\n\r\nexport const useTheme = () => {\r\n\r\n const { globalProps, setUIProps } = useGlobalVariable();\r\n\r\n const initTheme = () => {\r\n  const darkMode = localStorage.getItem(THEME.THEME_STORAGE_NAME);\r\n  setUIProps({\r\n   darkMode: darkMode === 'Y' ? true : false\r\n  });\r\n }\r\n\r\n const toggleDarkMode = () => {\r\n  setUIProps({\r\n   darkMode: !globalProps.ui.darkMode\r\n  });\r\n  localStorage.setItem(THEME.THEME_STORAGE_NAME, !globalProps.ui.darkMode ? 'Y' : 'N');\r\n }\r\n\r\n return {\r\n  props: globalProps.ui,\r\n  initTheme: initTheme,\r\n  toggleDarkMode: toggleDarkMode\r\n }\r\n}\r\n","\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { AppBar, IconButton, Toolbar, Typography, Avatar, Box, FormControlLabel, Switch, makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nimport { PAGE_URL, URL_BASE } from '../../api/Utils'\r\nimport MiniDrawer from './MiniDrawer';\r\nimport { useTheme } from '../../api/useTheme';\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider'\r\n\r\nexport default function AppBarComponent() {\r\n const { userLogin } = useGlobalVariable();\r\n\r\n const useAppTheme = useTheme()\r\n\r\n const drawerWidth = 240;\r\n const useStylesAppBar = makeStyles((theme) => ({\r\n  root: {\r\n   display: 'flex',\r\n  },\r\n  appBar: {\r\n   zIndex: theme.zIndex.drawer + 1,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n   }),\r\n  },\r\n  appBarShift: {\r\n   marginLeft: drawerWidth,\r\n   width: `calc(100% - ${drawerWidth}px)`,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n   }),\r\n  },\r\n  menuButton: {\r\n   marginRight: 36,\r\n  },\r\n  hide: {\r\n   display: 'none',\r\n  },\r\n  title: {\r\n   flexGrow: 1,\r\n   display: 'none',\r\n   [theme.breakpoints.up('sm')]: {\r\n    display: 'block',\r\n    paddingLeft: theme.spacing(1)\r\n   },\r\n   //backgroundColor: fade(theme.palette.common.white, 0.25),\r\n  },\r\n }));\r\n // const [userObj, setUserObj] = useState({\r\n //  userName: '',\r\n //  userFullName: 'Guest',\r\n //  schoolName: '',\r\n //  schoolLogo: ''\r\n // });\r\n\r\n const classes = useStylesAppBar();\r\n // const userName = AuthenticationService.getLoginUserName();\r\n // const isLogin = AuthenticationService.isUserLoggedIn();\r\n\r\n // printme(userObj);\r\n\r\n const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n const doHandleDrawerOpen = () => {\r\n  setDrawerOpen(true);\r\n  console.log(`[AppBarComponent.doHandleDrawerOpen] drawerOpen=>${drawerOpen}`)\r\n }\r\n const doHandleDrawerClose = () => {\r\n  setDrawerOpen(false);\r\n  console.log(`[AppBarComponent.doHandleDrawerClose] doHandleDrawerClose=>${drawerOpen}`)\r\n }\r\n return (\r\n  < div className={classes.root} >\r\n   {console.log('[AppBarComponent.return] userLogin=>', userLogin)}\r\n   <AppBar\r\n    position=\"fixed\"\r\n    className={clsx(classes.appBar, {\r\n     [classes.appBarShift]: drawerOpen,\r\n    })}>\r\n    <Toolbar>\r\n     <IconButton\r\n      color=\"inherit\"\r\n      aria-label=\"open drawer\"\r\n      onClick={doHandleDrawerOpen}\r\n      edge=\"start\"\r\n      className={clsx(classes.menuButton, {\r\n       [classes.hide]: drawerOpen,\r\n      })}\r\n     >\r\n      <MenuIcon />\r\n     </IconButton>\r\n\r\n     {userLogin && userLogin.schoolLogo && <Avatar src={(URL_BASE + PAGE_URL.LOGO_URL + userLogin.schoolLogo)} />}\r\n     {(!userLogin || !userLogin.schoolLogo) && <SchoolIcon />}\r\n\r\n     <Typography className={classes.title} variant=\"h6\" noWrap>\r\n      <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n       {userLogin && <b>{userLogin.schoolName}</b>}\r\n      </Link>\r\n     </Typography>\r\n     {userLogin && <div>Welcome <b>{userLogin.userFullName}</b></div>}\r\n\r\n     <Box pl={5}>\r\n      <FormControlLabel control={<Switch checked={useAppTheme.props.darkMode} onChange={() => useAppTheme.toggleDarkMode()} />} />\r\n     </Box>\r\n    </Toolbar>\r\n   </AppBar>\r\n   <MiniDrawer drawerOpen={drawerOpen} doHandleDrawerClose={doHandleDrawerClose} />\r\n  </div >\r\n );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Divider, FormControlLabel, FormLabel, Grid, MenuItem, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst StudentDetailHtml = props => {\r\n\r\n  const { control, register, handleSubmit, reset } = useForm();\r\n  const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setCounter(counter + 1);\r\n    console.log(`[StudentDetailHtml.useEffect] status=>${status}, counter=${counter}`);\r\n    if (status === INIT_STATUS.LOAD) {\r\n      props.onRetrieve();\r\n      setStatus(INIT_STATUS.RESET)\r\n    }\r\n    reset(props.store)\r\n  }, [props.store])\r\n\r\n  const BUTTONS = () => {\r\n    return (\r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.STUDENT_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.STUDENT_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <TitleComponent>Student Detail</TitleComponent>\r\n      {props.message && <Alert severity=\"info\">{props.message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n        <BUTTONS />\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={props.store.id}\r\n        />\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"lrn\"\r\n              name=\"lrn\"\r\n              label=\"LRN\"\r\n              fullWidth\r\n              autoComplete=\"lrn\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lrn}\r\n            />\r\n          </Grid>\r\n          {/* <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"studentId\"\r\n              name=\"studentId\"\r\n              label=\"Student Id\"\r\n              fullWidth\r\n              autoComplete=\"studentId\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.studentId}\r\n            />\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.firstName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              autoComplete=\"family-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lastName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"level\"\r\n                  required\r\n                  select\r\n                  name=\"level.id\"\r\n                  label=\"Grade Level\"\r\n                  fullWidth\r\n                  autoComplete=\"student level\"\r\n                  variant=\"filled\"\r\n                  inputRef={register}\r\n                >\r\n                  {props.store.optionsList.studentLevelList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"level.id\"\r\n              control={control}\r\n              defaultValue={props.store.level.id}\r\n              options={props.store.optionsList.studentLevelList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthDate\"\r\n              name=\"birthDate\"\r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              fullWidth\r\n              autoComplete=\"birth-date\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.birthDate}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"birthPlace\"\r\n              name=\"birthPlace\"\r\n              label=\"Birth Place\"\r\n              fullWidth\r\n              autoComplete=\"birth-place\"\r\n              InputLabelProps={{ shrink: true }}\r\n              variant=\"filled\"\r\n              inputRef={register}\r\n              defaultValue={props.store.birthPlace}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <FormLabel component=\"gender\"\r\n              variant=\"filled\">Gender</FormLabel>\r\n            <Controller\r\n              as={\r\n                <RadioGroup row\r\n                  label=\"Gender\"\r\n                  aria-label=\"gender\"\r\n                  variant=\"filled\">\r\n                  <FormControlLabel\r\n                    value=\"Male\"\r\n                    control={<Radio\r\n                      variant=\"filled\" />}\r\n                    label=\"Male\"\r\n                    labelPlacement=\"end\"\r\n                    defaultValue={props.store.gender}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                    labelPlacement=\"end\"\r\n                    variant=\"filled\" defaultValue={props.store.gender}\r\n                  />\r\n                </RadioGroup>\r\n              }\r\n              name=\"gender\"\r\n              fullWidth\r\n              defaultValue={props.store.gender}\r\n              inputRef={register}\r\n              variant=\"filled\"\r\n              control={control}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={5}>\r\n            <TextField\r\n              required\r\n              id=\"contactNo\"\r\n              name=\"contactNo\"\r\n              label=\"Contact No\"\r\n              fullWidth\r\n              autoComplete=\"contactNo\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.contactNo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" >Address:</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n\r\n            <TextField\r\n              id=\"address.address1\"\r\n              name=\"address1\"\r\n              label=\"Address line 1\"\r\n              fullWidth\r\n              autoComplete=\"shipping address1\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address1}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"address.address2\"\r\n              name=\"address2\"\r\n              label=\"Address line 2\"\r\n              fullWidth\r\n              autoComplete=\"shipping address2\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address2}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.city\"\r\n              name=\"city\"\r\n              label=\"City\"\r\n              fullWidth\r\n              autoComplete=\"shipping address city\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.city}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.zip\"\r\n              name=\"zipCode\"\r\n              label=\"Zip / Postal code\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-code\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.zipCode}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField editable={false}\r\n              required\r\n              id=\"address.country\"\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-country\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.country}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}><Typography variant=\"h6\" >Parent/Guardian:</Typography></Grid>\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"fathersName\"\r\n              name=\"fathersName\"\r\n              label=\"Father's Name\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"fathersOccupation\"\r\n              name=\"fathersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"mothersName\"\r\n              name=\"mothersName\"\r\n              label=\"Mother's Name\"\r\n              fullWidth\r\n              autoComplete=\"mothersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"mothersOccupation\"\r\n              name=\"mothersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"mothersOccupation\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersOccupation}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"parentCivilStatus\"\r\n              name=\"parentCivilStatus\"\r\n              label=\"Parent CivilStatus\"\r\n              fullWidth\r\n              autoComplete=\"parentCivilStatus\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.parentCivilStatus}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} />\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"guardianName\"\r\n              name=\"guardianName\"\r\n              label=\"Guardian Name\"\r\n              fullWidth\r\n              autoComplete=\"guardianName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.guardianName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <BUTTONS />\r\n\r\n      </form>\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\nexport default StudentDetailHtml;","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"student\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlDetailsPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport  const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport  const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function StudentService  () {\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport StudentDetailHtml from './StudentDetailHtml.js';\r\nimport { save, getOptions } from '../../api/student/StudentService'\r\nimport { selectSelectedItem, setOptionsList, setPageableEntity, resetSelectedItem } from '../../api/student/StudentSlice';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function StudentDetailComponent(props) {\r\n\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log('[StudentDetailComponent.onSubmitForm] data==>', data)\r\n\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        props.history.push(PAGE_URL.STUDENT_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'StudentDetailComponent.onSubmitForm', 'StudentService.save'));\r\n  }\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[StudentDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    setMessage(`Loading. Please wait...`);\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage(``)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'StudentDetailComponent.onRetrieve', 'StudentService.getOptions'));\r\n  }\r\n\r\n  return (\r\n    <StudentDetailHtml\r\n      store={selectedItem}\r\n      message={message}\r\n      onSubmitForm={onSubmitForm}\r\n      onRetrieve={onRetrieve}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils';\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/student/StudentService'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/student/StudentSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function StudentListComponent(props) {\r\n\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [currPageable]);\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.retrieve', 'StudentService.getList'))\r\n\r\n\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[StudentListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.doDelete', 'StudentService.deleteItem'))\r\n  }\r\n\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  const cols = [\r\n    // {\r\n    //   field: 'studentId',\r\n    //   headerName: 'Student ID',\r\n    // },\r\n    {\r\n      field: 'lrn',\r\n      headerName: 'LRN',\r\n    },\r\n    {\r\n      headerName: 'Name',\r\n      render: function (row) {\r\n        return <>\r\n          {row.firstName} {row.lastName}\r\n        </>\r\n      }\r\n    },\r\n    {\r\n      field: 'gender',\r\n      headerName: 'Gender',\r\n    },\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return <>\r\n          {row.level && row.level.description}\r\n        </>\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Student List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"school\";\r\nconst sort = \"schoolYear,name\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\n\r\nexport default function SchoolService() {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport TitleComponent from '../common/TitleComponent'\r\n\r\nimport { save, getOptions } from '../../api/school/SchoolService'\r\nimport {\r\n  selectSelectedItem,\r\n  setSelectedItem,\r\n  setPageableEntity,\r\n  updateSelectedItem,\r\n  blankSelectedItem,\r\n  setOptionsList,\r\n  resetSelectedItem,\r\n} from '../../api/school/SchoolSlice'\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function SchoolDetailComponent(props) {\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { control, register, handleSubmit } = useForm()\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...')\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT)\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      `[SchoolDetailComponent.useEffect] status=${status}, selectedItem==>`,\r\n      selectedItem\r\n    )\r\n\r\n    if (selectedItem.currentPeriod == null) {\r\n      dispatch(\r\n        updateSelectedItem({\r\n          currentPeriod: { id: '' },\r\n        })\r\n      )\r\n    }\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(setSelectedItem(blankSelectedItem))\r\n      }\r\n      doRetrieve()\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem])\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n\r\n    setMessage('Loading. Please wait...')\r\n\r\n    getOptions().then((response) => {\r\n      dispatch(setOptionsList(response.data.listService))\r\n      setMessage('')\r\n    })\r\n      .catch((error) =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.RETRIEVE_ERROR,\r\n          'SchoolDetailComponent.doRetrieve',\r\n          'SchoolService.getOptions'\r\n        )\r\n      )\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log(\r\n      `[SchoolDetailComponent.onSubmitForm] data = `, data\r\n    )\r\n    setMessage('Saving...')\r\n    console.log(\r\n      `[SchoolDetailComponent.onSubmitForm] message = `, message\r\n    )\r\n    save(data)\r\n      .then((response) => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.SCHOOL_LIST)\r\n      })\r\n      .catch((error) =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.SAVE_ERROR,\r\n          'SchoolDetailComponent.save',\r\n          'SchoolService.save'\r\n        )\r\n      )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(\r\n        `[SchoolDetailComponent.render] selectedItem ==> `,\r\n        selectedItem\r\n      )}\r\n      <TitleComponent>School Detail</TitleComponent>\r\n      {message && <Alert severity='info'>{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(onSubmitForm)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          type='hidden'\r\n          name='id'\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id='name'\r\n              name='name'\r\n              label='Name'\r\n              fullWidth\r\n              autoComplete='school-name'\r\n              autoFocus\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"currentPeriod\"\r\n                  required\r\n                  select\r\n                  label=\"Current Period\"\r\n                  fullWidth\r\n                  autoComplete=\"school-currentPeriod\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.periodList.map(({ id, description }) => (\r\n                    <MenuItem key={id} value={id}>{description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"currentPeriod.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.currentPeriod.id}\r\n              options={selectedItem.optionsList.periodList}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id='logo'\r\n              name='logo'\r\n              label='Logo'\r\n              fullWidth\r\n              autoComplete='school-logo'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.logo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id='address'\r\n              name='address'\r\n              label='Address'\r\n              fullWidth\r\n              autoComplete='school-address'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.address}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport { deleteItem, getList } from '../../api/school/SchoolService'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem, } from '../../api/school/SchoolSlice'\r\nimport TitleComponent from '../common/TitleComponent'\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog'\r\n\r\nexport default function SchoolListComponent(props) {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const dispatch = useDispatch()\r\n  const currPageableSchools = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [])\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage).then(\r\n      ({ data }) =>\r\n        dispatch(\r\n          setPageable({\r\n            INIT_STATUS: INIT_STATUS.LOAD,\r\n            list: data.pagingList.content,\r\n            searchValue: searchValue,\r\n            paging: {\r\n              rowsPerPage: data.pagingList.size,\r\n              currentPage: data.pagingList.pageable.pageNumber,\r\n              totalElements: data.pagingList.totalElements,\r\n              totalPage: data.pagingList.totalPage,\r\n            },\r\n          })\r\n        )).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n\r\n\r\n  const doRetrieve = () =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: currPageableSchools.paging,\r\n    })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}`)\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}/-1`)\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[SchoolListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) =>\r\n    deleteItem(id)\r\n      .then(doRetrieve())\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n  const doHandleChangePage = (e, newPage) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        currentPage: newPage,\r\n      },\r\n    })\r\n\r\n  const doHandleChangeRowsPerPage = (e) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0,\r\n      },\r\n    })\r\n\r\n  const doSearch = (searchValue) =>\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n      },\r\n    })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n    },\r\n    {\r\n      headerName: 'Current Period',\r\n      render: function (row) {\r\n        return row.currentPeriod ? row.currentPeriod.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'logo',\r\n      headerName: 'Logo',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Schools</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageableSchools}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </>\r\n  )\r\n}\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst SubTitleComponent = (props) => {\r\n return (\r\n  <>\r\n   <Box>\r\n    <Typography variant=\"h5\">{props.children}</Typography>\r\n   </Box>\r\n  </>\r\n )\r\n}\r\n\r\nexport default SubTitleComponent","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead } from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\n\r\nimport { PAGE_URL, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\nimport PaginationComponent from '../common/PaginationComponent';\r\nimport SubTitleComponent from '../common/SubTitleComponent';\r\n\r\nconst SearchResultsHtmlComponent = (props) => {\r\n const { list, paging } = props.store;\r\n const history = useHistory();\r\n\r\n\r\n const doEditUser = id => history.push(PAGE_URL.STUDENT_DETAIL_URL + '/' + id)\r\n\r\n const doShowPayables = (row) => props.doPayables(row.id, row.school.currentPeriod.id)\r\n\r\n const CustomTableHead = () => {\r\n  return (<>\r\n   <TableHead>\r\n    <StyledTableHeadRow>\r\n     <StyledTableHeadCell>LRN</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Name</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Grade Level</StyledTableHeadCell>\r\n\r\n    </StyledTableHeadRow>\r\n   </TableHead>\r\n  </>)\r\n }\r\n const CustomTableBody = () => {\r\n  return (<>\r\n   <TableBody>\r\n    {list.map(row => (\r\n     <StyledTableRow key={row.id}>\r\n      <TableCell variant=\"head\">{row.lrn}</TableCell>\r\n      <TableCell>{row.firstName} {row.lastName}</TableCell>\r\n      <TableCell>{row.level.description}</TableCell>\r\n      <TableCell align=\"right\">\r\n       <IconButton aria-label=\"payment\" onClick={() => doShowPayables(row)}>\r\n        <AccountBalanceWalletIcon fontSize=\"large\" />\r\n       </IconButton>\r\n       <IconButton aria-label=\"edit\" onClick={() => doEditUser(row.id)}>\r\n        <EditIcon fontSize=\"large\" />\r\n       </IconButton>\r\n      </TableCell>\r\n     </StyledTableRow>\r\n    ))}\r\n   </TableBody>\r\n  </>)\r\n }\r\n\r\n return (\r\n  <>\r\n   <SubTitleComponent>Search Results</SubTitleComponent>\r\n   {/* <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   /> */}\r\n\r\n   <TableContainer component={Paper}>\r\n    <Table>\r\n     <CustomTableHead />\r\n     <CustomTableBody />\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   />\r\n  </>\r\n )\r\n}\r\n\r\nexport default SearchResultsHtmlComponent;","import React from 'react';\r\nimport { Grid, MenuItem, TextField } from \"@material-ui/core\";\r\n\r\nexport default function SelectGrid({ sm, name, label, options, ...rest }) {\r\n return (<>\r\n  <Grid item xs={12} sm={sm}>\r\n   <TextField id={name}\r\n    select\r\n    name={name}\r\n    label={label}\r\n    variant=\"filled\"\r\n    fullWidth\r\n    InputLabelProps={{ shrink: true }}\r\n    autoComplete={label + \"-\" + name}\r\n    {...rest}\r\n   >\r\n    {options.map(({ id, description }) => (\r\n     <MenuItem key={id} value={id}>{description}</MenuItem>\r\n    ))}\r\n   </TextField>\r\n  </Grid>\r\n </>)\r\n}","\r\nimport React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Box, Paper, Grid, TextField, Table, TableContainer, TableHead, TableCell, TableBody, Button, InputAdornment } from \"@material-ui/core\"\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport SubTitleComponent from '../common/SubTitleComponent'\r\nimport SelectGrid from '../common/SelectGrid'\r\n\r\nconst { StyledTableRow, StyledTableHeadRow, StyledTableHeadCell, INIT_STATUS } = require(\"../../api/Utils\")\r\n\r\n\r\nconst PayablesHtmlComponent = (props) => {\r\n  const { register, handleSubmit, reset } = useForm()\r\n\r\n  const [total, setTotal] = useState(0)\r\n  const [payables, setPayables] = useState({})\r\n  const [currentState, setCurrentState] = useState({\r\n    period: {\r\n      id: props.store.periodId\r\n    }\r\n  })\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[PayablesHtmlComponent.changeSelectState] name=${name}, value=${value}`)\r\n    setCurrentState({\r\n      [name]: { id: value }\r\n    })\r\n    console.log(`[PayablesHtmlComponent.changeSelectState] currentState=>`, currentState)\r\n  }\r\n\r\n\r\n  const changeSelectStateByPeriod = (e) => {\r\n    changeSelectState(e)\r\n    const { value } = e.target\r\n    // props.doUpdateCurrPageable({\r\n    //   ...props.store.studentPayables,\r\n    //   studentPayables: {\r\n    //     payables: []\r\n    //   },\r\n    //   searchFlag: true,\r\n    //   payablesFlag: false,\r\n    // })\r\n    props.doPayables(props.store.entity.id, value)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(`[PayablesHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n    console.log(`[PayablesHtmlComponent.useEffect] currentState => `, currentState)\r\n    console.log(`[PayablesHtmlComponent.useEffect] props.store.periodId => `, props.store.periodId)\r\n    if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES_RESET) {\r\n      resetPayables();\r\n      props.doUpdateCurrPageable({\r\n        INIT_STATUS: INIT_STATUS.DONE\r\n      })\r\n      // setCurrentState({\r\n      //   period: { id: props.store.periodId }\r\n      // })\r\n\r\n      reset(props.store);\r\n    }\r\n  }, [props.store])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  const resetPayables = () => {\r\n    console.log(`[PayablesHtmlComponent.resetPayables] payables => `, payables);\r\n    setTotal(0);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let data = {\r\n      ...payables\r\n    }\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        data[`payables[${i}].payment`] = formatter.format(0);\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setPayables(data);\r\n  }\r\n\r\n  const onPaymentBlur = (e) => {\r\n    const el = e.target\r\n    let value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    el.value = formatter.format(value);\r\n\r\n    console.log(`[PayablesHtmlComponent.onPaymentBlur] value = ${value}, payables => `, payables)\r\n    value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    let numValue = Number(value);\r\n    let data = {\r\n      ...payables,\r\n    };\r\n\r\n    data[el.name] = numValue;\r\n    setPayables(data);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let total = 0;\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        total = total + payment;\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setTotal(formatter.format(total));\r\n    console.log(`[PayablesHtmlComponent.onPaymentBlur] total = ${total}, payables => `, payables)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[PayablesHtmlComponent.return] props.store => `, props.store)}\r\n      <SubTitleComponent>Student Information</SubTitleComponent>\r\n      <Paper elevation={3} variant=\"elevation\" >\r\n        <Box py={3} px={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>LRN</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.lrn}</Grid>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.firstName + ' ' + props.store.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n      <form onSubmit={handleSubmit(props.doShowSaveBillingDialog)}>\r\n        <TextField\r\n          type=\"hidden\"\r\n          name=\"id\"\r\n          value={props.store.entity.id}\r\n          inputRef={register}\r\n        />\r\n        <SubTitleComponent>Payables</SubTitleComponent>\r\n        <Box py={3} px={3}>\r\n          <Grid container spacing={3}>\r\n            <SelectGrid sm={3} required name=\"period\" label=\"Period\"\r\n              value={currentState.period.id}\r\n              options={props.store.optionsList.periodList}\r\n              onChange={e => changeSelectStateByPeriod(e)} />\r\n          </Grid>\r\n        </Box>\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Paid</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }}>Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.studentPayables.payables.map((row, i) => (\r\n                  < StyledTableRow key={row.id}>\r\n                    <TableCell>{row.aps.label}</TableCell>\r\n\r\n                    {row.code === 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">({row.payment})</TableCell>\r\n                      </>\r\n                    }\r\n\r\n                    {row.code !== 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\">P{row.amount.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.paid.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.balance.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        }\r\n                        )}</ TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].student.id`}\r\n                            value={props.store.entity.id}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].balance`}\r\n                            value={row.balance}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].order`}\r\n                            value={i}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].code`}\r\n                            value={row.code}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].amount`}\r\n                            value={row.amount}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].name`}\r\n                            value={row.name}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].paid`}\r\n                            value={row.paid}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField id={row.code}\r\n                            type=\"currency\"\r\n                            name={`payables[${i}].payment`}\r\n                            onBlur={e => onPaymentBlur(e)}\r\n                            fullWidth\r\n                            inputRef={register}\r\n                            // disabled={row.balance === 0}\r\n                            defaultValue={row.payment}\r\n                            variant=\"filled\"\r\n                            InputProps={{\r\n                              startAdornment: <InputAdornment position=\"start\">P</InputAdornment>,\r\n                            }} />\r\n\r\n                        </TableCell>\r\n                      </>}\r\n                  </StyledTableRow>\r\n                ))\r\n              }\r\n              <StyledTableRow>\r\n                <TableCell colSpan=\"4\" align=\"right\">Total</TableCell>\r\n                <TableCell align=\"right\">{total}</TableCell>\r\n              </StyledTableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box pt={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={10}>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save Payment</Button>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Reciept</Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Box>\r\n        <SubTitleComponent>Invoice</SubTitleComponent>\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Date</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Invoice #</StyledTableHeadCell>\r\n                {\r\n                  props.store.billingByInvoice.accountPayablesSettings.map(({ id, label }) => (\r\n                    <StyledTableHeadCell key={id} variant=\"head\" align=\"right\">{label}</StyledTableHeadCell>\r\n                  ))\r\n                }\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.billingByInvoice.list.map(({ invoiceNo, invoiceDate, payablesMap }) => (\r\n                  <StyledTableRow key={invoiceNo}>\r\n                    <TableCell>{moment(invoiceDate).format('lll')}</TableCell>\r\n                    <TableCell>{invoiceNo}</TableCell>\r\n                    {\r\n                      props.store.billingByInvoice.accountPayablesSettings.map(({ id }) => (\r\n                        <>\r\n                          {console.log(`invoiceNo=${invoiceNo}, id=$id, payablesMap==>`, payablesMap)}\r\n\r\n                          <TableCell key={id} align=\"right\">{(payablesMap[id] ? payablesMap[id].payment : 0).toLocaleString(undefined, {\r\n                            maximumFractionDigits: 2,\r\n                            minimumFractionDigits: 2\r\n                          }\r\n                          )}\r\n                          </TableCell>\r\n                        </>\r\n                      ))\r\n                    }\r\n                  </ StyledTableRow>\r\n                ))\r\n              }\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\nexport default PayablesHtmlComponent;","import React, { useEffect } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport { Box, Button, Grid, MenuItem, Paper, TextField, Typography, Select } from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { INIT_STATUS } from '../../api/Utils'\r\nimport SearchResultsHtmlComponent from './SearchResultsHtmlComponent';\r\nimport PayablesHtmlComponent from './PayablesHtmlComponent';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function BillingHtmlComponent(props) {\r\n        const { control, register, handleSubmit, reset } = useForm();\r\n\r\n        useEffect(() => {\r\n                console.log(`[BillingHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n                // if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES) {\r\n                //         props.doPayables();\r\n                // } else if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                //         reset(props.store)\r\n                // }\r\n                if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                        reset(props.store)\r\n                }\r\n        }, [props.store])\r\n\r\n        return (\r\n                <>\r\n                        {console.log(`[BillingHtmlComponent.return], INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)}\r\n                        <TitleComponent>Payment</TitleComponent>\r\n\r\n                        <form onSubmit={handleSubmit(props.doRetrieve)}>\r\n                                <Paper elevation={3} variant=\"elevation\" >\r\n                                        <Box my={3} mx={3}>\r\n                                                <Grid container spacing={3}>\r\n                                                        <Grid item xs={12} sm={2}><Typography variant=\"h6\">Search By</Typography></Grid>\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Controller\r\n                                                                        as={<Select fullWidth >\r\n                                                                                {props.store.optionsList.billingSearchBy.map(m => (\r\n                                                                                        <MenuItem key={m.id} value={m.value}>\r\n                                                                                                {m.label}\r\n                                                                                        </MenuItem>\r\n                                                                                ))}\r\n                                                                        </Select>}\r\n                                                                        required\r\n                                                                        name=\"searchBy\"\r\n                                                                        control={control}\r\n                                                                        defaultValue={props.store.searchBy}\r\n                                                                        options={props.store.optionsList.billingSearchBy}\r\n                                                                />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                                <TextField id=\"searchValue\"\r\n                                                                        required\r\n                                                                        name=\"searchValue\"\r\n                                                                        // label=\"Search Value\"\r\n                                                                        fullWidth\r\n                                                                        autoComplete=\"billing-search-value\"\r\n                                                                        inputRef={register}\r\n                                                                        defaultValue={props.store.searchValue}\r\n                                                                />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SearchIcon />}>Search</Button>\r\n                                                        </Grid>\r\n                                                </Grid>\r\n                                        </Box>\r\n                                </Paper>\r\n                        </form>\r\n                        {props.store.searchFlag &&\r\n                                <SearchResultsHtmlComponent\r\n                                        store={props.store}\r\n                                        onChangePage={props.onChangePage}\r\n                                        onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n                                        doPayables={props.doPayables}\r\n                                        doUpdateCurrPageable={props.doUpdateCurrPageable}\r\n                                />}\r\n                        {props.store.payablesFlag &&\r\n                                <PayablesHtmlComponent\r\n                                        register={register}\r\n                                        handleSubmit={handleSubmit}\r\n                                        doShowSaveBillingDialog={props.doShowSaveConfirmDialog}\r\n                                        // doSavePayables={props.doSavePayables}\r\n                                        store={props.store}\r\n                                        doUpdateCurrPageable={props.doUpdateCurrPageable}\r\n                                        doPayables={props.doPayables} />}\r\n                </>\r\n        )\r\n}","\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nimport { formatter, INIT_STATUS, StyledTableCell, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\n\r\nimport { useGlobalVariable } from '../../providers/GlobalVariableProvider'\r\n\r\nexport default function SavePayablesConfimationHtml(props) {\r\n\r\n  const { userLogin } = useGlobalVariable();\r\n  const { reset } = useForm(props.confirmStore);\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(`[SavePayablesConfimationHtml.useEffect] confirmStore=>`, props.confirmStore)\r\n    if (props.confirmStore.INIT_STATUS === INIT_STATUS.RESET) {\r\n      reset(props.confirmStore);\r\n    }\r\n    props.confirmStore.INIT_STATUS = INIT_STATUS.DONE;\r\n  }, [props.confirmStore])\r\n\r\n  const ConfirmPage = () => {\r\n    return (<>\r\n      {/* <div className={classes.root}>\r\n        <table width=\"100%\" border=\"0\" >\r\n          <tr >\r\n            <th align=\"right\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"right\" width=\"20%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr >\r\n            <th align=\"right\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"right\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n          </tr>\r\n        </table>\r\n      </div> */}\r\n      <Box pb={3}>\r\n        <Paper elevation={3} variant=\"elevation\" >\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}></Grid>\r\n            <Grid item xs={12} sm={4}></Grid>\r\n\r\n            <Grid item xs={12} sm={2}>LRN</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.lrn}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Box>\r\n      <TableContainer component={Paper} elevation={3} variant=\"elevation\">\r\n        {props.confirmStore.payables.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payables.map((row) => <>\r\n                {row.payment > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.payment)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell>\r\n                  {props.confirmStore.balanceTotal > 0 &&\r\n                    <Typography variant=\"h6\" color=\"textPrimary\">Remaining balance is {formatter.format(props.confirmStore.balanceTotal)}</Typography>\r\n                  }\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={3}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n              {props.confirmStore.invoiceNo && <>\r\n                <StyledTableRow>\r\n                  <StyledTableCell align=\"right\" colSpan={1}><Typography variant=\"h4\" color=\"textPrimary\">Invoice No: </Typography></StyledTableCell>\r\n                  <StyledTableCell align=\"left\" colSpan={2}>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n\r\n                  </StyledTableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n                  </TableCell>\r\n                </ StyledTableRow>\r\n              </>}\r\n            </TableBody>\r\n          </Table>\r\n        }\r\n      </TableContainer>\r\n    </>);\r\n  }\r\n\r\n  const PrintableInvoicePage = () => {\r\n    return (<>\r\n      <div ref={componentRef} className=\"root\">\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userLogin.schoolName}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userLogin.schoolAddress}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">&nbsp;</th>\r\n          </tr>\r\n\r\n          {/* <th align=\"left\">{(\"0000000000\" + props.confirmStore.invoiceNo).slice(-10)}</th> */}\r\n          {/* <tr>\r\n            <th align=\"left\" width=\"25%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n            <th align=\"left\" width=\"25%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr> */}\r\n\r\n          <tr>\r\n            <th align=\"left\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"left\" width=\"20%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"left\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n            <th align=\"left\"></th>\r\n            <th align=\"left\"></th>\r\n          </tr>\r\n        </table>\r\n        <br />\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th></th>\r\n            <th width=\"25%\" align=\"right\">Total</th>\r\n            <th width=\"25%\" align=\"right\">Balance</th>\r\n            <th width=\"25%\" align=\"right\">Amount Paid</th>\r\n          </tr>\r\n          {props.confirmStore.payablesByInvoiceNo.map((row) => <>\r\n            {row.paid != 0 &&\r\n              <tr>\r\n                <td align=\"left\">{row.name}</td>\r\n                <td align=\"right\">{formatter.format(row.amount)}</td>\r\n                <td align=\"right\">{formatter.format(row.balance)}</td>\r\n                <td align=\"right\">{formatter.format(row.paid)}</td>\r\n              </tr>\r\n            }\r\n          </>\r\n          )}\r\n          <tr>\r\n            <td></td>\r\n            <td colSpan={4} align=\"right\"><h3>Total Amount Paid: {formatter.format(props.confirmStore.paymentTotal)}</h3></td>\r\n          </tr>\r\n        </table>\r\n        {/* <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Student Name:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName} </TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>Invoice Date:</>}</TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>{props.confirmStore.invoiceDate}</>}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Student Id:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.studentId}</TableCell>\r\n              <TableCell>Level:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.level.description}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n        {props.confirmStore.payablesByInvoiceNo.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Invoice</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount Paid</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payablesByInvoiceNo.map((row, i) => <>\r\n                {row.paid > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.paid)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Invoice No: </Typography>\r\n                  <Typography variant=\"h4\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount paid is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        } */}\r\n      </div>\r\n    </>);\r\n  }\r\n  return (<>\r\n    {console.log(`[SavePayablesConfimationHtml.return] confirmStore=>`, props.confirmStore)}\r\n    <Dialog fullWidth=\"true\" maxWidth=\"md\"\r\n      open={props.open}\r\n      onClose={props.closeDialog}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{!props.confirmStore.invoiceNo && <Alert severity=\"info\" align=\"right\">{props.title}</Alert>}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {!props.confirmStore.invoiceNo && <ConfirmPage />}\r\n          {props.confirmStore.invoiceNo && <PrintableInvoicePage />}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button className=\"not-printable\" onClick={handlePrint} variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            <Button className=\"not-printable\" onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />}>Close</Button>\r\n          </>\r\n        }\r\n        {!props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />} > Cancel</Button>\r\n            <Button onClick={props.saveDialog} variant=\"contained\" color=\"primary\" autoFocus startIcon={<SaveIcon />} > Save</Button>\r\n          </>\r\n        }\r\n      </DialogActions>\r\n    </Dialog>\r\n  </>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport { ERROR_CODE, formatter, INIT_STATUS } from '../../api/Utils'\r\n\r\nimport BillingHtmlComponent from './BillingHtmlComponent';\r\nimport SavePayablesConfimationHtml from './SavePayablesConfimationHtml';\r\n\r\nimport { getListBy, getStudentPayablesByPeriod, save } from '../../api/billing/BillingService'\r\nimport { optionsList, selectPageable, setPageable, updatePageable } from '../../api/billing/BillingSlice';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function BillingComponent() {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    vertical: 'top',\r\n    horizontal: 'center'\r\n  })\r\n  const { message, open, vertical, horizontal } = snackbar\r\n\r\n\r\n  const [confirmStore, setConfirmStore] = useState({\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    entity: {\r\n      studentId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      level: {\r\n        id: '',\r\n        value: '',\r\n        description: ''\r\n      }\r\n    },\r\n    payables: [],\r\n    payablesByInvoiceNo: [],\r\n    open: false\r\n  })\r\n\r\n  const doInitFormData = data => {\r\n    //data.optionsList = optionsList;\r\n\r\n    if (!data.currentPage) {\r\n      data.paging = {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0\r\n      };\r\n    }\r\n\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n\r\n    if (!data.studentPayables) {\r\n      data.studentPayables = {\r\n        invoiceNo: '',\r\n        payables: [],\r\n        payablesByInvoiceNo: []\r\n      };\r\n    }\r\n    if (!data.studentPayables.payables) {\r\n      data.studentPayables.payables = [];\r\n    }\r\n    if (!data.studentPayables.payablesByInvoiceNo) {\r\n      data.studentPayables.payablesByInvoiceNo = [];\r\n    }\r\n  }\r\n\r\n  const doRetrieve = (data) => {\r\n    console.log(`[BillingComponent.doRetrieve] data==>`, data)\r\n    getListBy(data.searchBy, data.searchValue, currPageable.paging.currentPage, currPageable.paging.rowsPerPage)\r\n      .then(response => {\r\n        console.log(`[BillingComponent.doRetrieve BillingService.getListBy] response==>`, response)\r\n        let formData = {\r\n          ...currPageable,\r\n          INIT_STATUS: INIT_STATUS.RESET,\r\n          searchValue: data.searchValue,\r\n          searchBy: data.searchBy,\r\n          searchFlag: true,\r\n          payablesFlag: false,\r\n          list: response.data.content,\r\n          optionsList: optionsList,\r\n          paging: {\r\n            rowsPerPage: response.data.size,\r\n            totalElements: response.data.totalElements,\r\n            currentPage: response.data.pageable.pageNumber,\r\n          }\r\n        }\r\n        doInitFormData(formData);\r\n        dispatch(setPageable(formData))\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doRetrieve', 'BillingService.getListBy'));\r\n  }\r\n\r\n  const onChangeRowsPerPage = (e) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    let data = {\r\n      paging: paging\r\n    }\r\n    doUpdateCurrPageable(data)\r\n\r\n    doRetrieve();\r\n  }\r\n  const onChangePage = (e, newPage) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.currentPage = newPage\r\n\r\n    let data = {\r\n      paging: paging\r\n    }\r\n    doUpdateCurrPageable(data)\r\n\r\n    doRetrieve({\r\n      searchBy: data.searchBy,\r\n      searchValue: data.searchValue,\r\n      currentPage: data.paging.currentPage,\r\n      rowsPerPage: data.paging.rowsPerPage\r\n    });\r\n  }\r\n\r\n  const doUpdateCurrPageable = (formData) => {\r\n    dispatch(updatePageable(formData))\r\n  }\r\n  const doPayables = (id, periodId) => {\r\n    console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] id=${id}, periodId=${periodId}`)\r\n    getStudentPayablesByPeriod(id, periodId).then(response => {\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] response==>`, response)\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] response.data.optionsList==>`, response.data.optionsList)\r\n      let payables = response.data.studentPayables.payables;\r\n      payables.map((row) => {\r\n        // let value = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n        row.payment = formatter.format(row.payment);\r\n        return row\r\n      });\r\n\r\n      let optionsListTemp = {\r\n        ...response.data.optionsList,\r\n        ...optionsList\r\n      }\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] optionsListTemp==>`, optionsListTemp)\r\n      let formData = {\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        entity: response.data.student,\r\n        periodId: periodId,\r\n        studentPayables: {\r\n          ...response.data.studentPayables,\r\n          payables: payables\r\n        },\r\n        billingByInvoice: {\r\n          ...response.data.billingByInvoice\r\n        },\r\n        searchFlag: false,\r\n        payablesFlag: true\r\n      }\r\n\r\n      doInitFormData(formData);\r\n      formData.optionsList = optionsListTemp\r\n\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] formData==>`, formData)\r\n      doUpdateCurrPageable(formData)\r\n\r\n\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doPayables', 'BillingService.getStudentPayables'));\r\n  }\r\n  const doShowSaveConfirmDialog = (data) => {\r\n    console.log(`[BillingComponent.doShowSaveConfirmDialog] data==>`, data);\r\n    let paymentTotal = 0;\r\n    let balanceTotal = 0;\r\n    data.payables.map((row) => {\r\n      let balance = row.balance ? row.balance.replaceAll(',', '') : 0;\r\n      let payment = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n\r\n      row.balance = Number(balance);\r\n      row.payment = Number(payment);\r\n\r\n      balanceTotal += row.balance;\r\n      paymentTotal += row.payment;\r\n      return row\r\n    });\r\n\r\n    // doOpenSnackBar({\r\n    //   message: `Total amount is ${paymentTotal}`\r\n    // })\r\n\r\n    if (Number(paymentTotal) == 0) {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 1 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n\r\n      doOpenSnackBar({\r\n        message: `Total amount is ${paymentTotal}`\r\n      })\r\n    } else {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 2 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n      let confirmStoreTemp = {\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        open: true,\r\n        entity: currPageable.entity,\r\n        payables: data.payables,\r\n        payablesByInvoiceNo: [],\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: balanceTotal - paymentTotal,\r\n        invoiceNo: '',\r\n        periodId: currPageable.periodId\r\n      }\r\n      doInitConfirmStore(confirmStoreTemp);\r\n\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] confirmStoreTemp==>`, confirmStoreTemp);\r\n      setConfirmStore(confirmStoreTemp);\r\n    }\r\n\r\n  }\r\n  const doConfirmSavePayables = () => {\r\n    console.log(`[BillingComponent.doConfirmSavePayables] confirmStore==>`, confirmStore);\r\n    doSavePayables(confirmStore);\r\n  }\r\n\r\n  const doSavePayables = (data) => {\r\n    console.log(`[BillingComponent.doSavePayables] data==>`, data);\r\n\r\n    save(data.payables, data.entity.id, data.periodId).then(response => {\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] response==>`, response)\r\n      let formData = {\r\n        INIT_STATUS: INIT_STATUS.PAYABLES_RESET,\r\n        entity: response.data.student,\r\n        studentPayables: response.data.studentPayables,\r\n        searchFlag: false,\r\n        payablesFlag: true,\r\n      }\r\n\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 1 formData==>`, formData)\r\n      doInitFormData(formData);\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 2 formData==>`, formData)\r\n      dispatch(updatePageable(formData));\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 3 formData==>`, formData)\r\n      let payablesByInvoiceNo = [\r\n        //...response.data.studentPayables.payablesByInvoiceNo\r\n      ]\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 0 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n      for (const row of response.data.studentPayables.payablesByInvoiceNo) {\r\n        let temp = {\r\n          ...row\r\n        }\r\n        payablesByInvoiceNo.push(temp)\r\n      }\r\n\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 1 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      let paymentTotal = 0;\r\n      payablesByInvoiceNo.map((row) => {\r\n        row.paid = Number(row.paid);\r\n        paymentTotal += row.paid;\r\n        return row\r\n      });\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 2 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      setConfirmStore({\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        payables: [],\r\n        invoiceDate: moment(response.data.studentPayables.invoiceDate).format('lll'),\r\n        invoiceNo: response.data.studentPayables.invoiceNo,\r\n        payablesByInvoiceNo: payablesByInvoiceNo,\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: 0\r\n      });\r\n\r\n      doUpdateCurrPageable({\r\n        billingByInvoice: {\r\n          ...response.data.billingByInvoice\r\n        },\r\n      })\r\n\r\n      doOpenSnackBar({\r\n        message: 'Payables saved successfully!'\r\n      })\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doSavePayables', 'BillingService.save'));\r\n  }\r\n\r\n  const doCloseSaveBillingDialog = () => {\r\n    let confirmStoreTemp = {\r\n      ...confirmStore,\r\n      open: false\r\n    }\r\n    setConfirmStore(confirmStoreTemp);\r\n  }\r\n\r\n  const doInitConfirmStore = data => {\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n    if (!data.payables) {\r\n      data.payables = [];\r\n    }\r\n  }\r\n\r\n  const doOpenSnackBar = (state) => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: true,\r\n      ...state\r\n    })\r\n  }\r\n  const doCloseSnackbar = () => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: false,\r\n      message: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BillingHtmlComponent\r\n        store={currPageable}\r\n        doRetrieve={doRetrieve}\r\n        doPayables={doPayables}\r\n        onChangePage={onChangePage}\r\n        onChangeRowsPerPage={onChangeRowsPerPage}\r\n        doShowSaveConfirmDialog={doShowSaveConfirmDialog}\r\n        doSavePayables={doSavePayables}\r\n        doUpdateCurrPageable={doUpdateCurrPageable}\r\n      />\r\n      <SavePayablesConfimationHtml\r\n        confirmStore={confirmStore}\r\n        title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        closeDialog={doCloseSaveBillingDialog}\r\n        saveDialog={doConfirmSavePayables} />\r\n      {/* <SaveBillingDialog title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        <SavePayablesConfimationHtml confirmStore={confirmStore}/>\r\n      </SaveBillingDialog> */}\r\n\r\n\r\n      <Snackbar open={open}\r\n        autoHideDuration={6000}\r\n        onClose={doCloseSnackbar}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n      >\r\n        <Alert onClose={doCloseSnackbar} severity=\"success\">\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from \"../Utils\";\r\n\r\nexport const getListBy = (by, searchValue, page, pageSize) => axios.get(`${API_URL_BASE}billing/search/${by}?searchValue=${searchValue}&page=${page}&size=${pageSize}`)\r\n\r\nexport const getStudentPayables = (id) => axios.get(`${API_URL_BASE}billing/payables/${id}`)\r\nexport const getStudentPayablesByPeriod = (id, periodId) => axios.get(`${API_URL_BASE}billing/payables/${id}/period/${periodId}`)\r\n\r\nexport const save = (data, id, periodId) => axios.post(`${Utils.urlSavePattern('billing')}/${id}/period/${periodId}`, data)\r\n\r\nexport default function BillingService() {\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from \"../Utils\";\r\n\r\n\r\nexport const ENTITY = \"accountPayablesSettings\";\r\nconst sort = \"period,desc,priority,asc,description,amount\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport const getActiveList = (period, searchValue, page, pageSize) => axios.get(`${API_URL_BASE + ENTITY + \"/active/\"}${period}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`)\r\nexport const getApplyToAllList = () => axios.get(`${API_URL_BASE + ENTITY + \"/applyToAllList\"}`)\r\n\r\nexport default function AccountPayablesSettingsService() {\r\n}\r\n\r\n// class AccountPayablesSettingsService {\r\n\r\n//  getList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description, amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  get = (id) => {\r\n//   const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  delete = (id) => {\r\n//   const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\r\n//   return axios.delete(theurl);\r\n//  }\r\n//  save = (data) => {\r\n//   const theurl = `${Utils.urlSavePattern(ENTITY)}`\r\n//   return axios.post(theurl, data);\r\n//  }\r\n//  getActiveList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/active\"}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  getApplyToAllList = () => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/applyToAllList\"}`\r\n//   return axios.get(theurl);\r\n//  }\r\n// }\r\n\r\n// export default new AccountPayablesSettingsService();\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList, getOptions } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport { selectPageable, setPageable, setSelectedItem } from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\nimport SubTitleComponent from '../common/SubTitleComponent';\r\nimport { Box, Grid, Paper } from '@material-ui/core';\r\nimport SelectGrid from '../common/SelectGrid';\r\n\r\nexport default function AccountPayablesSettingsListComponent(props) {\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  const [optionsList, setOptionsList] = useState({\r\n    periodList: []\r\n  });\r\n\r\n  const [filter, setFilter] = useState({\r\n    period: { id: 'All' }\r\n  });\r\n\r\n  useEffect(() => {\r\n    doInitOptions()\r\n  }, []);\r\n\r\n  const doInitOptions = () => {\r\n    getOptions().then(response => {\r\n      let list = {\r\n        ...response.data.listService,\r\n        periodList: [{\r\n          \"id\": \"ALL\",\r\n          \"description\": \"All\",\r\n        },\r\n        ...response.data.listService.periodList]\r\n      }\r\n\r\n      setOptionsList(list)\r\n    })\r\n  }\r\n\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => dispatch(setPageable({\r\n      INIT_STATUS: INIT_STATUS.LOAD,\r\n      list: data.pagingList.content,\r\n      searchValue: searchValue,\r\n      paging: {\r\n        rowsPerPage: data.pagingList.size,\r\n        currentPage: data.pagingList.pageable.pageNumber,\r\n        totalElements: data.pagingList.totalElements,\r\n        totalPage: data.pagingList.totalPage\r\n      }\r\n    })))\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsListComponent.retrieve', 'AccountPayablesSettingsService.getList'));\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    let data = {\r\n      ...selected\r\n    }\r\n    if (!data.period) {\r\n      data.period = { 'id': '' }\r\n    }\r\n    if (!data.paymentPeriod) {\r\n      data.paymentPeriod = { 'id': '' }\r\n    }\r\n    console.log(`[AccountPayablesSettingsListComponent.doEdit]  data=`, data)\r\n    dispatch(setSelectedItem(data))\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsListComponent.doDelete', 'AccountPayablesSettingsService.deleteItem'));\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod ? row.paymentPeriod.description : '';\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    },\r\n    {\r\n      field: 'applyToAll',\r\n      headerName: 'Apply To All',\r\n      render: function (row) {\r\n        return row.applyToAll ? 'Y' : 'N';\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N';\r\n      }\r\n    }\r\n  ];\r\n\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[AccountPayablesSettingsListComponent.changeSelectState] name=${name}, value=${value}`)\r\n    setFilter({\r\n      ...filter,\r\n      [name]: { id: value }\r\n    })\r\n    console.log(`[AccountPayablesSettingsListComponent.changeSelectState]  filter=`, filter)\r\n  }\r\n  return (\r\n    <>\r\n      <TitleComponent>Accounts Payables Settings List</TitleComponent>\r\n\r\n      <Box py={5}>\r\n        <Paper elevation={2} variant=\"elevation\" >\r\n          <Box pb={3} px={3}>\r\n            <SubTitleComponent>Filter</SubTitleComponent>\r\n            <Grid container spacing={3}>\r\n              <SelectGrid sm={3} name=\"period\" label=\"Period\" value={filter.period.id} options={optionsList.periodList}\r\n                onChange={e => changeSelectState(e)} />\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nimport { selectSelectedItem, resetSelectedItem, setPageableEntity, setOptionsList } from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport { save, getOptions } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nlet renderCount = 0;\r\n\r\nexport default function AccountPayablesSettingsDetailComponent(props) {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { control, register, handleSubmit } = useForm({\r\n    'id': '',\r\n    'label': '',\r\n    'description': 'test',\r\n    'paymentPeriod': { 'id': '' },\r\n    'amount': 0,\r\n    'priority': 1,\r\n    'applyToAll': true,\r\n    'active': false\r\n  });\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n    if (status === INIT_STATUS.LOAD) {\r\n      onRetrieve()\r\n      setStatus(INIT_STATUS.DONE)\r\n    }\r\n  }, [selectedItem, status]);\r\n\r\n\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[AccountPayablesSettingsDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    setMessage(`Loading. Please wait...`);\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage('')\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsDetailComponent.onRetrieve', 'AccountPayablesSettingsService.getOptions'));\r\n  }\r\n\r\n\r\n  const doSave = data => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'))\r\n  }\r\n\r\n  renderCount++;\r\n  return (\r\n    <>\r\n      {console.log(`[AccountPayablesSettingsDetailComponent.render] renderCount=${renderCount} selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Account Payables Settings Details</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-description\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"label\"\r\n              name=\"label\"\r\n              label=\"Label\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-label\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.label}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"period\"\r\n                  required\r\n                  select\r\n                  label=\"Period\"\r\n                  required={selectedItem.id ? false : true}\r\n                  disabled={selectedItem.id ? true : false}\r\n                  fullWidth\r\n                  autoComplete=\"period\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.periodList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              required\r\n              name=\"period.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.period.id}\r\n              options={selectedItem.optionsList.periodList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"paymentPeriod\"\r\n                  required\r\n                  select\r\n                  label=\"Payment Period\"\r\n                  fullWidth\r\n                  autoComplete=\"paymentPeriod\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.paymentPeriodList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              required\r\n              name=\"paymentPeriod.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.paymentPeriod.id}\r\n              options={selectedItem.optionsList.paymentPeriodList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"Priority\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-priority\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              label=\"Amount\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-amount\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.amount}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"applyToAll\"\r\n                  required\r\n                  select\r\n                  label=\"Applicable to All\"\r\n                  fullWidth\r\n                  autoComplete=\"applyToAll\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\r\n                  <MenuItem key={2} value={false}>No</MenuItem>\r\n                </TextField>\r\n              }\r\n              name=\"applyToAll\"\r\n              control={control}\r\n              defaultValue={selectedItem.applyToAll}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"active\"\r\n                  required\r\n                  select\r\n                  label=\"Active\"\r\n                  fullWidth\r\n                  autoComplete=\"active\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\r\n                  <MenuItem key={2} value={false}>No</MenuItem>\r\n                </TextField>\r\n              }\r\n              name=\"active\"\r\n              control={control}\r\n              defaultValue={selectedItem.active}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE, URL_OPTIONS } from \"../Utils\";\r\n\r\n\r\nexport const ENTITY = \"gradeLevelPayables\";\r\nconst sort = \"priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const getOptionsByPeriod = (periodId) => axios.get(API_URL_BASE + ENTITY + URL_OPTIONS + `/period/${periodId}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function GradeLevelPayablesService() {\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { deleteItem, getList } from '../../api/gradeLevelPayables/GradeLevelPayablesService';\r\nimport { selectPageable, setPageable, setSelectedItem, resetSelectedItem } from '../../api/gradeLevelPayables/GradeLevelSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function GradeLevelPayablesListComponent(props) {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  const cols = [\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return row.level.description\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N'\r\n      }\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        console.log(`[GradeLevelPayablesListComponent.retrieve] data=`, data)\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.retrieve', 'GradeLevelPayablesService.getList'))\r\n\r\n\r\n\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n\r\n  const doEdit = (selected) => {\r\n    let aps = [...selected.accountPayablesSettings]\r\n    aps.sort((a, b) => {\r\n      return a.priority - b.priority;\r\n    })\r\n    dispatch(setSelectedItem({\r\n      ...selected,\r\n      accountPayablesSettings: [...aps]\r\n    }))\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.doDelete', 'GradeLevelPayablesService.deleteItem'))\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Grade Level Payables List</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        // list={this.state.list}\r\n        // searchValue={this.state.searchValue}\r\n        // paging={this.state.paging}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { getActiveList } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { ERROR_CODE } from '../../api/Utils';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function GradeLevelAccountPayablesSettingsListComponent(props) {\r\n\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n  const [store, setStore] = useState({\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n      rowsPerPage: 25,\r\n      totalElements: 0,\r\n      currentPage: 0\r\n    }\r\n  });\r\n\r\n  const doRetrieve = () => {\r\n    console.log(`[GradeLevelAccountPayablesSettingsListComponent.doRetrieve] props.selectedItem==>`, props.selectedItem)\r\n    if (!props.selectedItem.period || !props.selectedItem.period.id) {\r\n      alert({\r\n        type: 'error',\r\n        payload: 'Please select period'\r\n      })\r\n      return\r\n    }\r\n    getActiveList(props.selectedItem.period.id, store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\r\n      .then(response => {\r\n        let data = {\r\n          list: response.data.pagingList.content,\r\n          searchValue: store.searchValue,\r\n          paging: {\r\n            rowsPerPage: response.data.pagingList.size,\r\n            currentPage: response.data.pagingList.pageable.pageNumber,\r\n            totalElements: response.data.pagingList.totalElements,\r\n            totalPage: response.data.pagingList.totalPage\r\n          }\r\n        }\r\n        setStore(data);\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelAccountPayablesSettingsListComponent.retrieve', 'AccountPayablesSettingsService.getActiveList'))\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.currentPage = newPage\r\n    setStore(data);\r\n\r\n    doRetrieve();\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    setStore(data)\r\n    doRetrieve();\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    store.searchValue = searchValue\r\n    doRetrieve();\r\n  }\r\n  const doAddItem = (row) => {\r\n    props.setGradeLevelPayables(row);\r\n  }\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Add',\r\n      render: function (row) {\r\n        return (<IconButton aria-label=\"add\" onClick={() => doAddItem(row)}>\r\n          <AddIcon fontSize=\"large\" />\r\n        </IconButton>);\r\n      }\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod.description;\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CustomTableGrid\r\n        store={store}\r\n        cols={cols}\r\n        showAction={false}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Box, Button, Checkbox, FormControlLabel, FormGroup, Grid, IconButton } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport GradeLevelAccountPayablesSettingsListComponent from './GradeLevelAccountPayablesSettingsListComponent'\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\nimport SelectGrid from '../common/SelectGrid';\r\nimport { save, getOptionsByPeriod } from '../../api/gradeLevelPayables/GradeLevelPayablesService';\r\nimport { selectSelectedItem, setOptionsList, updateSelectedItem, resetSelectedItem, setPageableEntity } from '../../api/gradeLevelPayables/GradeLevelSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nlet renderCount = 0;\r\n\r\nexport default function GradeLevelPayablesDetailsComponent(props) {\r\n  const { showErrorMsgAlert } = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    } else if (status === INIT_STATUS.LOAD) {\r\n      onRetrieve()\r\n      setStatus(INIT_STATUS.RESET)\r\n    }\r\n\r\n  }, [selectedItem, status]);\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target\r\n\r\n    console.log(`[GradeLevelPayablesDetailsComponent.handleCheckboxChange] name=${name}, checked=${checked}`)\r\n    dispatch(updateSelectedItem({\r\n      [name]: checked\r\n    }))\r\n  };\r\n  const onRetrieve = () => {\r\n    doRetrieve(\"-1\")\r\n  }\r\n\r\n  const doRetrieve = (id) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n\r\n    if (props.match.params.id === -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    // if (!selectedItem.period || !selectedItem.period.id) {\r\n    //   showErrorAlert('Please select period')\r\n    //   return\r\n    // }\r\n\r\n    setMessage(`Loading. Please wait...`);\r\n\r\n    getOptionsByPeriod(id).then(response => onRetrieveResponseAction(response))\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'GradeLevelPayablesDetailsComponent.onRetrieve', 'GradeLevelPayablesService.getOptions'));\r\n  }\r\n\r\n  const onRetrieveResponseAction = (response) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.onRetrieveResponseAction]  response==>`, response)\r\n    dispatch(setOptionsList(response.data.listService))\r\n    setMessage(``);\r\n  }\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(``);\r\n    save({\r\n      id: selectedItem.id,\r\n      level: selectedItem.level,\r\n      period: selectedItem.period,\r\n      active: selectedItem.active,\r\n      accountPayablesSettings: selectedItem.list\r\n    })\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'GradeLevelPayablesDetailsComponent.onSubmitForm', 'GradeLevelPayablesService.save'));\r\n  }\r\n\r\n  const setGradeLevelPayables = (data) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.setGradeLevelPayables] data==>`, data)\r\n\r\n    let list = [...selectedItem.list]\r\n    if (list.filter(row => row.id === data.id).length === 0) {\r\n      let temp = {\r\n        ...data,\r\n        status: 'NEW'\r\n      }\r\n      list.push(temp);\r\n      dispatch(updateSelectedItem({\r\n        list: list\r\n      }))\r\n    }\r\n  }\r\n\r\n  const doDeleteItem = (id) => dispatch(updateSelectedItem({\r\n    list: [...selectedItem.list.filter(item => item.id !== id)]\r\n  }))\r\n\r\n  const onChangePeriod = (e) => {\r\n    const { value } = e.target\r\n    changeSelectState(e)\r\n    doRetrieve(value)\r\n  }\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[GradeLevelPayablesDetailsComponent.changeSelectState] name=${name}, value=${value}`)\r\n    dispatch(updateSelectedItem({\r\n      [name]: { id: value }\r\n    }))\r\n  }\r\n\r\n  const GridActionButtons = () => {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={9}>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" href={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const cols = [{\r\n    field: 'description',\r\n    headerName: 'Description',\r\n    render: function (row) {\r\n      return (<>\r\n        {row.status === 'NEW' && <>{row.description} <WarningIcon fontSize=\"small\" /></>}\r\n        {row.status !== 'NEW' && row.description}\r\n      </>);\r\n    }\r\n  },\r\n  {\r\n    headerName: 'Period',\r\n    render: function (row) {\r\n      // return row.period.description;\r\n      return (<>\r\n        {row.period.id !== selectedItem.period.id && <>{row.period.description} <WarningIcon fontSize=\"small\" /></>}\r\n        {row.period.id === selectedItem.period.id && row.period.description}\r\n      </>);\r\n    }\r\n  },\r\n  {\r\n    headerName: 'Payment Period',\r\n    render: function (row) {\r\n      return row.paymentPeriod.description;\r\n    }\r\n  },\r\n  {\r\n    field: 'amount',\r\n    headerName: 'Amount',\r\n  },\r\n  {\r\n    field: 'priority',\r\n    headerName: 'Priority',\r\n  },\r\n  {\r\n    headerName: 'Action',\r\n    render: function (row) {\r\n      return (<IconButton aria-label=\"add\" onClick={() => doDeleteItem(row.id)}>\r\n        <DeleteIcon fontSize=\"large\" />\r\n      </IconButton>);\r\n    }\r\n  }\r\n  ];\r\n  renderCount++;\r\n  return (\r\n    <>\r\n      {console.log(`[GradeLevelPayablesDetailsComponent.render] renderCount=${renderCount} selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Grade Level Payables</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n\r\n      <form onSubmit={e => onSubmitForm(e)}>\r\n        <GridActionButtons />\r\n\r\n        <Box pb={3}>\r\n          <Grid container spacing={3}>\r\n            <SelectGrid sm={2} required name=\"level\" label=\"Level\" value={selectedItem.level.id} options={selectedItem.optionsList.levelList}\r\n              onChange={e => changeSelectState(e)} />\r\n\r\n            <SelectGrid sm={3} required={selectedItem.id ? false : true} disabled={selectedItem.id ? true : false} name=\"period\" label=\"Period\" value={selectedItem.period.id} options={selectedItem.optionsList.periodList}\r\n              onChange={e => onChangePeriod(e)} />\r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <FormGroup aria-label=\"position\" row>\r\n                <FormControlLabel\r\n                  value=\"true\"\r\n                  control={<Checkbox checked={selectedItem.active} onChange={e => handleCheckboxChange(e)} name=\"active\" />}\r\n                  label=\"Active\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </FormGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box py={3}>\r\n          <Box pb={3}>\r\n            <CustomTableGrid\r\n              store={selectedItem}\r\n              cols={cols}\r\n              showAction={false}\r\n              showPaging={false}\r\n              showSearch={false}\r\n            />\r\n          </Box>\r\n          <GridActionButtons />\r\n        </Box>\r\n\r\n        <GradeLevelAccountPayablesSettingsListComponent setGradeLevelPayables={setGradeLevelPayables} selectedItem={selectedItem} />\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\n\r\nexport default function GlobalAlertMsgDialog() {\r\n\r\n    const { props, closeMsgAlert } = useMessageAlert();\r\n\r\n    return (\r\n        <>\r\n            {/* <Dialog fullWidth={true} maxWidth=\"md\" */}\r\n            <Dialog\r\n                open={props.open}\r\n                onClose={() => closeMsgAlert()}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <Alert severity={props.severity} align=\"right\">\r\n                        <Typography variant=\"h6\">\r\n                            {props.title}\r\n                        </Typography>\r\n                    </Alert>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {props.msg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => closeMsgAlert()}>{props.label}</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { Box, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TitleComponent from \"../common/TitleComponent\";\r\nimport SelectGrid from \"../common/SelectGrid\";\r\nimport SubTitleComponent from \"../common/SubTitleComponent\";\r\nimport { ProcessingService } from \"../../api/processing/ProcessingService\";\r\nimport useMessageAlert from \"../../api/useMessageAlert\"\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from \"../../api/Utils\";\r\nimport { selectPageable, setPageable, setSelectedItem } from '../../api/processing/ProcessingSlice';\r\nimport CustomTableGrid from \"../common/CustomTableGrid\";\r\nimport ConfirmMsgDialog from \"../common/ConfirmMsgDialog\";\r\n\r\nexport default function ClosePeriodComponent(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const { getFormatedErrorMessage, showErrorMsgAlert, showErrorAlert } = useMessageAlert();\r\n  const { deleteItem, getListClosePeriod, getOptions, saveClosePeriod } = ProcessingService()\r\n  const [filter, setFilter] = useState({\r\n    periodFrom: { id: '' },\r\n    periodTo: { id: '' }\r\n  });\r\n  const [optionsList, setOptionsList] = useState({\r\n    periodList: []\r\n  });\r\n\r\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  useEffect(() => {\r\n    doInitOptions()\r\n  }, []);\r\n\r\n\r\n  const doInitOptions = () => {\r\n    setMessage('Loading. Please wait...')\r\n    getOptions().then(response => {\r\n      console.log(`[ClosePeriodComponent.doInitOptions] response=>`, response)\r\n      let list = {\r\n        ...response.data.listService,\r\n        periodList: [\r\n          ...response.data.listService.periodList]\r\n      }\r\n      setMessage('')\r\n      setOptionsList(list)\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'ClosePeriodComponent.onRetrieve', 'ClosePeriodComponent.getOptions'));\r\n  }\r\n\r\n  const doShowProcessConfirmDialog = () => {\r\n    setMessage('')\r\n\r\n    if (doValidateParameters()) {\r\n      setConfirmDialogOpen(true)\r\n    }\r\n\r\n  }\r\n  const doCloseProcessConfirmDialog = () => {\r\n    setConfirmDialogOpen(false)\r\n  }\r\n\r\n  const setConfirmDialogSelection = (value) => {\r\n    console.log(`[ClosePeriodComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.OK) {\r\n      doProcesses()\r\n    }\r\n  }\r\n  const doValidateParameters = () => {\r\n    let errorMsg = []\r\n\r\n    if (!filter.periodFrom.id) {\r\n      errorMsg.push('Invalid Period From')\r\n    }\r\n    if (!filter.periodTo.id) {\r\n      errorMsg.push('Invalid Period To')\r\n    }\r\n    if (errorMsg.length == 0) {\r\n      if (filter.periodFrom.id == filter.periodTo.id) {\r\n        errorMsg.push('Invalid Period From and To. Period From and To should not be equal.')\r\n      }\r\n    }\r\n    if (errorMsg.length > 0) {\r\n      const msg = errorMsg.join(', ')\r\n      setMessage(msg);\r\n      //showErrorAlert(msg)\r\n      return false;\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const doProcesses = () => {\r\n    setMessage(`Process has started...`);\r\n    saveClosePeriod({\r\n      type: 'CLOSE_PERIOD',\r\n      params: {\r\n        fromPeriodId: filter.periodFrom.id,\r\n        toPeriodId: filter.periodTo.id\r\n      }\r\n    }).then(request => {\r\n      console.log(`[ClosePeriodComponent.changeSelectState] request=>`, request)\r\n\r\n      setMessage(`Done processing! Please see message in the list below.`);\r\n      doRetrieve()\r\n    })\r\n      .catch(error => {\r\n        setMessage(getFormatedErrorMessage(error, ERROR_CODE.SAVE_ERROR, 'ClosePeriodComponent.onRetrieve', 'ClosePeriodComponent.save'));\r\n        showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'ClosePeriodComponent.onRetrieve', 'ClosePeriodComponent.save')\r\n        doRetrieve()\r\n      });\r\n  }\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[ClosePeriodComponent.changeSelectState] name=${name}, value=${value}`)\r\n    setFilter({\r\n      ...filter,\r\n      [name]: { id: value }\r\n    })\r\n    console.log(`[ClosePeriodComponent.changeSelectState]  filter=`, filter)\r\n  }\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getListClosePeriod(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'ClosePeriodComponent.retrieve', 'ClosePeriodComponent.getListClosePeriod'))\r\n\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}/-1`)\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[ClosePeriodComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.DELETE_ERROR, 'ClosePeriodComponent.doDelete', 'CodeGroupsService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n  const cols = [\r\n    {\r\n      field: 'type',\r\n      headerName: 'Type',\r\n    }, {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      render: function (row) {\r\n        let status = row.status\r\n        if (status === 'X') {\r\n          status = 'Not Processed'\r\n        } else if (status === 'P') {\r\n          status = 'Pending'\r\n        } else if (status === 'R') {\r\n          status = 'Running'\r\n        } else if (status === 'F') {\r\n          status = 'Failed'\r\n        } else if (status === 'C') {\r\n          status = 'Completed'\r\n        }\r\n        return status\r\n      }\r\n    }, {\r\n      field: 'statusMessage',\r\n      headerName: 'Message',\r\n    }, {\r\n      headerName: 'User',\r\n      render: function (row) {\r\n        return row.user ? row.user.userName : ''\r\n      }\r\n    }, {\r\n      headerName: 'Creation',\r\n      render: function (row) {\r\n        return row.createdDate ? moment(row.createdDate).format('lll') : ''\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[ClosePeriodComponent.return] `)}\r\n      <TitleComponent>Close Period</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n      <form>\r\n        <Box py={5}>\r\n          <Paper elevation={2} variant=\"elevation\" >\r\n            <Box pb={3} px={3}>\r\n              <SubTitleComponent>Filter</SubTitleComponent>\r\n              <Grid container spacing={3}>\r\n                <SelectGrid sm={3} name=\"periodFrom\" label=\"From Period\" value={filter.periodFrom.id} options={optionsList.periodList}\r\n                  onChange={e => changeSelectState(e)} />\r\n                <SelectGrid sm={3} name=\"periodTo\" label=\"To Period\" value={filter.periodTo.id} options={optionsList.periodList}\r\n                  onChange={e => changeSelectState(e)} />\r\n              </Grid>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={() => doShowProcessConfirmDialog()} startIcon={<SaveIcon />}>Process</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={11}>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <CustomTableGrid\r\n          store={currPageable}\r\n          cols={cols}\r\n          onChangePage={doHandleChangePage}\r\n          onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n          doRetrieve={doRetrieve}\r\n          doEdit={doEdit}\r\n          doNew={doNew}\r\n          doDelete={doShowConfirmDelete}\r\n          doSearch={doSearch}\r\n        />\r\n        <ConfirmMsgDialog\r\n          open={deleteDialogOpen}\r\n          type={OPTIONS.YESNO}\r\n          title=\"Confirm delete\"\r\n          msg=\"Are you sure you want to delete?\"\r\n          closeDialog={doCloseConfirmDelete}\r\n          setDialogSelection={setDeleteDialogSelection} />\r\n\r\n        <ConfirmMsgDialog\r\n          open={confirmDialogOpen}\r\n          type={OPTIONS.OKCANCEL}\r\n          title=\"Please confirm\"\r\n          msg=\"You are about to close the period. Do you wish to continue?\"\r\n          closeDialog={doCloseProcessConfirmDialog}\r\n          setDialogSelection={setConfirmDialogSelection} />\r\n      </form>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE, URL_OPTIONS } from \"../Utils\";\r\n\r\nexport const ProcessingService = () => {\r\n\r\n const ENTITY = \"processing\";\r\n const sort = \"createdDate,desc\"\r\n\r\n const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\n const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\n const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\n const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\n\r\n const PROCESS_NAME_CLOSEPERIOD = \"CLOSE_PERIOD\"\r\n const getListClosePeriod = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY) + '/' + PROCESS_NAME_CLOSEPERIOD}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\n const getOptionsByPeriod = (periodId) => axios.get(API_URL_BASE + ENTITY + URL_OPTIONS + `/period/${periodId}`)\r\n const saveClosePeriod = (data) => axios.patch(`${API_URL_BASE + ENTITY + '/period'}`, data)\r\n\r\n return {\r\n  getList: getList,\r\n  get: get,\r\n  getOptions: getOptions,\r\n  deleteItem: deleteItem,\r\n  //save: save,\r\n\r\n  getListClosePeriod: getListClosePeriod,\r\n  getOptionsByPeriod: getOptionsByPeriod,\r\n  saveClosePeriod: saveClosePeriod\r\n }\r\n}\r\n\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nimport { PAGE_URL } from './api/Utils';\r\n\r\nimport ErrorComponent from './api/ErrorComponent'\r\nimport FooterComponent from './forms/common/FooterComponent'\r\n\r\nimport EndUserListComponent from './forms/endUser/EndUserListComponent';\r\nimport EndUserDetailComponent from './forms/endUser/EndUserDetailComponent';\r\n\r\nimport AuthenticatedRoute from './security/AuthenticatedRoute'\r\nimport SignInComponent from './security/SignInComponent';\r\nimport LogoutComponent from './security/LogoutComponent'\r\nimport CodeGroupsListComponent from './forms/codeGroups/CodeGroupsListComponent';\r\nimport CodeGroupsDetailComponent from './forms/codeGroups/CodeGroupsDetailComponent';\r\nimport Dashboard from './forms/dashboard/Dashboard';\r\nimport AppBarComponent from './forms/common/AppBarComponent';\r\nimport StudentDetailComponent from './forms/student/StudentDetailComponent';\r\nimport StudentListComponent from './forms/student/StudentListComponent';\r\nimport SchoolDetailComponent from './forms/school/SchoolDetailComponent';\r\nimport SchoolListComponent from './forms/school/SchoolListComponent';\r\nimport BillingComponent from './forms/billing/BillingComponent';\r\nimport AccountPayablesSettingsListComponent from './forms/accountPayables/AccountPayablesSettingsListComponent';\r\nimport AccountPayablesSettingsDetailComponent from './forms/accountPayables/AccountPayablesSettingsDetailComponent';\r\nimport GradeLevelPayablesListComponent from './forms/gradeLevelPayables/GradeLevelPayablesListComponent';\r\nimport GradeLevelPayablesDetailsComponent from './forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent';\r\nimport GlobalAlertMsgDialog from './forms/common/GlobalAlertMsgDialog';\r\nimport ClosePeriodComponent from './forms/closePeriod/ClosePeriodComponent';\r\n\r\nconst useStylesRouting = makeStyles((theme) => ({\r\n root: {\r\n  display: 'flex',\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n container: {\r\n  paddingTop: theme.spacing(4),\r\n  paddingBottom: theme.spacing(4),\r\n },\r\n\r\n}));\r\n\r\nconst AppRouting = () => {\r\n const classes = useStylesRouting();\r\n\r\n return (\r\n  <>\r\n   <CssBaseline />\r\n   <Router>\r\n    <div className={classes.root}>\r\n\r\n     <AppBarComponent />\r\n\r\n     <main className={classes.content}>\r\n\r\n      {/* to display content below the toolbar */}\r\n      <div className={classes.toolbar} />\r\n\r\n      <GlobalAlertMsgDialog />\r\n\r\n      <Switch>\r\n       <Route path={PAGE_URL.ROOT} exact component={Dashboard} />\r\n       <Route path={PAGE_URL.INDEX} exact component={Dashboard} />\r\n\r\n       <Route path={PAGE_URL.LOGOUT} component={LogoutComponent} />\r\n       <Route path={PAGE_URL.LOGIN} component={SignInComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.STUDENT_LIST} component={StudentListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL} component={StudentDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL_URL} component={StudentDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.BILLING_PAYABLES} exact component={BillingComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.BILLING} exact component={BillingComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.USER_LIST} exact component={EndUserListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.USER_DETAIL} exact component={EndUserDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.USER_DETAIL_URL} exact component={EndUserDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_LIST} exact component={CodeGroupsListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL} exact component={CodeGroupsDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL_URL} exact component={CodeGroupsDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.SCHOOL_LIST} exact component={SchoolListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL} exact component={SchoolDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL_URL} exact component={SchoolDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST} exact component={AccountPayablesSettingsListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL} exact component={AccountPayablesSettingsDetailComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL} exact component={AccountPayablesSettingsDetailComponent} />\r\n\r\n       <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_LIST} exact component={GradeLevelPayablesListComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL} exact component={GradeLevelPayablesDetailsComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL} exact component={GradeLevelPayablesDetailsComponent} />\r\n       <AuthenticatedRoute path={PAGE_URL.CLOSE_PERIOD_DETAIL_URL} exact component={ClosePeriodComponent} />\r\n\r\n\r\n       <Route component={ErrorComponent} />\r\n      </Switch>\r\n\r\n      <FooterComponent />\r\n     </main>\r\n    </div>\r\n   </Router>\r\n  </>\r\n );\r\n\r\n}\r\n\r\nexport default AppRouting;","import React, { useEffect } from 'react'\r\nimport './App.css'\r\nimport { Provider } from 'react-redux'\r\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'\r\n\r\nimport store from './api/store'\r\n\r\nimport AppRouting from './AppRouting'\r\nimport { THEME, useTheme } from './api/useTheme'\r\nimport useSecurityServices from './security/useSecurityServices'\r\n\r\nfunction App() {\r\n  const { initAxios, initUser } = useSecurityServices()\r\n  const useAppTheme = useTheme()\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: useAppTheme.props.darkMode ? THEME.DARK_MODE : THEME.LIGHT_MODE,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    //initialize user\r\n    initAxios()\r\n    initUser()\r\n    useAppTheme.initTheme()\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <AppRouting />\r\n        </MuiThemeProvider>\r\n      </Provider>\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { GlobalVariableProvider } from './providers/GlobalVariableProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalVariableProvider>\r\n      <App />\r\n    </GlobalVariableProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","\r\nimport { TableCell, TableRow } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport const INIT_STATUS = {\r\n    INIT: 'INIT',\r\n    DONE: 'DONE',\r\n    LOAD: 'LOAD',\r\n    RESET: 'RESET',\r\n    PAYABLES: 'PAYABLES',\r\n    PAYABLES_RESET: 'PAYABLES_RESET'\r\n}\r\n\r\nexport const defaultPageable = {\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0,\r\n        totalPage: 0\r\n    }\r\n}\r\n\r\n\r\nexport const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n});\r\n\r\nexport const USER_TEMP = {\r\n    userName: '',\r\n    userFullName: 'Guest',\r\n    schoolName: 'SARA PROJECT',\r\n    schoolAddress: '',\r\n    schoolLogo: '',\r\n    schoolId: '',\r\n}\r\n// export const URL_BASE = 'http://localhost:8081';\r\nexport const URL_BASE_DEV = 'http://localhost:5000';\r\nexport const URL_BASE = process.env.NODE_ENV === 'development' ? URL_BASE_DEV : '';\r\nexport const AUTH_URL_BASE = URL_BASE + '/auth';\r\nexport const API_URL_BASE = URL_BASE + '/api/';\r\n\r\nexport const URL_LIST = \"/l\";\r\nexport const URL_DELETE = \"/d\";\r\nexport const URL_DETAILS = \"/g\";\r\nexport const URL_OPTIONS = \"/o\";\r\nexport const URL_SAVE = \"/s\";\r\n\r\nexport const AUTH_USER = 'auth/setUser';\r\nexport const AUTH_USER_OBJ = 'auth/setUserObj';\r\nexport const JWT_TOKEN = 'auth/setToken';\r\n\r\nexport const UPDATE_ERROR = 'Error: Unable to update. Please contact system administrator.';\r\nexport const REQUIRED_DESCRIPTION = 'Description is required';\r\nexport const REQUIRED_5_DESCRIPTION = 'Description should be atleast 5 characters';\r\nexport const REQUIRED_TARGET_DATE = 'Target date is required';\r\n\r\n\r\nexport const OPTIONS = {\r\n    YESNO: 'YESNO',\r\n    YES: 'YES',\r\n    NO: 'NO',\r\n    OKCANCEL: 'OKCANCEL',\r\n    OK: 'OK',\r\n    CANCEL: 'CANCEL'\r\n}\r\nexport const PAGE_URL = {\r\n    LOGO_URL: '/r/logo/',\r\n    ROOT: '/',\r\n    INDEX: '/index.html',\r\n    DASHBOARD: '/dashboard',\r\n    LOGOUT: '/logout',\r\n    LOGIN: '/login',\r\n    GRADE_LEVEL_PAYABLES_LIST: '/ui/grade-level-payables-list',\r\n    GRADE_LEVEL_PAYABLES_DETAIL: '/ui/grade-level-payables-detail/:id',\r\n    GRADE_LEVEL_PAYABLES_DETAIL_URL: '/ui/grade-level-payables-detail',\r\n    ACCOUNT_PAYABLES_SETTINGS_LIST: '/ui/account-payables-settings-list',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL: '/ui/account-payables-settings-detail/:id',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL: '/ui/account-payables-settings-detail',\r\n    SCHOOL_LIST: '/ui/school-list',\r\n    SCHOOL_DETAIL: '/ui/school-detail/:id',\r\n    SCHOOL_DETAIL_URL: '/ui/school-detail',\r\n    STUDENT_LIST: '/ui/student-list',\r\n    STUDENT_DETAIL: '/ui/student-detail/:id',\r\n    STUDENT_DETAIL_URL: '/ui/student-detail',\r\n    BILLING: '/ui/billing',\r\n    BILLING_PAYABLES: '/ui/billing/:id',\r\n    BILLING_PAYABLES_URL: '/ui/billing',\r\n    USER_LIST: '/ui/user-list',\r\n    USER_DETAIL: '/ui/user-detail/:id',\r\n    USER_DETAIL_URL: '/ui/user-detail',\r\n    CODE_GROUPS_DETAIL: '/ui/code-groups-detail/:id',\r\n    CODE_GROUPS_DETAIL_URL: '/ui/code-groups-detail',\r\n    CODE_GROUPS_LIST: '/ui/code-groups-list',\r\n    ADDRESS_LIST: '/ui/address-list',\r\n    ADDRESS_DETAIL: '/ui/address-detail/:id',\r\n    USER_ADDRESS_DETAIL: '/ui/address-detail/:id/:refId/:typeId',\r\n    CLOSE_PERIOD_DETAIL_URL: '/ui/close-period-detail'\r\n\r\n}\r\nexport const ERROR_CODE = {\r\n    LOGIN_ERROR: '100000',\r\n    RETRIEVE_ERROR: '100001',\r\n    SAVE_ERROR: '100002',\r\n    DELETE_ERROR: '100003',\r\n    LIST_ERROR: '100004'\r\n}\r\n\r\nexport const ADDRESS_TYPE = {\r\n    USER: '1',\r\n    STUDENT: '2',\r\n    PARENT: '3'\r\n}\r\nexport const StyledTableHeadRow = withStyles((theme) => ({\r\n    root: {\r\n        fontWeight: \"bold\",\r\n        // '&:nth-of-type(odd)': {\r\n        //     backgroundColor: theme.palette.background,\r\n        // },\r\n    },\r\n    head: {\r\n        // backgroundColor: theme.palette.common.black,\r\n        // color: theme.palette.common.white,\r\n    },\r\n    // body: {\r\n    //     fontSize: 14,\r\n    //     fontWeight: \"bold\",\r\n    // },\r\n}))(TableRow);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        }\r\n    },\r\n}))(TableRow);\r\n\r\nexport const StyledTableHeadCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 16,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 12,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 14,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 20,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nclass Utils {\r\n\r\n    getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.error(`[${formMethod}] ${serviceName} error msg: ${errMsg}`, error);\r\n        console.error(`[${formMethod}] ${serviceName} error `, JSON.stringify(error));\r\n\r\n        if (error.message) {\r\n            errMsg = error.message\r\n        }\r\n\r\n        if (error.response) {\r\n            // Request made and server responded\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n            errMsg = `${error.response.data}`\r\n        }\r\n\r\n        return errMsg;\r\n    }\r\n    urlListPattern = (entity) => API_URL_BASE + entity + URL_LIST\r\n    urlDeletePattern = (entity) => API_URL_BASE + entity + URL_DELETE\r\n    urlDetailsPattern = (entity) => API_URL_BASE + entity + URL_DETAILS\r\n    urlOptionsPattern = (entity) => API_URL_BASE + entity + URL_OPTIONS\r\n    urlSavePattern = (entity) => API_URL_BASE + entity + URL_SAVE\r\n}\r\n\r\nexport default new Utils();"],"sourceRoot":""}