{"version":3,"sources":["providers/GlobalVariableProvider.js","providers/AuthenticationProvider.js","api/CommonSlice.js","api/school/SchoolSlice.js","api/codeGroups/CodeGroupsSlice.js","api/endUser/UsersSlice.js","api/student/StudentSlice.js","api/gradeLevelPayables/GradeLevelSlice.js","api/accountPayablesSettings/AccountPayablesSettingsSlice.js","api/billing/BillingSlice.js","api/store.js","api/ErrorComponent.jsx","forms/common/FooterComponent.jsx","forms/common/PaginationComponent.js","forms/common/CustomTableGrid.js","api/endUser/EndUserService.jsx","forms/common/TitleComponent.jsx","api/useMessageAlert.js","forms/common/ConfirmMsgDialog.js","forms/endUser/EndUserListComponent.jsx","forms/endUser/EndUserDetailHtml.js","forms/endUser/EndUserDetailComponent.jsx","security/useAuthServices.js","security/AuthenticatedRoute.jsx","forms/common/CSS.js","security/SignInHtml.js","security/SignInComponent.js","security/LogoutComponent.jsx","api/codeGroups/CodeGroupsService.js","forms/codeGroups/CodeGroupsListComponent.js","forms/codeGroups/CodeGroupsDetailComponent.jsx","forms/dashboard/Chart.js","forms/dashboard/StackedBarChart.js","forms/dashboard/CustomContentOfTooltip.js","forms/dashboard/Dashboard.jsx","forms/common/MenuListItems.js","forms/common/MiniDrawer.js","forms/common/AppBarComponent.js","forms/student/StudentDetailHtml.js","api/student/StudentService.jsx","forms/student/StudentDetailComponent.js","forms/student/StudentListComponent.jsx","api/school/SchoolService.js","forms/school/SchoolDetailComponent.jsx","forms/school/SchoolListComponent.js","forms/common/SubTitleComponent.jsx","forms/billing/SearchResultsHtmlComponent.js","forms/common/SelectGrid.js","forms/billing/PayablesHtmlComponent.js","forms/billing/BillingHtmlComponent.js","forms/billing/SavePayablesConfimationHtml.js","forms/billing/BillingComponent.js","api/billing/BillingService.jsx","api/accountPayablesSettings/AccountPayablesSettingsService.jsx","forms/accountPayables/AccountPayablesSettingsListComponent.js","forms/accountPayables/AccountPayablesSettingsDetailComponent.jsx","api/gradeLevelPayables/GradeLevelPayablesService.js","forms/gradeLevelPayables/GradeLevelPayablesListComponent.js","forms/gradeLevelPayables/GradeLevelAccountPayablesSettingsListComponent.js","forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent.jsx","forms/common/GlobalAlertMsgDialog.js","AppRouting.jsx","App.js","serviceWorker.js","index.js","api/Utils.js"],"names":["GlobalVariableContext","createContext","GlobalVariableProvider","props","useState","ui","darkMode","globalProps","setGlobalProps","title","label","open","severity","msg","value","alertProp","setAlertProp","setAlertProps","prop","setUIProps","useMemo","Provider","AuthenticationContext","useAuth","context","useContext","Error","AuthenticationProvider","USER_TEMP","userObj","setUserObj","resetSelectedItemCommon","state","action","blankSelectedItem","selectedItem","setSelectedItemCommon","payload","updateSelectedItemCommon","temp","setPageableCommon","pageable","setPageableEntityCommon","blankPageable","list","setOptionsListCommon","optionsList","INIT_STATUS","INIT","searchValue","paging","rowsPerPage","totalElements","currentPage","totalPage","currentPeriod","periodList","SchoolSlice","createSlice","name","initialState","reducers","resetSelectedItem","setSelectedItem","data","values","initForm","updateSelectedItem","setPageable","setPageableEntity","setOptionsList","actions","selectPageable","school","selectSelectedItem","CodeGroupsSlice","codeGroups","id","schoolList","UsersSlice","setSearchValue","users","defaultPageable","level","studentLevelList","StudentSlice","birthDate","moment","format","students","period","active","levelList","applyToAllList","GradeLevelSlice","console","log","accountPayablesSettings","length","map","i","status","tempList","push","row","indexOf","rowTemp","gradeLevels","paymentPeriod","paymentPeriodList","AccountPayablesSettingsSlice","billingSearchBy","searchBy","searchFlag","payablesFlag","studentId","firstName","lastName","description","blankConfirmPayables","entity","payables","payablesByInvoiceNo","BillingSlice","confirmPayables","updatePageable","updatePageableCommon","setConfirmPayables","updateConfirmPayables","billing","configureStore","reducer","SchoolReducer","CodeGroupsReducer","UsersReducer","StudentReducer","GradeLevelReducer","AccountPayablesSettingsReducer","BillingReducer","ErrorComponent","render","className","React","Component","Copyright","Box","mx","pt","Divider","Typography","variant","color","align","href","Date","getFullYear","FooterComponent","mt","PaginationComponent","TablePagination","rowsPerPageOptions","component","page","count","onChangePage","onChangeRowsPerPage","CustomTableGrid","showPaging","showSearch","showAction","register","useForm","counter","setCounter","Grid","container","spacing","item","xs","sm","FormControl","Input","defaultValue","store","onKeyDown","e","key","doSearch","target","preventDefault","doHandleKeyDown","placeholder","inputRef","endAdornment","onClick","doRetrieve","children","TableContainer","Paper","elevation","Table","TableHead","cols","params","headerName","field","IconButton","aria-label","doNew","fontSize","TableBody","TableCell","doEdit","doDelete","doHandleChangePage","doHandleChangeRowsPerPage","ENTITY","TitleComponent","pb","useMessageAlert","useGlobalVariable","showErrorMsgAlert","error","errorCode","formMethod","serviceName","errMsg","getFormatedErrorMessage","showMsgAlert","showErrorAlert","showInfoAlert","showWarningAlert","showSuccessAlert","closeMsgAlert","JSON","stringify","message","response","headers","type","ConfirmMsgDialog","setReturnValue","closeDialog","setDialogSelection","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","aria-describedby","DialogTitle","Alert","DialogContent","DialogContentText","DialogActions","Button","OPTIONS","YES","NO","EndUserListComponent","alert","dispatch","useDispatch","currPageable","useSelector","deleteDialogOpen","setDeleteDialogOpen","deleteId","setDeleteId","useEffect","retrieve","pageSize","axios","get","Utils","urlListPattern","getList","then","LOAD","pagingList","content","size","pageNumber","catch","ERROR_CODE","LIST_ERROR","delete","urlDeletePattern","deleteItem","newPage","selected","history","PAGE_URL","USER_DETAIL_URL","EndUserDetailHtml","control","handleSubmit","setStatus","useHistory","entityId","RESET","onSubmit","onSubmitForm","startIcon","USER_LIST","TextField","required","autoComplete","autoFocus","InputLabelProps","shrink","userName","password","as","select","MenuItem","options","EndUserDetailComponent","setMessage","match","urlOptionsPattern","listService","RETRIEVE_ERROR","post","urlSavePattern","save","SAVE_ERROR","myInterceptor","useAuthServices","getJwtTokenHeader","jwtToken","getJwtToken","sessionStorage","getItem","JWT_TOKEN","setupAxiosInterceptors","authHeader","interceptors","request","use","a","config","isUserLoggedIn","authorization","getSessionStorageLoginUser","AUTH_USER","jwtTokenHeader","username","AUTH_URL_BASE","setItem","AUTH_USER_OBJ","user","parse","eject","removeItem","AuthenticatedRoute","isLoggedin","to","useStyles","makeStyles","theme","backgroundColor","palette","mode","grey","flexGrow","height","overflow","paddingTop","paddingBottom","login_paper","marginTop","display","flexDirection","alignItems","login_avatar","margin","secondary","main","login_form","width","login_submit","avatar_40","avatar_70","SignInHtml","classes","Container","Avatar","formData","onSignon","submit","SignInComponent","executeJwtAuthenticationService","registerJwtSucessfulLogin","userDetails","isLoggedIn","token","LOGIN_ERROR","LogoutComponent","logout","CodeGroupsListComponent","DELETE_ERROR","CODE_GROUPS_DETAIL_URL","CodeGroupsDetailComponent","CODE_GROUPS_LIST","code","priority","multiline","rows","json","uv","pv","amt","Chart","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","PureComponent","jsfiddleUrl","StackedBarChart","stackId","fill","getIntroOfPage","CustomTooltip","CustomContentOfTooltip","barSize","Dashboard","process","URL_BASE","isLogin","src","faker","image","fashion","commerce","productName","random","words","people","food","px","py","m","MenuListItems","List","ListItem","button","ListItemIcon","BILLING","ListItemText","primary","ACCOUNT_PAYABLES_SETTINGS_LIST","GRADE_LEVEL_PAYABLES_LIST","STUDENT_LIST","SCHOOL_LIST","LOGOUT","LOGIN","useStylesDrawer","drawer","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","MiniDrawer","useTheme","Drawer","clsx","paper","doHandleDrawerClose","direction","AppBarComponent","root","appBar","zIndex","appBarShift","marginLeft","menuButton","marginRight","hide","paddingLeft","useStylesAppBar","setDrawerOpen","AppBar","position","Toolbar","edge","schoolLogo","LOGO_URL","noWrap","style","textDecoration","schoolName","userFullName","pl","FormControlLabel","Switch","checked","onChange","toggleDarkMode","StudentDetailHtml","reset","onRetrieve","BUTTONS","STUDENT_DETAIL_URL","lrn","birthPlace","FormLabel","RadioGroup","Radio","labelPlacement","gender","contactNo","address1","address2","city","zipCode","editable","country","fathersName","mothersName","mothersOccupation","parentCivilStatus","guardianName","StudentDetailComponent","StudentListComponent","SchoolDetailComponent","SCHOOL_DETAIL_URL","logo","address","SchoolListComponent","currPageableSchools","SubTitleComponent","SearchResultsHtmlComponent","CustomTableHead","CustomTableBody","doPayables","doShowPayables","SelectGrid","rest","require","StyledTableRow","StyledTableHeadRow","StyledTableHeadCell","PayablesHtmlComponent","total","setTotal","setPayables","periodId","currentState","setCurrentState","changeSelectStateByPeriod","changeSelectState","PAYABLES_RESET","resetPayables","doUpdateCurrPageable","DONE","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","hasNext","doShowSaveBillingDialog","studentPayables","aps","payment","amount","toLocaleString","undefined","paid","balance","onBlur","el","replaceAll","numValue","Number","onPaymentBlur","InputProps","startAdornment","InputAdornment","colSpan","billingByInvoice","invoiceNo","invoiceDate","payablesMap","BillingHtmlComponent","my","Select","doShowSaveConfirmDialog","SavePayablesConfimationHtml","confirmStore","componentRef","useRef","handlePrint","useReactToPrint","current","ConfirmPage","balanceTotal","paymentTotal","PrintableInvoicePage","ref","border","schoolAddress","saveDialog","BillingComponent","vertical","horizontal","snackbar","setSnackbar","setConfirmStore","doInitFormData","by","API_URL_BASE","doSavePayables","student","doOpenSnackBar","doInitConfirmStore","doCloseSnackbar","getStudentPayablesByPeriod","optionsListTemp","confirmStoreTemp","Snackbar","autoHideDuration","anchorOrigin","AccountPayablesSettingsListComponent","applyToAll","ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL","renderCount","AccountPayablesSettingsDetailComponent","GradeLevelPayablesListComponent","sort","b","GRADE_LEVEL_PAYABLES_DETAIL_URL","GradeLevelAccountPayablesSettingsListComponent","setStore","setGradeLevelPayables","doAddItem","GradeLevelPayablesDetailsComponent","URL_OPTIONS","onRetrieveResponseAction","GridActionButtons","filter","disabled","onChangePeriod","FormGroup","Checkbox","handleCheckboxChange","GlobalAlertMsgDialog","useStylesRouting","AppRouting","initialize","getLoggedUserObj","initTheme","lu","themeDarkMode","localStorage","THEME","THEME_STORAGE_NAME","setDarkMode","createMuiTheme","DARK_MODE","LIGHT_MODE","CssBaseline","path","ROOT","exact","INDEX","STUDENT_DETAIL","BILLING_PAYABLES","USER_DETAIL","CODE_GROUPS_DETAIL","SCHOOL_DETAIL","ACCOUNT_PAYABLES_SETTINGS_DETAIL","GRADE_LEVEL_PAYABLES_DETAIL","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","PAYABLES","schoolId","URL_BASE_DEV","URL_LIST","URL_DELETE","URL_DETAILS","URL_SAVE","UPDATE_ERROR","REQUIRED_DESCRIPTION","REQUIRED_5_DESCRIPTION","REQUIRED_TARGET_DATE","DASHBOARD","BILLING_PAYABLES_URL","ADDRESS_LIST","ADDRESS_DETAIL","USER_ADDRESS_DETAIL","ADDRESS_TYPE","USER","STUDENT","PARENT","withStyles","fontWeight","head","TableRow","hover","fontStyle","body","StyledTableCell","urlDetailsPattern"],"mappings":"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","file":"static/js/main.e56c6f96.chunk.js","sourcesContent":["import { createContext, useContext, useMemo, useState } from 'react';\r\n\r\nconst GlobalVariableContext = createContext();\r\n\r\nfunction useGlobalVariable() {\r\n    const context = useContext(GlobalVariableContext)\r\n    if (!context) {\r\n        throw new Error(`useGlobalVariable must be used within an GlobalVariableProvider`)\r\n    }\r\n    return context;\r\n}\r\n\r\nfunction GlobalVariableProvider(props) {\r\n    const [globalProps, setGlobalProps] = useState({\r\n        ui: {\r\n            darkMode: false\r\n        }\r\n    })\r\n\r\n    const [alertProp, setAlertProp] = useState({\r\n        title: '',\r\n        label: 'Ok',\r\n        open: false,\r\n        severity: 'info',\r\n        msg: '',\r\n        value: {}\r\n    })\r\n    \r\n    const setAlertProps = (prop) => {\r\n        setAlertProp({\r\n            ...alertProp,\r\n            ...prop\r\n        })\r\n    }\r\n\r\n    const setUIProps = (prop) => {\r\n        setGlobalProps({\r\n            ...globalProps,\r\n            ui: {\r\n                ...globalProps.ui,\r\n                ...prop\r\n            }\r\n        })\r\n    }\r\n\r\n    const value = useMemo(() => [globalProps, setGlobalProps, setAlertProps, setUIProps, alertProp],\r\n        [globalProps, alertProp])\r\n    return <GlobalVariableContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { GlobalVariableProvider, useGlobalVariable }\r\n\r\n","import { USER_TEMP } from '../api/Utils'\r\nimport { createContext, useContext, useMemo, useState } from 'react';\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nfunction useAuth() {\r\n const context = useContext(AuthenticationContext)\r\n if (!context) {\r\n  throw new Error(`useAuth must be used within an AuthenticationProvider`)\r\n }\r\n return context;\r\n}\r\n\r\nfunction AuthenticationProvider(props) {\r\n const [userObj, setUserObj] = useState(USER_TEMP);\r\n\r\n const value = useMemo(() => [userObj, setUserObj], [userObj])\r\n return <AuthenticationContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { AuthenticationProvider, useAuth }\r\n\r\n","\r\n\r\n\r\n\r\nexport const resetSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem\r\n }\r\n}\r\n\r\nexport const setSelectedItemCommon = (state, action, blankSelectedItem) => {\r\n state.selectedItem = {\r\n  ...blankSelectedItem,\r\n  ...action.payload\r\n }\r\n}\r\n\r\nexport const updateSelectedItemCommon = (state, action) => {\r\n let temp = {\r\n  ...state.selectedItem,\r\n  ...action.payload\r\n }\r\n state.selectedItem = temp\r\n}\r\n\r\nexport const setPageableCommon = (state, action) => {\r\n state.pageable = action.payload\r\n}\r\n\r\nexport const updatePageableCommon = (state, action) => {\r\n state.pageable = {\r\n  ...state.pageable,\r\n  ...action.payload\r\n }\r\n}\r\n\r\nexport const setPageableEntityCommon = (state, action, blankPageable) => {\r\n let temp = {\r\n  ...blankPageable\r\n }\r\n temp.list = [action.payload]\r\n state.pageable = temp\r\n}\r\nexport const setSearchValueCommon = (state, action) => {\r\n state.searchValue = action.payload\r\n}\r\n\r\nexport const setOptionsListCommon = (state, action) => {\r\n state.selectedItem = {\r\n  ...state.selectedItem,\r\n  optionsList: { ...action.payload }\r\n }\r\n}\r\n\r\nexport default function CommonSlice() {\r\n\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\nimport { INIT_STATUS } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nexport const blankSelectedItem = {\r\n\tcurrentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tperiodList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.currentPeriod == null) {\r\n\t\tdata.currentPeriod = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const SchoolSlice = createSlice({\r\n\tname: 'school',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, updateSelectedItem, setOptionsList } = SchoolSlice.actions\r\n\r\nexport const selectPageable = state => state.school.pageable\r\nexport const selectSelectedItem = state => state.school.selectedItem\r\nexport const selectSearchValue = state => state.school.searchValue\r\n\r\nexport default SchoolSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\toptionsList: {\r\n\t}\r\n}\r\nexport const CodeGroupsSlice = createSlice({\r\n\tname: 'codeGroups',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity } = CodeGroupsSlice.actions\r\n\r\nexport const selectPageable = state => state.codeGroups.pageable\r\nexport const selectSelectedItem = state => state.codeGroups.selectedItem\r\nexport const selectSearchValue = state => state.codeGroups.searchValue\r\n\r\n\r\nexport default CodeGroupsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tschool: { id: '' },\r\n\toptionsList: {\r\n\t\tschoolList: [],\r\n\t}\r\n}\r\n\r\nexport const UsersSlice = createSlice({\r\n\tname: 'users',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem } = UsersSlice.actions\r\n\r\nexport const selectPageable = state => state.users.pageable\r\nexport const selectSelectedItem = state => state.users.selectedItem\r\nexport const selectSearchValue = state => state.users.searchValue\r\n\r\n\r\nexport default UsersSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport moment from 'moment';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nimport { resetSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\toptionsList: {\r\n\t\tstudentLevelList: []\r\n\t}\r\n}\r\n\r\nexport const StudentSlice = createSlice({\r\n\tname: 'students',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tbirthDate: moment(action.payload.birthDate).format('YYYY-MM-DD'),\r\n\t\t\t\toptionsList: {\r\n\t\t\t\t\tstudentLevelList: []\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, setPageable, setPageableEntity, setSearchValue, updateSelectedItem, setOptionsList } = StudentSlice.actions\r\n\r\nexport const selectPageable = state => state.students.pageable\r\nexport const selectSelectedItem = state => state.students.selectedItem\r\nexport const selectSearchValue = state => state.students.searchValue\r\n\r\n\r\nexport default StudentSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { resetSelectedItemCommon, setPageableCommon, setPageableEntityCommon, updateSelectedItemCommon } from '../CommonSlice';\r\nimport { defaultPageable } from '../Utils'\r\n\r\nconst blankPageable = {\r\n\t...defaultPageable\r\n}\r\nconst blankSelectedItem = {\r\n\tlevel: { 'id': '' },\r\n\tperiod: { 'id': '' },\r\n\tactive: true,\r\n\tlist: [],\r\n\toptionsList: {\r\n\t\tlevelList: [],\r\n\t\tperiodList: [],\r\n\t\tapplyToAllList: []\r\n\t}\r\n}\r\n\r\nconst initForm = (values) => {\r\n\tlet data = {\r\n\t\t...values\r\n\t}\r\n\tif (data.period == null) {\r\n\t\tdata.period = { 'id': '' }\r\n\t}\r\n\treturn data\r\n}\r\n\r\nexport const GradeLevelSlice = createSlice({\r\n\tname: 'gradeLevels',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => {\r\n\t\t\tconst data = initForm(action.payload)\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...blankSelectedItem,\r\n\t\t\t\t...data\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetOptionsList: (state, action) => {\r\n\t\t\tconsole.log(`[GradeLevelSlice.setOptionsList] action=`, action)\r\n\t\t\tconst optionsList = action.payload\r\n\t\t\tlet list = state.selectedItem.accountPayablesSettings ? state.selectedItem.accountPayablesSettings : []\r\n\t\t\tlet applyToAllList = optionsList.applyToAllList;\r\n\t\t\tif (list.length === 0) {\r\n\t\t\t\tlist = [...applyToAllList]\r\n\t\t\t\tlist.map(i => i.status = 'NEW')\r\n\t\t\t} else {\r\n\t\t\t\tlet temp = [];\r\n\t\t\t\tlet tempList = [];\r\n\r\n\t\t\t\tlist.map(({ id }) => temp.push(id));\r\n\t\t\t\tapplyToAllList.map(row => {\r\n\t\t\t\t\tif (temp.indexOf(row.id) === -1) {\r\n\t\t\t\t\t\tlet rowTemp = {\r\n\t\t\t\t\t\t\t...row,\r\n\t\t\t\t\t\t\tstatus: 'NEW'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttempList.push(rowTemp)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn row\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet tempList2 = [\r\n\t\t\t\t\t...tempList,\r\n\t\t\t\t\t...list\r\n\t\t\t\t];\r\n\t\t\t\tlist = tempList2;\r\n\t\t\t}\r\n\t\t\tstate.selectedItem = {\r\n\t\t\t\t...state.selectedItem,\r\n\t\t\t\tlist: list,\r\n\t\t\t\toptionsList: { ...optionsList }\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\t// updateSelectedItem: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...state.selectedItem,\r\n\t\t// \t\t...action.payload\r\n\t\t// \t}\r\n\t\t// \tstate.selectedItem = temp\r\n\t\t// },\r\n\r\n\t\t// setPageable: (state, action) => {\r\n\t\t// \tstate.pageable = action.payload\r\n\t\t// },\r\n\r\n\t\t// setPageableEntity: (state, action) => {\r\n\t\t// \tlet temp = {\r\n\t\t// \t\t...blankPageable\r\n\t\t// \t}\r\n\t\t// \ttemp.list = [action.payload]\r\n\t\t// \tstate.pageable = temp\r\n\t\t// },\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, resetSelectedItem, setOptionsList, updateSelectedItem, setPageable, setPageableEntity, setSearchValue } = GradeLevelSlice.actions\r\n\r\nexport const selectPageable = state => state.gradeLevels.pageable\r\nexport const selectSelectedItem = state => state.gradeLevels.selectedItem\r\nexport const selectSearchValue = state => state.gradeLevels.searchValue\r\n\r\n\r\nexport default GradeLevelSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon } from '../CommonSlice'\r\n\r\nconst blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t}\r\n}\r\nconst blankSelectedItem = {\r\n\tperiod: { 'id': '' },\r\n\tpaymentPeriod: { 'id': '' },\r\n\toptionsList: {\r\n\t\tpaymentPeriodList: [],\r\n\t\tperiodList: []\r\n\t}\r\n}\r\nexport const AccountPayablesSettingsSlice = createSlice({\r\n\tname: 'accountPayablesSettings',\r\n\tinitialState: {\r\n\t\tsearchValue: '',\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\t}\r\n})\r\n\r\nexport const { resetSelectedItem, setSelectedItem, updateSelectedItem, setPageable, setPageableEntity, setOptionsList } = AccountPayablesSettingsSlice.actions\r\n\r\nexport const selectPageable = state => state.accountPayablesSettings.pageable\r\nexport const selectSelectedItem = state => state.accountPayablesSettings.selectedItem\r\nexport const selectSearchValue = state => state.accountPayablesSettings.searchValue\r\n\r\n\r\nexport default AccountPayablesSettingsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { INIT_STATUS } from '../Utils'\r\nimport { resetSelectedItemCommon, setSelectedItemCommon, updateSelectedItemCommon, setPageableCommon, setPageableEntityCommon, setOptionsListCommon, updatePageableCommon } from '../CommonSlice'\r\n\r\n\r\nexport const optionsList = {\r\n\tbillingSearchBy: [{\r\n\t\tid: '1',\r\n\t\tvalue: 'LRN',\r\n\t\tlabel: 'LRN'\r\n\t}, {\r\n\t\tid: '2',\r\n\t\tvalue: 'STUDENT_NAME',\r\n\t\tlabel: 'Student Name'\r\n\t}]\r\n}\r\nexport const blankPageable = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tlist: [],\r\n\tsearchValue: '',\r\n\tsearchBy: '',\r\n\tsearchFlag: true,\r\n\tpayablesFlag: false,\r\n\tpaging: {\r\n\t\trowsPerPage: 25,\r\n\t\ttotalElements: 0,\r\n\t\tcurrentPage: 0,\r\n\t\ttotalPage: 0\r\n\t},\r\n\toptionsList: optionsList\r\n}\r\nconst blankSelectedItem = {\r\n\tstudentId: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\tlevel: {\r\n\t\tid: '',\r\n\t\tvalue: '',\r\n\t\tdescription: ''\r\n\t},\r\n\tschool: {\r\n\t\tid: ''\r\n\t}\r\n}\r\n\r\nconst blankConfirmPayables = {\r\n\tINIT_STATUS: INIT_STATUS.INIT,\r\n\tentity: {\r\n\t\tstudentId: '',\r\n\t\tfirstName: '',\r\n\t\tlastName: '',\r\n\t\tlevel: {\r\n\t\t\tid: '',\r\n\t\t\tvalue: '',\r\n\t\t\tdescription: ''\r\n\t\t}\r\n\t},\r\n\tpayables: [],\r\n\tpayablesByInvoiceNo: [],\r\n\topen: false\r\n}\r\n\r\nexport const BillingSlice = createSlice({\r\n\tname: 'billing',\r\n\tinitialState: {\r\n\t\tpageable: {\r\n\t\t\t...blankPageable\r\n\t\t},\r\n\t\tselectedItem: {\r\n\t\t\t...blankSelectedItem\r\n\t\t},\r\n\t\tconfirmPayables: {\r\n\t\t\t...blankConfirmPayables\r\n\t\t}\r\n\t},\r\n\treducers: {\r\n\t\tresetSelectedItem: (state, action) => resetSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tsetSelectedItem: (state, action) => setSelectedItemCommon(state, action, blankSelectedItem),\r\n\t\tupdateSelectedItem: (state, action) => updateSelectedItemCommon(state, action),\r\n\t\tsetPageable: (state, action) => setPageableCommon(state, action),\r\n\t\tupdatePageable: (state, action) => updatePageableCommon(state, action),\r\n\t\tsetPageableEntity: (state, action) => setPageableEntityCommon(state, action, blankPageable),\r\n\t\tsetOptionsList: (state, action) => setOptionsListCommon(state, action),\r\n\r\n\t\tsetConfirmPayables: (state, action) => {\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] action.payload==>`, action.payload)\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] 1 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t\tstate.confirmPayables = {\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\t\tconsole.log(`[BillingSlice.setConfirmPayables] 2 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t},\r\n\t\tupdateConfirmPayables: (state, action) => {\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] action.payload==>`, action.payload)\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] 1 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t\tstate.confirmPayables = {\r\n\t\t\t\t...state.confirmPayables,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\t\tconsole.log(`[BillingSlice.updateConfirmPayables] 2 state.confirmPayables==>`, state.confirmPayables)\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const { setSelectedItem, updateSelectedItem, setPageable, updatePageable, setPageableEntity, setSearchValue, setOptionsList, resetSelectedItem, setConfirmPayables, updateConfirmPayables } = BillingSlice.actions\r\n\r\nexport const selectPageable = state => state.billing.pageable\r\nexport const selectSelectedItem = state => state.billing.selectedItem\r\nexport const selectSearchValue = state => state.billing.searchValue\r\nexport const selectConfirmPayables = state => state.billing.confirmPayables\r\n\r\n\r\nexport default BillingSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport SchoolReducer from './school/SchoolSlice';\r\nimport CodeGroupsReducer from './codeGroups/CodeGroupsSlice';\r\nimport UsersReducer from './endUser/UsersSlice';\r\nimport StudentReducer from './student/StudentSlice';\r\nimport GradeLevelReducer from './gradeLevelPayables/GradeLevelSlice';\r\nimport AccountPayablesSettingsReducer from './accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport BillingReducer from './billing/BillingSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        school: SchoolReducer,\r\n        codeGroups: CodeGroupsReducer,\r\n        users: UsersReducer,\r\n        students: StudentReducer,\r\n        gradeLevels: GradeLevelReducer,\r\n        accountPayablesSettings: AccountPayablesSettingsReducer,\r\n        billing: BillingReducer\r\n    },\r\n});","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"container\">Oooops!!!</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorComponent;","import { Box, Divider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FooterComponent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nfunction Copyright() {\r\n    return (\r\n        <>\r\n            <Box mx=\"auto\" pt={3}><Divider />\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    <Link color=\"inherit\" href=\"https://material-ui.com/\">Your Website</Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nexport default FooterComponent;","import { TablePagination } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst PaginationComponent = (props) => {\r\n return (\r\n  <TablePagination rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n   component=\"div\"\r\n   page={props.paging.currentPage}\r\n   count={props.paging.totalElements}\r\n   rowsPerPage={props.paging.rowsPerPage}\r\n   onChangePage={props.onChangePage}\r\n   onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n  />\r\n )\r\n}\r\nexport default PaginationComponent;","\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Table, TableHead, TableCell, TableBody, FormControl, Input, Grid, IconButton, TableContainer, Paper } from '@material-ui/core';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils'\r\nimport PaginationComponent from './PaginationComponent';\r\n\r\nexport default function CustomTableGrid(props) {\r\n const { showPaging = true, showSearch = true, showAction = true } = props;\r\n\r\n const { register } = useForm();\r\n const [counter, setCounter] = useState(0);\r\n\r\n const doHandleKeyDown = (e) => {\r\n  if (e.key === 'Enter') {\r\n   props.doSearch(e.target.value)\r\n   e.preventDefault();\r\n  }\r\n  setCounter(counter + 1)\r\n }\r\n\r\n return (\r\n  <>\r\n   <Grid container spacing={3}>\r\n    {\r\n     showSearch &&\r\n     <Grid item xs={12} sm={8}>\r\n      <FormControl variant=\"filled\">\r\n       <Input name=\"searchValue\"\r\n        defaultValue={props.store.searchValue}\r\n        onKeyDown={e => doHandleKeyDown(e)}\r\n        placeholder=\"Search\"\r\n        inputRef={register}\r\n        endAdornment={<SearchIcon onClick={() => props.doRetrieve()} />}\r\n       />\r\n       {props.children}\r\n      </FormControl>\r\n     </Grid>\r\n    }\r\n\r\n    {\r\n     showPaging &&\r\n     <Grid item xs={12} sm={4}>\r\n      <PaginationComponent\r\n       paging={props.store.paging}\r\n       onChangePage={props.onChangePage}\r\n       onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n      />\r\n     </Grid>\r\n    }\r\n\r\n   </Grid>\r\n\r\n   <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n    <Table>\r\n     <TableHead>\r\n      <StyledTableHeadRow>\r\n       {props.cols.map(params => (\r\n        <>\r\n         <StyledTableHeadCell key={params.field}>{params.headerName}</StyledTableHeadCell>\r\n        </>\r\n       ))}\r\n       {showAction && <StyledTableHeadCell align=\"right\">\r\n        Action\r\n        <IconButton aria-label=\"add\" onClick={() => props.doNew()}>\r\n         <AddIcon fontSize=\"large\" />\r\n        </IconButton>\r\n       </StyledTableHeadCell>}\r\n\r\n      </StyledTableHeadRow>\r\n     </TableHead>\r\n     <TableBody>\r\n      {props.store.list.map(row => (\r\n       <StyledTableRow key={row.id}>\r\n        {props.cols.map(params => (\r\n         <TableCell>{params.render ? params.render(row) : row[params.field]}</TableCell>\r\n        ))}\r\n        {showAction && <TableCell align=\"right\">\r\n         <IconButton aria-label=\"edit\" onClick={() => props.doEdit(row)}>\r\n          <EditIcon fontSize=\"large\" />\r\n         </IconButton>\r\n         <IconButton aria-label=\"delete\" onClick={() => props.doDelete(row.id)}>\r\n          <DeleteIcon fontSize=\"large\" />\r\n         </IconButton>\r\n        </TableCell>}\r\n\r\n       </StyledTableRow>\r\n      ))}\r\n     </TableBody>\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   {props.showPaging && <PaginationComponent\r\n    paging={props.store.paging}\r\n    doHandleChangePage={props.doHandleChangePage}\r\n    doHandleChangeRowsPerPage={props.doHandleChangeRowsPerPage}\r\n   />}\r\n\r\n  </ >\r\n );\r\n}","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"user\";\r\n\r\nconst sort = \"lastName, firstName\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => {\r\n console.log(`[EndUserService.save] data=`, data)\r\n return axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n}\r\n\r\n\r\nconst EndUserService = () => {\r\n const test = () => {\r\n\r\n }\r\n return [test]\r\n}\r\n\r\nexport default EndUserService\r\n\r\n\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst TitleComponent = (props) => {\r\n return (\r\n  <Box pb={1}>\r\n   <Typography variant=\"h4\">\r\n    {props.children}\r\n   </Typography>\r\n  </Box>\r\n )\r\n}\r\n\r\nexport default TitleComponent","\r\nimport { useGlobalVariable } from '../providers/GlobalVariableProvider'\r\n\r\nexport const useMessageAlert = () => {\r\n\r\n    const [globalProps, setGlobalProps, setAlertProps, setUIProps, alertProp] = useGlobalVariable();\r\n\r\n    // const alert = (action = {}) => {\r\n    //     if (action.type === 'close') {\r\n    //         closeMsgAlert()\r\n    //     } else if (action.type === 'form-error') {\r\n    //         showErrorMsgAlert(action.payload.error, action.payload.errorCode, action.payload.formMethod, action.payload.serviceName)\r\n    //     } else if (action.type === 'error') {\r\n    //         showErrorAlert(action.payload.message)\r\n    //     } else if (action.type === 'info') {\r\n    //         showInfoAlert(action.payload.message)\r\n    //     } else if (action.type === 'warning') {\r\n    //         showWarningAlert(action.payload.message)\r\n    //     } else if (action.type === 'success') {\r\n    //         showSuccessAlert(action.payload.message)\r\n    //     }\r\n\r\n    //     return alertProp\r\n    // }\r\n\r\n    const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = getFormatedErrorMessage(error, errorCode, formMethod, serviceName)\r\n        showMsgAlert('Error', errMsg, 'error')\r\n    }\r\n\r\n    const showErrorAlert = (msg) => {\r\n        showMsgAlert('Error', msg, 'error')\r\n    }\r\n\r\n    const showInfoAlert = (msg) => {\r\n        showMsgAlert('Information', msg, 'info')\r\n    }\r\n\r\n    const showWarningAlert = (msg) => {\r\n        showMsgAlert('Warning', msg, 'warning')\r\n    }\r\n\r\n    const showSuccessAlert = (msg) => {\r\n        showMsgAlert('Alert', msg, 'success')\r\n    }\r\n\r\n    const showMsgAlert = (title, msg, severity) => {\r\n        setAlertProps({\r\n            title: title,\r\n            open: true,\r\n            severity: severity,\r\n            msg: msg\r\n        })\r\n    }\r\n    const closeMsgAlert = () => {\r\n        console.log(`[useMessageAlert.closeMsgAlert] 1 globalProps=>`, globalProps)\r\n        setAlertProps({\r\n            open: false\r\n        })\r\n\r\n        console.log(`[useMessageAlert.closeMsgAlert] 2 globalProps=>`, globalProps)\r\n    }\r\n\r\n    const getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        console.error(`[useMessageAlert.getFormatedErrorMessage] error=>`, JSON.stringify(error));\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.error(`[${formMethod}] ${serviceName} error `, JSON.stringify(error));\r\n\r\n        if (error.message) {\r\n            console.error(`[useMessageAlert.getFormatedErrorMessage] error.message=>`, JSON.stringify(error.message));\r\n            errMsg = error.message\r\n        }\r\n\r\n        if (error.response) {\r\n            console.error(`[useMessageAlert.getFormatedErrorMessage] error.response=>`, JSON.stringify(error.response));\r\n            // Request made and server responded\r\n            console.log('error.response.data', error.response.data);\r\n            console.log('error.response.status', error.response.status);\r\n            console.log('error.response.headers', error.response.headers);\r\n            if (error.response.data.error && error.response.data.status) {\r\n                errMsg = `[${error.response.data.status}: ${error.response.data.error}] - ${error.response.data.message}`\r\n            } else {\r\n                errMsg = `${error.response.data}`\r\n            }\r\n        }\r\n\r\n        console.error(`[${formMethod}] ${serviceName} error msg: ${errMsg}`);\r\n        return errMsg;\r\n    }\r\n\r\n    return (action = {}) => {\r\n        if (action.type === 'close') {\r\n            closeMsgAlert()\r\n        } else if (action.type === 'form-error') {\r\n            showErrorMsgAlert(action.payload.error, action.payload.errorCode, action.payload.formMethod, action.payload.serviceName)\r\n        } else if (action.type === 'error') {\r\n            showErrorAlert(action.payload)\r\n        } else if (action.type === 'info') {\r\n            showInfoAlert(action.payload)\r\n        } else if (action.type === 'warning') {\r\n            showWarningAlert(action.payload)\r\n        } else if (action.type === 'success') {\r\n            showSuccessAlert(action.payload)\r\n        }\r\n\r\n        return alertProp\r\n    }\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { OPTIONS } from '../../api/Utils';\r\n\r\nexport default function ConfirmMsgDialog(props) {\r\n    const setReturnValue = (value) => {\r\n        props.closeDialog();\r\n        props.setDialogSelection(value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth=\"md\"\r\n                open={props.open}\r\n                onClose={props.closeDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <Alert severity=\"info\" align=\"right\">\r\n                        <Typography variant=\"h6\">\r\n                            {props.title}\r\n                        </Typography>\r\n                    </Alert>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {props.msg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={() => setReturnValue(OPTIONS.YES)}>YES</Button>\r\n                    <Button onClick={() => setReturnValue(OPTIONS.NO)}>NO</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nimport { PAGE_URL, INIT_STATUS, ERROR_CODE, OPTIONS } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/endUser/EndUserService';\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/endUser/UsersSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function EndUserListComponent(props) {\r\n\r\n  const alert = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.getList'))\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.USER_DETAIL_URL}/-1`);\r\n  }\r\n\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'EndUserListComponent.retrieve', 'EndUserService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'firstName',\r\n      headerName: 'First Name',\r\n    },\r\n    {\r\n      field: 'lastName',\r\n      headerName: 'Last Name',\r\n      render: function (row) {\r\n        return row.firstName + ' ' + row.lastName;\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Users</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { Box, Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst EndUserDetailHtml = props => {\r\n      const { control, register, handleSubmit } = useForm();\r\n      const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n      const history = useHistory();\r\n\r\n      useEffect(() => {\r\n            if (status === INIT_STATUS.LOAD) {\r\n                  props.doRetrieve(props.store.entityId);\r\n                  setStatus(INIT_STATUS.RESET)\r\n            }\r\n      }, [props.store])\r\n\r\n      return (\r\n            <>\r\n                  {console.log(`[EndUserDetailHtml.return] props.store==>`, props.store)}\r\n                  <TitleComponent>User Detail</TitleComponent>\r\n                  {props.message && <Alert severity=\"info\">{props.message}</Alert>}\r\n                  <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                        <TextField type=\"hidden\"\r\n                              name=\"id\"\r\n                              inputRef={register}\r\n                              defaultValue={props.store.id}\r\n                        />\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"userName\"\r\n                                          name=\"userName\"\r\n                                          label=\"User Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-userName\"\r\n                                          variant=\"filled\"\r\n                                          autoFocus\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.userName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                          id=\"password\"\r\n                                          type=\"password\"\r\n                                          name=\"password\"\r\n                                          label=\"Password\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-password\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.password}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"firstName\"\r\n                                          name=\"firstName\"\r\n                                          label=\"First Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-firstName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.firstName}\r\n                                    />\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={612}>\r\n                                    <TextField\r\n                                          required\r\n                                          id=\"lastName\"\r\n                                          name=\"lastName\"\r\n                                          label=\"Last Name\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-lastName\"\r\n                                          variant=\"filled\"\r\n                                          InputLabelProps={{ shrink: true }}\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.lastName}\r\n                                    />\r\n                              </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                              <Box pt={3}>\r\n                                    {/* <TextField id=\"school\"\r\n                                          select\r\n                                          required\r\n                                          name=\"school.id\"\r\n                                          label=\"School\"\r\n                                          fullWidth\r\n                                          autoComplete=\"user-school\"\r\n                                          variant=\"filled\"\r\n                                          inputRef={register}\r\n                                          defaultValue={props.store.school.id}\r\n                                          error={!!errors.name}\r\n                                    >\r\n                                          {props.store.optionsList.schoolList.map(row => (\r\n                                                <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                          ))}\r\n                                    </TextField> */}\r\n                                    <Controller\r\n                                          as={\r\n                                                <TextField id=\"school\"\r\n                                                      required\r\n                                                      select\r\n                                                      label=\"School\"\r\n                                                      fullWidth\r\n                                                      autoComplete=\"student-school\"\r\n                                                      variant=\"filled\"\r\n                                                      InputLabelProps={{ shrink: true }}\r\n                                                      inputRef={register}\r\n                                                // error={!!errors.name}\r\n                                                >\r\n                                                      {props.store.optionsList.schoolList.map(row => (\r\n                                                            <MenuItem key={row.id} value={row.id}>{row.name}</MenuItem>\r\n                                                      ))}\r\n                                                </TextField>\r\n                                          }\r\n                                          name=\"school.id\"\r\n                                          control={control}\r\n                                          defaultValue={props.store.school.id}\r\n                                          options={props.store.optionsList.studentLevelList}\r\n                                    />\r\n                              </Box>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3}>\r\n                              <Grid item xs={12} sm={9}>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" href={PAGE_URL.USER_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={1}>\r\n                                    <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.USER_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n                              </Grid>\r\n                        </Grid>\r\n\r\n                  </form>\r\n            </ >\r\n      );\r\n};\r\n\r\nexport default EndUserDetailHtml;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getOptions, save } from '../../api/endUser/EndUserService';\r\nimport EndUserDetailHtml from './EndUserDetailHtml';\r\nimport { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport { resetSelectedItem, selectSelectedItem, setOptionsList, setPageableEntity } from '../../api/endUser/UsersSlice';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function EndUserDetailComponent(props) {\r\n  const alert = useMessageAlert();\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n\r\n    setMessage(`Loading. Please wait...`);\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage(``);\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'EndUserDetailComponent.doRetrieve', 'EndUserService.getOptions'))\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage(``);\r\n        props.history.push(PAGE_URL.USER_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'EndUserDetailComponent.onSubmitForm', 'EndUserService.save'))\r\n  }\r\n\r\n\r\n  return (\r\n    <EndUserDetailHtml store={selectedItem}\r\n      doRetrieve={doRetrieve}\r\n      onSubmitForm={onSubmitForm}\r\n      message={message} />\r\n\r\n  );\r\n}\r\n\r\n\r\n","import axios from \"axios\"\r\nimport { AUTH_URL_BASE, AUTH_USER, AUTH_USER_OBJ, JWT_TOKEN, USER_TEMP } from \"../api/Utils\"\r\n\r\nimport { useAuth } from '../providers/AuthenticationProvider';\r\n\r\nlet myInterceptor\r\n\r\nexport const useAuthServices = () => {\r\n const [userObj, setUserObj] = useAuth();\r\n\r\n const initialize = () => {\r\n  if (isUserLoggedIn()) {\r\n   let jwtTokenHeader = getJwtTokenHeader()\r\n   setupAxiosInterceptors(jwtTokenHeader);\r\n  }\r\n }\r\n\r\n const executeJwtAuthenticationService = (username, password) => {\r\n  console.log('[useAuthServices.executeJwtAuthenticationService]');\r\n\r\n  return axios.post(`${AUTH_URL_BASE}`, { username, password })\r\n }\r\n\r\n const registerJwtSucessfulLogin = (userObj, jwtToken) => {\r\n  console.log('[useAuthServices.registerJwtSucessfulLogin] jwtToken=', jwtToken);\r\n  console.log('[useAuthServices.registerJwtSucessfulLogin] userObj=', userObj);\r\n  sessionStorage.setItem(AUTH_USER_OBJ, JSON.stringify(userObj));\r\n  sessionStorage.setItem(AUTH_USER, userObj.userName);\r\n  sessionStorage.setItem(JWT_TOKEN, jwtToken);\r\n\r\n\r\n  let jwtTokenHeader = getJwtTokenHeader()\r\n  setupAxiosInterceptors(jwtTokenHeader);\r\n }\r\n\r\n const getJwtTokenHeader = () => {\r\n  let jwtToken = getJwtToken();\r\n  let jwtTokenHeader = `Bearer ${jwtToken}`;\r\n  return jwtTokenHeader;\r\n }\r\n\r\n const getJwtToken = () => sessionStorage.getItem(JWT_TOKEN)\r\n\r\n const setupAxiosInterceptors = (authHeader) => {\r\n  console.log('[useAuthServices.setupAxiosInterceptors] init..');\r\n  console.log(`[useAuthServices.setupAxiosInterceptors] authHeader: ${authHeader}`);\r\n  myInterceptor = axios.interceptors.request.use(\r\n   async config => {\r\n    if (isUserLoggedIn()) {\r\n     config.headers.authorization = authHeader;\r\n    }\r\n    return config;\r\n   }\r\n  );\r\n  console.log('[useAuthServices.setupAxiosInterceptors] done!');\r\n }\r\n\r\n const isUserLoggedIn = () => {\r\n  let user = getSessionStorageLoginUser()\r\n  return (user != null);\r\n }\r\n\r\n const getSessionStorageLoginUser = () => sessionStorage.getItem(AUTH_USER)\r\n\r\n const getLoggedUserObj = () => {\r\n  let user = JSON.parse(sessionStorage.getItem(AUTH_USER_OBJ));\r\n  console.error('[useAuthServices.getLoggedUserObj] 1 user=>', user);\r\n  if (!user) {\r\n   user = USER_TEMP;\r\n  }\r\n  console.error('[useAuthServices.getLoggedUserObj] 2 user=>', user);\r\n  return user;\r\n  // return {}\r\n }\r\n\r\n const logout = () => {\r\n  axios.interceptors.request.eject(myInterceptor);\r\n  sessionStorage.removeItem(AUTH_USER);\r\n  sessionStorage.removeItem(AUTH_USER_OBJ);\r\n  sessionStorage.removeItem(JWT_TOKEN);\r\n\r\n  setUserObj(USER_TEMP)\r\n  console.log('[useAuthServices.logout]  userObj=>', userObj);\r\n }\r\n\r\n return [\r\n  initialize,\r\n  executeJwtAuthenticationService,\r\n  registerJwtSucessfulLogin,\r\n  getLoggedUserObj,\r\n  isUserLoggedIn,\r\n  logout\r\n ]\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuthServices } from './useAuthServices'\r\n\r\nconst AuthenticatedRoute = (props) => {\r\n    const [,\r\n        ,\r\n        ,\r\n        ,\r\n        isUserLoggedIn,\r\n\r\n    ] = useAuthServices()\r\n\r\n    const isLoggedin = isUserLoggedIn()\r\n    console.log(`[AuthenticatedRoute] isLoggedin=>`, isLoggedin)\r\n    if (isUserLoggedIn()) {\r\n        return <Route {...props} />;\r\n    } else {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        backgroundColor:\r\n            theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    login_paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    login_avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    login_form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login_submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n    avatar_40: {\r\n        width: theme.spacing(40),\r\n        height: theme.spacing(40),\r\n    },\r\n    avatar_70: {\r\n        width: theme.spacing(70),\r\n        height: theme.spacing(70),\r\n    }\r\n}));\r\n\r\nclass CSS {\r\n\r\n}\r\n\r\nexport default new CSS();","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useStyles } from '../forms/common/CSS'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst SignInHtml = props => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  function onSubmitForm(formData) {\r\n    props.onSignon(formData.userName, formData.password);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.login_paper}>\r\n        <Avatar className={classes.login_avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {props.message && <Alert severity=\"error\">{props.message}</Alert>}\r\n        <form className={classes.login_form} onSubmit={handleSubmit(onSubmitForm)}>\r\n\r\n          <TextField type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userName\"\r\n            label=\"User Name\"\r\n            name=\"userName\"\r\n            autoComplete=\"userName\"\r\n            autoFocus\r\n            inputRef={register}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignInHtml;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport SignInHtml from './SignInHtml.js';\r\nimport { useMessageAlert } from \"../api/useMessageAlert\"\r\nimport { useAuth } from '../providers/AuthenticationProvider';\r\nimport { useAuthServices } from './useAuthServices'\r\nimport { ERROR_CODE } from '../api/Utils.js';\r\n\r\nexport default function SignInComponent() {\r\n\r\n  const alert = useMessageAlert();\r\n\r\n  const [,\r\n    executeJwtAuthenticationService,\r\n    registerJwtSucessfulLogin,\r\n    ,\r\n    ,\r\n  ] = useAuthServices()\r\n\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [userObj, setUserObj] = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n  // const setError = (error, errorCode, formMethod, serviceName) => {\r\n  //   console.error(`[SignInComponent.setError]  error=`, error)\r\n  //   showErrorMsgAlert(error, errorCode, formMethod, serviceName)\r\n  // }\r\n\r\n  const onSignon = (userName, password) => {\r\n    console.error(`[SignInComponent.onSignon] userName=${userName}`)\r\n    setMessage('');\r\n\r\n    executeJwtAuthenticationService(userName, password)\r\n      .then(response => {\r\n        const userDetails = {\r\n          ...response.data.userDetails,\r\n          isLoggedIn: true\r\n        }\r\n        registerJwtSucessfulLogin(userDetails, response.data.token)\r\n        setUserObj(userDetails)\r\n\r\n        console.error(`[SignInComponent.onSignon useAuthServices.xecuteJwtAuthenticationService] userDetails=`, userDetails)\r\n        console.error(`[SignInComponent.onSignon useAuthServices.xecuteJwtAuthenticationService] userObj=`, userObj)\r\n\r\n        setMessage('Login Successful!');\r\n        history.push(`/`);\r\n      })\r\n      // .catch(error => showErrorMsgAlert(error, ERROR_CODE.LOGIN_ERROR, 'SignInComponent.onSignon', 'useAuthServices.executeJwtAuthenticationService'))\r\n      .catch(error => alert({\r\n        type: 'form-error',\r\n        payload: {\r\n          error: error,\r\n          errorCode: ERROR_CODE.LOGIN_ERROR,\r\n          formMethod: 'SignInComponent.onSignon',\r\n          serviceName: 'useAuthServices.executeJwtAuthenticationService'\r\n        }\r\n      }))\r\n  }\r\n  return (\r\n    <SignInHtml message={message} onSignon={onSignon} />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useAuthServices } from './useAuthServices'\r\nimport { useAuth } from '../providers/AuthenticationProvider';\r\n\r\nexport default function LogoutComponent() {\r\n    const [userObj] = useAuth();\r\n    const [,\r\n        ,\r\n        ,\r\n        ,\r\n        ,\r\n        logout] = useAuthServices()\r\n\r\n    useEffect(() => {\r\n        console.log('[LogoutComponent.useEffect]: userObj', userObj);\r\n        logout();\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <h1>You are logged out</h1>\r\n            <div className=\"container\">\r\n                Thank you. Come again!\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"codeGroups\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function CodeGroupsService() {\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList } from '../../api/codeGroups/CodeGroupsService';\r\nimport { selectPageable, resetSelectedItem, setPageable, setSelectedItem } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function CodeGroupsListComponent(props) {\r\n  const alert = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => {\r\n      dispatch(setPageable({\r\n        INIT_STATUS: INIT_STATUS.LOAD,\r\n        list: data.pagingList.content,\r\n        searchValue: searchValue,\r\n        paging: {\r\n          rowsPerPage: data.pagingList.size,\r\n          currentPage: data.pagingList.pageable.pageNumber,\r\n          totalElements: data.pagingList.totalElements,\r\n          totalPage: data.pagingList.totalPage\r\n        }\r\n      }))\r\n    }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'CodeGroupsListComponent.retrieve', 'CodeGroupsService.getList'))\r\n\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => props.history.push(`${PAGE_URL.CODE_GROUPS_DETAIL_URL}/-1`)\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.DELETE_ERROR, 'CodeGroupsListComponent.doDelete', 'CodeGroupsService.deleteItem'))\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'code',\r\n      headerName: 'Code',\r\n    },\r\n    {\r\n      field: 'value',\r\n      headerName: 'Value',\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Code Groups List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nimport { selectSelectedItem, resetSelectedItem, setPageableEntity } from '../../api/codeGroups/CodeGroupsSlice';\r\nimport { save } from '../../api/codeGroups/CodeGroupsService';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function CodeGroupsDetailComponent(props) {\r\n  const alert = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem, status]);\r\n\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSave = data => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.CODE_GROUPS_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[CodeGroupsDetailComponent.render] selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Code Groups Detail</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id=\"code\"\r\n              name=\"code\"\r\n              label=\"Code\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-code\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.code}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={5}>\r\n            <TextField\r\n              required\r\n              id=\"value\"\r\n              name=\"value\"\r\n              label=\"Value\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-value\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.value}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"priority\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-priority\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              autoComplete=\"code-groups-description\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n            <Grid item xs={12} sm={12}>&nbsp;</Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                multiline\r\n                rows={4}\r\n                id=\"json\"\r\n                name=\"json\"\r\n                label=\"JSON\"\r\n                fullWidth\r\n                autoComplete=\"code-groups-json\"\r\n                variant=\"filled\"\r\n                InputLabelProps={{ shrink: true }}\r\n                inputRef={register}\r\n                defaultValue={selectedItem.json}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.CODE_GROUPS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Chart extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\r\n\r\n  render() {\r\n    return (\r\n      <LineChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\nexport default class StackedBarChart extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/90v76x08/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 20, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n    <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n {\r\n  name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n },\r\n {\r\n  name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n },\r\n {\r\n  name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n },\r\n {\r\n  name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n },\r\n {\r\n  name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n },\r\n {\r\n  name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n },\r\n {\r\n  name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n },\r\n];\r\n\r\n\r\nconst getIntroOfPage = (label) => {\r\n if (label === 'Page A') {\r\n  return \"Page A is about men's clothing\";\r\n } if (label === 'Page B') {\r\n  return \"Page B is about women's dress\";\r\n } if (label === 'Page C') {\r\n  return \"Page C is about women's bag\";\r\n } if (label === 'Page D') {\r\n  return 'Page D is about household goods';\r\n } if (label === 'Page E') {\r\n  return 'Page E is about food';\r\n } if (label === 'Page F') {\r\n  return 'Page F is about baby food';\r\n }\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n if (active) {\r\n  return (\r\n   <div className=\"custom-tooltip\">\r\n    <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n    <p className=\"intro\">{getIntroOfPage(label)}</p>\r\n    <p className=\"desc\">Anything you want can be displayed here.</p>\r\n   </div>\r\n  );\r\n }\r\n\r\n return null;\r\n};\r\n\r\nexport default class CustomContentOfTooltip extends PureComponent {\r\n static jsfiddleUrl = 'https://jsfiddle.net/alidingling/vxq4ep63/';\r\n\r\n render() {\r\n  return (\r\n   <BarChart\r\n    width={500}\r\n    height={300}\r\n    data={data}\r\n    margin={{\r\n     top: 5, right: 30, left: 20, bottom: 5,\r\n    }}\r\n   >\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip content={<CustomTooltip />} />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" barSize={20} fill=\"#8884d8\" />\r\n   </BarChart>\r\n  );\r\n }\r\n}\r\n","import React from 'react';\r\nimport faker from 'faker'\r\nimport { URL_BASE } from '../../api/Utils'\r\nimport { useStyles } from '../common/CSS'\r\n\r\nimport { Avatar, Box, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport Chart from './Chart';\r\nimport StackedBarChart from './StackedBarChart';\r\nimport CustomContentOfTooltip from './CustomContentOfTooltip';\r\n\r\nimport { useAuthServices } from '../../security/useAuthServices'\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  console.log(`[Dashboard] process.env.NODE_ENV= ${process.env.NODE_ENV}`)\r\n  console.log(`[Dashboard] URL_BASE= ${URL_BASE}`)\r\n\r\n  const [,\r\n    ,\r\n    ,\r\n    ,\r\n    isUserLoggedIn,\r\n\r\n  ] = useAuthServices()\r\n  const isLogin = isUserLoggedIn()\r\n\r\n  console.log(`[Dashboard] isLogin=${isLogin}`)\r\n  return (\r\n    <> {\r\n      !isLogin &&\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.fashion(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.people(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Avatar src={faker.image.food(140, 140)} className={classes.avatar_40} />\r\n          <h2>{faker.commerce.productName()}</h2>\r\n          <p>{faker.random.words(30)}</p>\r\n          <p><Button variant=\"contained\" color=\"primary\" href=\"#\">View details</Button></p>\r\n        </Grid>\r\n      </Grid>\r\n    }\r\n\r\n      {\r\n        isLogin &&\r\n        <>\r\n          <Box component={Paper} elevation={3} variant=\"elevation\" px={3} py={3} m=\"auto\">\r\n            <Typography variant=\"h4\">Chart samples click <a href=\"https://recharts.org/en-US/examples\">here</a></Typography>\r\n            <Grid container spacing={5}>\r\n              <Grid item xs={12} sm={4}>\r\n                <Chart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <StackedBarChart />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <CustomContentOfTooltip />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </>\r\n      }\r\n    </ >\r\n  )\r\n}","import React from 'react';\r\n// import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PAGE_URL } from '../../api/Utils'\r\nimport { Divider } from '@material-ui/core';\r\n\r\nimport { useAuthServices } from '../../security/useAuthServices'\r\n\r\nexport default function MenuListItems() {\r\n  const [,\r\n    ,\r\n    ,\r\n    ,\r\n    isUserLoggedIn,\r\n    \r\n  ] = useAuthServices()\r\n  const isLoggedIn = isUserLoggedIn();\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    // subheader={\r\n    //  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n    //   Menu\r\n    //  </ListSubheader>\r\n    // }\r\n    >\r\n      {\r\n        isLoggedIn && <>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AccountBalanceWalletIcon onClick={() => history.push(PAGE_URL.BILLING)} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Billing\" onClick={() => history.push(PAGE_URL.BILLING)} />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Payables Settings\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)}>\r\n            <ListItemIcon>\r\n              <AssignmentIndIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Level Payables\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(PAGE_URL.STUDENT_LIST)}>\r\n            <ListItemIcon>\r\n              <LocalLibraryIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Student\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.SCHOOL_LIST)} >\r\n            <ListItemIcon>\r\n              <SchoolIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"School\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.USER_LIST)} >\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={() => history.push(PAGE_URL.CODE_GROUPS_LIST)}>\r\n            <ListItemIcon>\r\n              <CodeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Code Groups\" />\r\n          </ListItem>\r\n\r\n        </>\r\n      }\r\n\r\n      {isLoggedIn &&\r\n        <>\r\n          <Divider />\r\n          <ListItem button onClick={() => history.push(PAGE_URL.LOGOUT)} >\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </>\r\n      }\r\n\r\n      {!isLoggedIn &&\r\n        <ListItem button onClick={() => history.push(PAGE_URL.LOGIN)} >\r\n          <ListItemIcon>\r\n            <VpnKeyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Login\" />\r\n        </ListItem>}\r\n\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuListItems from './MenuListItems';\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStylesDrawer = makeStyles((theme) => ({\r\n drawer: {\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: 'nowrap',\r\n },\r\n drawerOpen: {\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n },\r\n drawerClose: {\r\n  transition: theme.transitions.create('width', {\r\n   easing: theme.transitions.easing.sharp,\r\n   duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: theme.spacing(7) + 1,\r\n  [theme.breakpoints.up('sm')]: {\r\n   width: theme.spacing(9) + 1,\r\n  },\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n const classes = useStylesDrawer();\r\n const theme = useTheme();\r\n\r\n return (\r\n  <Drawer\r\n   variant=\"permanent\"\r\n   className={clsx(classes.drawer, {\r\n    [classes.drawerOpen]: props.drawerOpen,\r\n    [classes.drawerClose]: !props.drawerOpen,\r\n   })}\r\n   classes={{\r\n    paper: clsx({\r\n     [classes.drawerOpen]: props.drawerOpen,\r\n     [classes.drawerClose]: !props.drawerOpen,\r\n    }),\r\n   }}\r\n  >\r\n   <div className={classes.toolbar}>\r\n    <IconButton onClick={props.doHandleDrawerClose}>\r\n     {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n    </IconButton>\r\n   </div>\r\n   <Divider />\r\n   <MenuListItems />\r\n  </Drawer>\r\n );\r\n}\r\n","\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { AppBar, IconButton, Toolbar, Typography, Avatar, Box, FormControlLabel, Switch, makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nimport { PAGE_URL, URL_BASE } from '../../api/Utils'\r\nimport { useAuth } from '../../providers/AuthenticationProvider';\r\nimport MiniDrawer from './MiniDrawer';\r\n\r\nexport default function AppBarComponent(props) {\r\n const [userObj] = useAuth();\r\n\r\n const drawerWidth = 240;\r\n const useStylesAppBar = makeStyles((theme) => ({\r\n  root: {\r\n   display: 'flex',\r\n  },\r\n  appBar: {\r\n   zIndex: theme.zIndex.drawer + 1,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n   }),\r\n  },\r\n  appBarShift: {\r\n   marginLeft: drawerWidth,\r\n   width: `calc(100% - ${drawerWidth}px)`,\r\n   transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n   }),\r\n  },\r\n  menuButton: {\r\n   marginRight: 36,\r\n  },\r\n  hide: {\r\n   display: 'none',\r\n  },\r\n  title: {\r\n   flexGrow: 1,\r\n   display: 'none',\r\n   [theme.breakpoints.up('sm')]: {\r\n    display: 'block',\r\n    paddingLeft: theme.spacing(1)\r\n   },\r\n   //backgroundColor: fade(theme.palette.common.white, 0.25),\r\n  },\r\n }));\r\n // const [userObj, setUserObj] = useState({\r\n //  userName: '',\r\n //  userFullName: 'Guest',\r\n //  schoolName: '',\r\n //  schoolLogo: ''\r\n // });\r\n\r\n const classes = useStylesAppBar();\r\n // const userName = AuthenticationService.getLoginUserName();\r\n // const isLogin = AuthenticationService.isUserLoggedIn();\r\n\r\n // printme(userObj);\r\n\r\n const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n const doHandleDrawerOpen = () => {\r\n  setDrawerOpen(true);\r\n  console.log(`[AppBarComponent.doHandleDrawerOpen] drawerOpen=>${drawerOpen}`)\r\n }\r\n const doHandleDrawerClose = () => {\r\n  setDrawerOpen(false);\r\n  console.log(`[AppBarComponent.doHandleDrawerClose] doHandleDrawerClose=>${drawerOpen}`)\r\n }\r\n return (\r\n  < div className={classes.root} >\r\n   {console.log('[AppBarComponent.return] userObj=>', userObj)}\r\n   <AppBar\r\n    position=\"fixed\"\r\n    className={clsx(classes.appBar, {\r\n     [classes.appBarShift]: drawerOpen,\r\n    })}>\r\n    <Toolbar>\r\n     <IconButton\r\n      color=\"inherit\"\r\n      aria-label=\"open drawer\"\r\n      onClick={doHandleDrawerOpen}\r\n      edge=\"start\"\r\n      className={clsx(classes.menuButton, {\r\n       [classes.hide]: drawerOpen,\r\n      })}\r\n     >\r\n      <MenuIcon />\r\n     </IconButton>\r\n\r\n     {userObj && userObj.schoolLogo && <Avatar src={(URL_BASE + PAGE_URL.LOGO_URL + userObj.schoolLogo)} />}\r\n     {(!userObj || !userObj.schoolLogo) && <SchoolIcon />}\r\n\r\n     <Typography className={classes.title} variant=\"h6\" noWrap>\r\n      <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n       {userObj && <b>{userObj.schoolName}</b>}\r\n      </Link>\r\n     </Typography>\r\n     {userObj && <div>Welcome <b>{userObj.userFullName}</b></div>}\r\n\r\n     <Box pl={5}>\r\n      <FormControlLabel control={<Switch checked={props.darkMode} onChange={props.toggleDarkMode} />} />\r\n     </Box>\r\n    </Toolbar>\r\n   </AppBar>\r\n   <MiniDrawer drawerOpen={drawerOpen} doHandleDrawerClose={doHandleDrawerClose} />\r\n  </div >\r\n );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Divider, FormControlLabel, FormLabel, Grid, MenuItem, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nconst StudentDetailHtml = props => {\r\n\r\n  const { control, register, handleSubmit, reset } = useForm();\r\n  const [status, setStatus] = useState(INIT_STATUS.LOAD);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setCounter(counter + 1);\r\n    console.log(`[StudentDetailHtml.useEffect] status=>${status}, counter=${counter}`);\r\n    if (status === INIT_STATUS.LOAD) {\r\n      props.onRetrieve();\r\n      setStatus(INIT_STATUS.RESET)\r\n    }\r\n    reset(props.store)\r\n  }, [props.store])\r\n\r\n  const BUTTONS = () => {\r\n    return (\r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.STUDENT_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.STUDENT_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <TitleComponent>Student Detail</TitleComponent>\r\n      {props.message && <Alert severity=\"info\">{props.message}</Alert>}\r\n\r\n\r\n      <form onSubmit={handleSubmit(props.onSubmitForm)}>\r\n\r\n        <BUTTONS />\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={props.store.id}\r\n        />\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"lrn\"\r\n              name=\"lrn\"\r\n              label=\"LRN\"\r\n              fullWidth\r\n              autoComplete=\"lrn\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lrn}\r\n            />\r\n          </Grid>\r\n          {/* <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"studentId\"\r\n              name=\"studentId\"\r\n              label=\"Student Id\"\r\n              fullWidth\r\n              autoComplete=\"studentId\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.studentId}\r\n            />\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.firstName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              autoComplete=\"family-name\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.lastName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"level\"\r\n                  required\r\n                  select\r\n                  name=\"level.id\"\r\n                  label=\"Grade Level\"\r\n                  fullWidth\r\n                  autoComplete=\"student level\"\r\n                  variant=\"filled\"\r\n                  inputRef={register}\r\n                >\r\n                  {props.store.optionsList.studentLevelList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"level.id\"\r\n              control={control}\r\n              defaultValue={props.store.level.id}\r\n              options={props.store.optionsList.studentLevelList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"birthDate\"\r\n              name=\"birthDate\"\r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              fullWidth\r\n              autoComplete=\"birth-date\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.birthDate}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              id=\"birthPlace\"\r\n              name=\"birthPlace\"\r\n              label=\"Birth Place\"\r\n              fullWidth\r\n              autoComplete=\"birth-place\"\r\n              InputLabelProps={{ shrink: true }}\r\n              variant=\"filled\"\r\n              inputRef={register}\r\n              defaultValue={props.store.birthPlace}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <FormLabel component=\"gender\"\r\n              variant=\"filled\">Gender</FormLabel>\r\n            <Controller\r\n              as={\r\n                <RadioGroup row\r\n                  label=\"Gender\"\r\n                  aria-label=\"gender\"\r\n                  variant=\"filled\">\r\n                  <FormControlLabel\r\n                    value=\"Male\"\r\n                    control={<Radio\r\n                      variant=\"filled\" />}\r\n                    label=\"Male\"\r\n                    labelPlacement=\"end\"\r\n                    defaultValue={props.store.gender}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                    labelPlacement=\"end\"\r\n                    variant=\"filled\" defaultValue={props.store.gender}\r\n                  />\r\n                </RadioGroup>\r\n              }\r\n              name=\"gender\"\r\n              fullWidth\r\n              defaultValue={props.store.gender}\r\n              inputRef={register}\r\n              variant=\"filled\"\r\n              control={control}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={5}>\r\n            <TextField\r\n              required\r\n              id=\"contactNo\"\r\n              name=\"contactNo\"\r\n              label=\"Contact No\"\r\n              fullWidth\r\n              autoComplete=\"contactNo\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.contactNo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" >Address:</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n\r\n            <TextField\r\n              id=\"address.address1\"\r\n              name=\"address1\"\r\n              label=\"Address line 1\"\r\n              fullWidth\r\n              autoComplete=\"shipping address1\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address1}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"address.address2\"\r\n              name=\"address2\"\r\n              label=\"Address line 2\"\r\n              fullWidth\r\n              autoComplete=\"shipping address2\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.address2}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.city\"\r\n              name=\"city\"\r\n              label=\"City\"\r\n              fullWidth\r\n              autoComplete=\"shipping address city\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.city}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"address.zip\"\r\n              name=\"zipCode\"\r\n              label=\"Zip / Postal code\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-code\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.zipCode}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField editable={false}\r\n              required\r\n              id=\"address.country\"\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              fullWidth\r\n              autoComplete=\"shipping postal-country\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.country}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}><Divider /></Grid>\r\n          <Grid item xs={12}><Typography variant=\"h6\" >Parent/Guardian:</Typography></Grid>\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"fathersName\"\r\n              name=\"fathersName\"\r\n              label=\"Father's Name\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"fathersOccupation\"\r\n              name=\"fathersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"fathersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.fathersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"mothersName\"\r\n              name=\"mothersName\"\r\n              label=\"Mother's Name\"\r\n              fullWidth\r\n              autoComplete=\"mothersName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"mothersOccupation\"\r\n              name=\"mothersOccupation\"\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              autoComplete=\"mothersOccupation\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.mothersOccupation}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"parentCivilStatus\"\r\n              name=\"parentCivilStatus\"\r\n              label=\"Parent CivilStatus\"\r\n              fullWidth\r\n              autoComplete=\"parentCivilStatus\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.parentCivilStatus}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} />\r\n\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"guardianName\"\r\n              name=\"guardianName\"\r\n              label=\"Guardian Name\"\r\n              fullWidth\r\n              autoComplete=\"guardianName\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={props.store.guardianName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <BUTTONS />\r\n\r\n      </form>\r\n    </ >\r\n  );\r\n\r\n}\r\n\r\nexport default StudentDetailHtml;","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\n\r\nconst ENTITY = \"student\";\r\nconst sort = \"code,priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlDetailsPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport  const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport  const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function StudentService  () {\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ERROR_CODE, PAGE_URL } from '../../api/Utils'\r\nimport StudentDetailHtml from './StudentDetailHtml.js';\r\nimport { save, getOptions } from '../../api/student/StudentService'\r\nimport { selectSelectedItem, setOptionsList, setPageableEntity, resetSelectedItem } from '../../api/student/StudentSlice';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function StudentDetailComponent(props) {\r\n  const alert = useMessageAlert();\r\n  const dispatch = useDispatch();\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log('[StudentDetailComponent.onSubmitForm] data==>', data)\r\n\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        props.history.push(PAGE_URL.STUDENT_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'StudentDetailComponent.onSubmitForm', 'StudentService.save'));\r\n  }\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[StudentDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    setMessage(`Loading. Please wait...`);\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage(``)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'StudentDetailComponent.onRetrieve', 'StudentService.getOptions'));\r\n  }\r\n\r\n  return (\r\n    <StudentDetailHtml\r\n      store={selectedItem}\r\n      message={message}\r\n      onSubmitForm={onSubmitForm}\r\n      onRetrieve={onRetrieve}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils';\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\n\r\nimport { deleteItem, getList } from '../../api/student/StudentService'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem } from '../../api/student/StudentSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function StudentListComponent(props) {\r\n  const alert = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [currPageable]);\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.retrieve', 'StudentService.getList'))\r\n\r\n\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.STUDENT_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[StudentListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'StudentListComponent.doDelete', 'StudentService.deleteItem'))\r\n  }\r\n\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  const cols = [\r\n    // {\r\n    //   field: 'studentId',\r\n    //   headerName: 'Student ID',\r\n    // },\r\n    {\r\n      field: 'lrn',\r\n      headerName: 'LRN',\r\n    },\r\n    {\r\n      headerName: 'Name',\r\n      render: function (row) {\r\n        return <>\r\n          {row.firstName} {row.lastName}\r\n        </>\r\n      }\r\n    },\r\n    {\r\n      field: 'gender',\r\n      headerName: 'Gender',\r\n    },\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return <>\r\n          {row.level && row.level.description}\r\n        </>\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Student List</TitleComponent>\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils from \"../Utils\";\r\n\r\nconst ENTITY = \"school\";\r\nconst sort = \"schoolYear,name\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\n\r\nexport default function SchoolService() {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core'\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils'\r\nimport TitleComponent from '../common/TitleComponent'\r\n\r\nimport { save, getOptions } from '../../api/school/SchoolService'\r\nimport {\r\n  selectSelectedItem,\r\n  setSelectedItem,\r\n  setPageableEntity,\r\n  updateSelectedItem,\r\n  blankSelectedItem,\r\n  setOptionsList,\r\n  resetSelectedItem,\r\n} from '../../api/school/SchoolSlice'\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function SchoolDetailComponent(props) {\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { control, register, handleSubmit } = useForm()\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...')\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT)\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const alert = useMessageAlert();\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      `[SchoolDetailComponent.useEffect] status=${status}, selectedItem==>`,\r\n      selectedItem\r\n    )\r\n\r\n    if (selectedItem.currentPeriod == null) {\r\n      dispatch(\r\n        updateSelectedItem({\r\n          currentPeriod: { id: '' },\r\n        })\r\n      )\r\n    }\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(setSelectedItem(blankSelectedItem))\r\n      }\r\n      doRetrieve()\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n  }, [selectedItem])\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const doRetrieve = () => {\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n\r\n    setMessage('Loading. Please wait...')\r\n\r\n    getOptions().then((response) => {\r\n      dispatch(setOptionsList(response.data.listService))\r\n      setMessage('')\r\n    })\r\n      .catch((error) =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.RETRIEVE_ERROR,\r\n          'SchoolDetailComponent.doRetrieve',\r\n          'SchoolService.getOptions'\r\n        )\r\n      )\r\n  }\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log(\r\n      `[SchoolDetailComponent.onSubmitForm] data = `, data\r\n    )\r\n    setMessage('Saving...')\r\n    console.log(\r\n      `[SchoolDetailComponent.onSubmitForm] message = `, message\r\n    )\r\n    save(data)\r\n      .then((response) => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.SCHOOL_LIST)\r\n      })\r\n      .catch((error) =>\r\n        showErrorMsgAlert(\r\n          error,\r\n          ERROR_CODE.SAVE_ERROR,\r\n          'SchoolDetailComponent.save',\r\n          'SchoolService.save'\r\n        )\r\n      )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(\r\n        `[SchoolDetailComponent.render] selectedItem ==> `,\r\n        selectedItem\r\n      )}\r\n      <TitleComponent>School Detail</TitleComponent>\r\n      {message && <Alert severity='info'>{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(onSubmitForm)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          type='hidden'\r\n          name='id'\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id='name'\r\n              name='name'\r\n              label='Name'\r\n              fullWidth\r\n              autoComplete='school-name'\r\n              autoFocus\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"currentPeriod\"\r\n                  required\r\n                  select\r\n                  label=\"Current Period\"\r\n                  fullWidth\r\n                  autoComplete=\"school-currentPeriod\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.periodList.map(({ id, description }) => (\r\n                    <MenuItem key={id} value={id}>{description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              name=\"currentPeriod.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.currentPeriod.id}\r\n              options={selectedItem.optionsList.periodList}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id='logo'\r\n              name='logo'\r\n              label='Logo'\r\n              fullWidth\r\n              autoComplete='school-logo'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.logo}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              required\r\n              id='address'\r\n              name='address'\r\n              label='Address'\r\n              fullWidth\r\n              autoComplete='school-address'\r\n              variant='filled'\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.address}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}></Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              href={PAGE_URL.SCHOOL_DETAIL_URL + '/-1'}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant='contained'\r\n              onClick={() => history.push(PAGE_URL.SCHOOL_LIST)}\r\n              startIcon={<CancelIcon />}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport { deleteItem, getList } from '../../api/school/SchoolService'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { resetSelectedItem, selectPageable, setPageable, setSelectedItem, } from '../../api/school/SchoolSlice'\r\nimport TitleComponent from '../common/TitleComponent'\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog'\r\n\r\nexport default function SchoolListComponent(props) {\r\n  const alert = useMessageAlert();\r\n  const dispatch = useDispatch()\r\n  const currPageableSchools = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, [])\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage).then(\r\n      ({ data }) =>\r\n        dispatch(\r\n          setPageable({\r\n            INIT_STATUS: INIT_STATUS.LOAD,\r\n            list: data.pagingList.content,\r\n            searchValue: searchValue,\r\n            paging: {\r\n              rowsPerPage: data.pagingList.size,\r\n              currentPage: data.pagingList.pageable.pageNumber,\r\n              totalElements: data.pagingList.totalElements,\r\n              totalPage: data.pagingList.totalPage,\r\n            },\r\n          })\r\n        )).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n\r\n\r\n  const doRetrieve = () =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: currPageableSchools.paging,\r\n    })\r\n\r\n  const doEdit = (selected) => {\r\n    dispatch(setSelectedItem(selected))\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}`)\r\n  }\r\n\r\n  const doNew = () => {\r\n    dispatch(resetSelectedItem())\r\n    props.history.push(`${PAGE_URL.SCHOOL_DETAIL_URL}/-1`)\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[SchoolListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) =>\r\n    deleteItem(id)\r\n      .then(doRetrieve())\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'SchoolListComponent.retrieve', 'SchoolService.getList'))\r\n\r\n  const doHandleChangePage = (e, newPage) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        currentPage: newPage,\r\n      },\r\n    })\r\n\r\n  const doHandleChangeRowsPerPage = (e) =>\r\n    retrieve({\r\n      searchValue: currPageableSchools.searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0,\r\n      },\r\n    })\r\n\r\n  const doSearch = (searchValue) =>\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageableSchools.paging,\r\n      },\r\n    })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n    },\r\n    {\r\n      headerName: 'Current Period',\r\n      render: function (row) {\r\n        return row.currentPeriod ? row.currentPeriod.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'logo',\r\n      headerName: 'Logo',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Schools</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageableSchools}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </>\r\n  )\r\n}\r\n","import { Box, Typography } from \"@material-ui/core\"\r\n\r\nconst SubTitleComponent = (props) => {\r\n return (\r\n  <>\r\n   <Box>\r\n    <Typography variant=\"h5\">{props.children}</Typography>\r\n   </Box>\r\n  </>\r\n )\r\n}\r\n\r\nexport default SubTitleComponent","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead } from '@material-ui/core';\r\n\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\n\r\nimport { PAGE_URL, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\nimport PaginationComponent from '../common/PaginationComponent';\r\nimport SubTitleComponent from '../common/SubTitleComponent';\r\n\r\nconst SearchResultsHtmlComponent = (props) => {\r\n const { list, paging } = props.store;\r\n const history = useHistory();\r\n\r\n\r\n const doEditUser = id => history.push(PAGE_URL.STUDENT_DETAIL_URL + '/' + id)\r\n\r\n const doShowPayables = (row) => props.doPayables(row.id, row.school.currentPeriod.id)\r\n\r\n const CustomTableHead = () => {\r\n  return (<>\r\n   <TableHead>\r\n    <StyledTableHeadRow>\r\n     <StyledTableHeadCell>LRN</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Name</StyledTableHeadCell>\r\n     <StyledTableHeadCell>Grade Level</StyledTableHeadCell>\r\n     <StyledTableHeadCell align=\"right\">\r\n      <IconButton aria-label=\"add\" onClick={() => props.doEdit(-1)}>\r\n       <AddIcon fontSize=\"large\" />\r\n      </IconButton>\r\n     </StyledTableHeadCell>\r\n    </StyledTableHeadRow>\r\n   </TableHead>\r\n  </>)\r\n }\r\n const CustomTableBody = () => {\r\n  return (<>\r\n   <TableBody>\r\n    {list.map(row => (\r\n     <StyledTableRow key={row.id}>\r\n      <TableCell variant=\"head\">{row.lrn}</TableCell>\r\n      <TableCell>{row.firstName} {row.lastName}</TableCell>\r\n      <TableCell>{row.level.description}</TableCell>\r\n      <TableCell align=\"right\">\r\n       <IconButton aria-label=\"payment\" onClick={() => doShowPayables(row)}>\r\n        <AccountBalanceWalletIcon fontSize=\"large\" />\r\n       </IconButton>\r\n       <IconButton aria-label=\"edit\" onClick={() => doEditUser(row.id)}>\r\n        <EditIcon fontSize=\"large\" />\r\n       </IconButton>\r\n      </TableCell>\r\n     </StyledTableRow>\r\n    ))}\r\n   </TableBody>\r\n  </>)\r\n }\r\n\r\n return (\r\n  <>\r\n   <SubTitleComponent>Search Results</SubTitleComponent>\r\n   {/* <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   /> */}\r\n\r\n   <TableContainer component={Paper}>\r\n    <Table>\r\n     <CustomTableHead />\r\n     <CustomTableBody />\r\n    </Table>\r\n   </TableContainer>\r\n\r\n   <PaginationComponent\r\n    paging={paging}\r\n    onChangePage={props.onChangePage}\r\n    onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n   />\r\n  </>\r\n )\r\n}\r\n\r\nexport default SearchResultsHtmlComponent;","import React from 'react';\r\nimport { Grid, MenuItem, TextField } from \"@material-ui/core\";\r\n\r\nexport default function SelectGrid({ sm, name, label, options, ...rest }) {\r\n return (<>\r\n  <Grid item xs={12} sm={sm}>\r\n   <TextField id={name}\r\n    select\r\n    name={name}\r\n    label={label}\r\n    variant=\"filled\"\r\n    fullWidth\r\n    InputLabelProps={{ shrink: true }}\r\n    autoComplete={label + \"-\" + name}\r\n    {...rest}\r\n   >\r\n    {options.map(({ id, description }) => (\r\n     <MenuItem key={id} value={id}>{description}</MenuItem>\r\n    ))}\r\n   </TextField>\r\n  </Grid>\r\n </>)\r\n}","\r\nimport React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Box, Paper, Grid, TextField, Table, TableContainer, TableHead, TableCell, TableBody, Button, InputAdornment } from \"@material-ui/core\"\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport SubTitleComponent from '../common/SubTitleComponent'\r\nimport SelectGrid from '../common/SelectGrid'\r\n\r\nconst { StyledTableRow, StyledTableHeadRow, StyledTableHeadCell, INIT_STATUS } = require(\"../../api/Utils\")\r\n\r\n\r\nconst PayablesHtmlComponent = (props) => {\r\n  const { register, handleSubmit, reset } = useForm()\r\n\r\n  const [total, setTotal] = useState(0)\r\n  const [payables, setPayables] = useState({})\r\n  const [currentState, setCurrentState] = useState({\r\n    period: {\r\n      id: props.store.periodId\r\n    }\r\n  })\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[PayablesHtmlComponent.changeSelectState] name=${name}, value=${value}`)\r\n    setCurrentState({\r\n      [name]: { id: value }\r\n    })\r\n    console.log(`[PayablesHtmlComponent.changeSelectState] currentState=>`, currentState)\r\n  }\r\n\r\n\r\n  const changeSelectStateByPeriod = (e) => {\r\n    changeSelectState(e)\r\n    const { value } = e.target\r\n    // props.doUpdateCurrPageable({\r\n    //   ...props.store.studentPayables,\r\n    //   studentPayables: {\r\n    //     payables: []\r\n    //   },\r\n    //   searchFlag: true,\r\n    //   payablesFlag: false,\r\n    // })\r\n    props.doPayables(props.store.entity.id, value)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(`[PayablesHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n    console.log(`[PayablesHtmlComponent.useEffect] currentState => `, currentState)\r\n    console.log(`[PayablesHtmlComponent.useEffect] props.store.periodId => `, props.store.periodId)\r\n    if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES_RESET) {\r\n      resetPayables();\r\n      props.doUpdateCurrPageable({\r\n        INIT_STATUS: INIT_STATUS.DONE\r\n      })\r\n      // setCurrentState({\r\n      //   period: { id: props.store.periodId }\r\n      // })\r\n\r\n      reset(props.store);\r\n    }\r\n  }, [props.store])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  const resetPayables = () => {\r\n    console.log(`[PayablesHtmlComponent.resetPayables] payables => `, payables);\r\n    setTotal(0);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let data = {\r\n      ...payables\r\n    }\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        data[`payables[${i}].payment`] = formatter.format(0);\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setPayables(data);\r\n  }\r\n\r\n  const onPaymentBlur = (e) => {\r\n    const el = e.target\r\n    let value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    el.value = formatter.format(value);\r\n\r\n    console.log(`[PayablesHtmlComponent.onPaymentBlur] value = ${value}, payables => `, payables)\r\n    value = el.value;\r\n    value = value ? value.replaceAll(',', '') : 0;\r\n    let numValue = Number(value);\r\n    let data = {\r\n      ...payables,\r\n    };\r\n\r\n    data[el.name] = numValue;\r\n    setPayables(data);\r\n\r\n    let hasNext = true;\r\n    let i = 0;\r\n    let total = 0;\r\n    while (hasNext) {\r\n      let payment = data[`payables[${i}].payment`];\r\n      if (payment) {\r\n        total = total + payment;\r\n      } else {\r\n        hasNext = false;\r\n      }\r\n      i++;\r\n    }\r\n    setTotal(formatter.format(total));\r\n    console.log(`[PayablesHtmlComponent.onPaymentBlur] total = ${total}, payables => `, payables)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(`[PayablesHtmlComponent.return] props.store => `, props.store)}\r\n      <SubTitleComponent>Student Information</SubTitleComponent>\r\n      <Paper elevation={3} variant=\"elevation\" >\r\n        <Box py={3} px={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>LRN</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.lrn}</Grid>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.firstName + ' ' + props.store.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={10}>{props.store.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n      <form onSubmit={handleSubmit(props.doShowSaveBillingDialog)}>\r\n        <TextField\r\n          type=\"hidden\"\r\n          name=\"id\"\r\n          value={props.store.entity.id}\r\n          inputRef={register}\r\n        />\r\n        <SubTitleComponent>Payables</SubTitleComponent>\r\n        <Box py={3} px={3}>\r\n          <Grid container spacing={3}>\r\n            <SelectGrid sm={3} required name=\"period\" label=\"Period\"\r\n              value={currentState.period.id}\r\n              options={props.store.optionsList.periodList}\r\n              onChange={e => changeSelectStateByPeriod(e)} />\r\n          </Grid>\r\n        </Box>\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Paid</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }}>Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.studentPayables.payables.map((row, i) => (\r\n                  < StyledTableRow key={row.id}>\r\n                    <TableCell>{row.aps.label}</TableCell>\r\n\r\n                    {row.code === 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                        <TableCell align=\"right\">({row.payment})</TableCell>\r\n                      </>\r\n                    }\r\n\r\n                    {row.code !== 'balance' &&\r\n                      <>\r\n                        <TableCell align=\"right\">P{row.amount.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.paid.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        })}</TableCell>\r\n                        <TableCell align=\"right\">P{row.balance.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        }\r\n                        )}</ TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].student.id`}\r\n                            value={props.store.entity.id}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].balance`}\r\n                            value={row.balance}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].order`}\r\n                            value={i}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].code`}\r\n                            value={row.code}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].amount`}\r\n                            value={row.amount}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].name`}\r\n                            value={row.name}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField\r\n                            type=\"hidden\"\r\n                            name={`payables[${i}].paid`}\r\n                            value={row.paid}\r\n                            inputRef={register}\r\n                          />\r\n                          <TextField id={row.code}\r\n                            type=\"currency\"\r\n                            name={`payables[${i}].payment`}\r\n                            onBlur={e => onPaymentBlur(e)}\r\n                            fullWidth\r\n                            inputRef={register}\r\n                            // disabled={row.balance === 0}\r\n                            defaultValue={row.payment}\r\n                            variant=\"filled\"\r\n                            InputProps={{\r\n                              startAdornment: <InputAdornment position=\"start\">P</InputAdornment>,\r\n                            }} />\r\n\r\n                        </TableCell>\r\n                      </>}\r\n                  </StyledTableRow>\r\n                ))\r\n              }\r\n              <StyledTableRow>\r\n                <TableCell colSpan=\"4\" align=\"right\">Total</TableCell>\r\n                <TableCell align=\"right\">{total}</TableCell>\r\n              </StyledTableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box pt={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={10}>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save Payment</Button>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Reciept</Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Box>\r\n        <SubTitleComponent>Invoice</SubTitleComponent>\r\n        <TableContainer component={Paper} elevation={3} variant=\"elevation\" >\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Date</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"10%\" }} >Invoice #</StyledTableHeadCell>\r\n                {\r\n                  props.store.billingByInvoice.accountPayablesSettings.map(({ id, label }) => (\r\n                    <StyledTableHeadCell key={id} variant=\"head\" align=\"right\">{label}</StyledTableHeadCell>\r\n                  ))\r\n                }\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                props.store.billingByInvoice.list.map(({ invoiceNo, invoiceDate, payablesMap }) => (\r\n                  < StyledTableRow >\r\n                    <TableCell>{moment(invoiceDate).format('lll')}</TableCell>\r\n                    <TableCell>{invoiceNo}</TableCell>\r\n                    {\r\n                      props.store.billingByInvoice.accountPayablesSettings.map(({ id }) => (\r\n                        <TableCell key={id} align=\"right\">{(payablesMap[id] ? payablesMap[id].payment : 0).toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                          minimumFractionDigits: 2\r\n                        }\r\n                        )}</TableCell>\r\n                      ))\r\n                    }\r\n                  </ StyledTableRow>\r\n                ))\r\n              }\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\nexport default PayablesHtmlComponent;","import React, { useEffect } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport { Box, Button, Grid, MenuItem, Paper, TextField, Typography, Select } from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { INIT_STATUS } from '../../api/Utils'\r\nimport SearchResultsHtmlComponent from './SearchResultsHtmlComponent';\r\nimport PayablesHtmlComponent from './PayablesHtmlComponent';\r\nimport TitleComponent from '../common/TitleComponent';\r\n\r\nexport default function BillingHtmlComponent(props) {\r\n        const { control, register, handleSubmit, reset } = useForm();\r\n\r\n        useEffect(() => {\r\n                console.log(`[BillingHtmlComponent.useEffect] INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)\r\n                // if (props.store.INIT_STATUS === INIT_STATUS.PAYABLES) {\r\n                //         props.doPayables();\r\n                // } else if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                //         reset(props.store)\r\n                // }\r\n                if (props.store.INIT_STATUS === INIT_STATUS.RESET) {\r\n                        reset(props.store)\r\n                }\r\n        }, [props.store])\r\n\r\n        return (\r\n                <>\r\n                        {console.log(`[BillingHtmlComponent.return], INIT_STATUS=${props.store.INIT_STATUS}, props.store=>`, props.store)}\r\n                        <TitleComponent>Payment</TitleComponent>\r\n\r\n                        <form onSubmit={handleSubmit(props.doRetrieve)}>\r\n                                <Paper elevation={3} variant=\"elevation\" >\r\n                                        <Box my={3} mx={3}>\r\n                                                <Grid container spacing={3}>\r\n                                                        <Grid item xs={12} sm={2}><Typography variant=\"h6\">Search By</Typography></Grid>\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Controller\r\n                                                                        as={<Select fullWidth >\r\n                                                                                {props.store.optionsList.billingSearchBy.map(m => (\r\n                                                                                        <MenuItem key={m.id} value={m.value}>\r\n                                                                                                {m.label}\r\n                                                                                        </MenuItem>\r\n                                                                                ))}\r\n                                                                        </Select>}\r\n                                                                        required\r\n                                                                        name=\"searchBy\"\r\n                                                                        control={control}\r\n                                                                        defaultValue={props.store.searchBy}\r\n                                                                        options={props.store.optionsList.billingSearchBy}\r\n                                                                />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12} sm={6}>\r\n                                                                <TextField id=\"searchValue\"\r\n                                                                        required\r\n                                                                        name=\"searchValue\"\r\n                                                                        // label=\"Search Value\"\r\n                                                                        fullWidth\r\n                                                                        autoComplete=\"billing-search-value\"\r\n                                                                        inputRef={register}\r\n                                                                        defaultValue={props.store.searchValue}\r\n                                                                />\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12} sm={2}>\r\n                                                                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SearchIcon />}>Search</Button>\r\n                                                        </Grid>\r\n                                                </Grid>\r\n                                        </Box>\r\n                                </Paper>\r\n                        </form>\r\n                        {props.store.searchFlag &&\r\n                                <SearchResultsHtmlComponent\r\n                                        store={props.store}\r\n                                        onChangePage={props.onChangePage}\r\n                                        onChangeRowsPerPage={props.onChangeRowsPerPage}\r\n                                        doPayables={props.doPayables}\r\n                                        doUpdateCurrPageable={props.doUpdateCurrPageable}\r\n                                />}\r\n                        {props.store.payablesFlag &&\r\n                                <PayablesHtmlComponent\r\n                                        register={register}\r\n                                        handleSubmit={handleSubmit}\r\n                                        doShowSaveBillingDialog={props.doShowSaveConfirmDialog}\r\n                                        // doSavePayables={props.doSavePayables}\r\n                                        store={props.store}\r\n                                        doUpdateCurrPageable={props.doUpdateCurrPageable}\r\n                                        doPayables={props.doPayables} />}\r\n                </>\r\n        )\r\n}","\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nimport { formatter, INIT_STATUS, StyledTableCell, StyledTableHeadCell, StyledTableHeadRow, StyledTableRow } from '../../api/Utils';\r\n\r\nimport { useAuth } from '../../providers/AuthenticationProvider';\r\n\r\nexport default function SavePayablesConfimationHtml(props) {\r\n\r\n  const [userObj] = useAuth();\r\n  const { reset } = useForm(props.confirmStore);\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(`[SavePayablesConfimationHtml.useEffect] confirmStore=>`, props.confirmStore)\r\n    if (props.confirmStore.INIT_STATUS === INIT_STATUS.RESET) {\r\n      reset(props.confirmStore);\r\n    }\r\n    props.confirmStore.INIT_STATUS = INIT_STATUS.DONE;\r\n  }, [props.confirmStore])\r\n\r\n  const ConfirmPage = () => {\r\n    return (<>\r\n      {/* <div className={classes.root}>\r\n        <table width=\"100%\" border=\"0\" >\r\n          <tr >\r\n            <th align=\"right\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"right\" width=\"20%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr >\r\n            <th align=\"right\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"right\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n          </tr>\r\n        </table>\r\n      </div> */}\r\n      <Box pb={3}>\r\n        <Paper elevation={3} variant=\"elevation\" >\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={2}>Student Name</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</Grid>\r\n            <Grid item xs={12} sm={2}></Grid>\r\n            <Grid item xs={12} sm={4}></Grid>\r\n\r\n            <Grid item xs={12} sm={2}>LRN</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.lrn}</Grid>\r\n            <Grid item xs={12} sm={2}>Level</Grid>\r\n            <Grid item xs={12} sm={4}>{props.confirmStore.entity.level.description}</Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Box>\r\n      <TableContainer component={Paper} elevation={3} variant=\"elevation\">\r\n        {props.confirmStore.payables.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Payables</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount to Pay</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payables.map((row) => <>\r\n                {row.payment > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.payment)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell>\r\n                  {props.confirmStore.balanceTotal > 0 &&\r\n                    <Typography variant=\"h6\" color=\"textPrimary\">Remaining balance is {formatter.format(props.confirmStore.balanceTotal)}</Typography>\r\n                  }\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={3}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n              {props.confirmStore.invoiceNo && <>\r\n                <StyledTableRow>\r\n                  <StyledTableCell align=\"right\" colSpan={1}><Typography variant=\"h4\" color=\"textPrimary\">Invoice No: </Typography></StyledTableCell>\r\n                  <StyledTableCell align=\"left\" colSpan={2}>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n\r\n                  </StyledTableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n                  </TableCell>\r\n                </ StyledTableRow>\r\n              </>}\r\n            </TableBody>\r\n          </Table>\r\n        }\r\n      </TableContainer>\r\n    </>);\r\n  }\r\n\r\n  const PrintableInvoicePage = () => {\r\n    return (<>\r\n      <div ref={componentRef} className=\"root\">\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userObj.schoolName}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">{userObj.schoolAddress}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4} align=\"center\">&nbsp;</th>\r\n          </tr>\r\n\r\n          {/* <th align=\"left\">{(\"0000000000\" + props.confirmStore.invoiceNo).slice(-10)}</th> */}\r\n          {/* <tr>\r\n            <th align=\"left\" width=\"25%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n            <th align=\"left\" width=\"25%\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr> */}\r\n\r\n          <tr>\r\n            <th align=\"left\" width=\"20%\">Student Name:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName}</th>\r\n            <th align=\"left\" width=\"20%\">Invoice No:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceNo}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Student Id:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.studentId}</th>\r\n            <th align=\"left\">Invoice Date:</th>\r\n            <th align=\"left\">{props.confirmStore.invoiceDate}</th>\r\n          </tr>\r\n          <tr>\r\n            <th align=\"left\">Level:</th>\r\n            <th align=\"left\">{props.confirmStore.entity.level.description}</th>\r\n            <th align=\"left\"></th>\r\n            <th align=\"left\"></th>\r\n          </tr>\r\n        </table>\r\n        <br />\r\n        <table width=\"100%\" border=\"0\">\r\n          <tr>\r\n            <th></th>\r\n            <th width=\"25%\" align=\"right\">Total</th>\r\n            <th width=\"25%\" align=\"right\">Balance</th>\r\n            <th width=\"25%\" align=\"right\">Amount Paid</th>\r\n          </tr>\r\n          {props.confirmStore.payablesByInvoiceNo.map((row) => <>\r\n            {row.paid != 0 &&\r\n              <tr>\r\n                <td align=\"left\">{row.name}</td>\r\n                <td align=\"right\">{formatter.format(row.amount)}</td>\r\n                <td align=\"right\">{formatter.format(row.balance)}</td>\r\n                <td align=\"right\">{formatter.format(row.paid)}</td>\r\n              </tr>\r\n            }\r\n          </>\r\n          )}\r\n          <tr>\r\n            <td></td>\r\n            <td colSpan={4} align=\"right\"><h3>Total Amount Paid: {formatter.format(props.confirmStore.paymentTotal)}</h3></td>\r\n          </tr>\r\n        </table>\r\n        {/* <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Student Name:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.firstName + ' ' + props.confirmStore.entity.lastName} </TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>Invoice Date:</>}</TableCell>\r\n              <TableCell>{props.confirmStore.invoiceNo && <>{props.confirmStore.invoiceDate}</>}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Student Id:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.studentId}</TableCell>\r\n              <TableCell>Level:</TableCell>\r\n              <TableCell>{props.confirmStore.entity.level.description}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n        {props.confirmStore.payablesByInvoiceNo.length > 0 &&\r\n          <Table>\r\n            <TableHead>\r\n              <StyledTableHeadRow>\r\n                <StyledTableHeadCell variant=\"head\">Invoice</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Total</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Balance</StyledTableHeadCell>\r\n                <StyledTableHeadCell variant=\"head\" style={{ width: \"20%\" }} align=\"right\">Amount Paid</StyledTableHeadCell>\r\n              </StyledTableHeadRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.confirmStore.payablesByInvoiceNo.map((row, i) => <>\r\n                {row.paid > 0 &&\r\n                  <StyledTableRow>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.amount)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.balance)}</TableCell>\r\n                    <TableCell align=\"right\">{formatter.format(row.paid)}</TableCell>\r\n                  </StyledTableRow >\r\n                }\r\n              </>\r\n              )}\r\n              < StyledTableRow >\r\n                <TableCell colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Invoice No: </Typography>\r\n                  <Typography variant=\"h4\" color=\"textPrimary\">{props.confirmStore.invoiceNo}</Typography>\r\n                </TableCell>\r\n                <StyledTableCell align=\"right\" colSpan={2}>\r\n                  <Typography variant=\"h5\" color=\"textPrimary\">Total amount paid is {formatter.format(props.confirmStore.paymentTotal)}</Typography>\r\n                </StyledTableCell>\r\n              </ StyledTableRow>\r\n\r\n            </TableBody>\r\n          </Table>\r\n        } */}\r\n      </div>\r\n    </>);\r\n  }\r\n  return (<>\r\n    {console.log(`[SavePayablesConfimationHtml.return] confirmStore=>`, props.confirmStore)}\r\n    <Dialog fullWidth=\"true\" maxWidth=\"md\"\r\n      open={props.open}\r\n      onClose={props.closeDialog}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{!props.confirmStore.invoiceNo && <Alert severity=\"info\" align=\"right\">{props.title}</Alert>}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {!props.confirmStore.invoiceNo && <ConfirmPage />}\r\n          {props.confirmStore.invoiceNo && <PrintableInvoicePage />}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button className=\"not-printable\" onClick={handlePrint} variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<PrintIcon />}>Print Invoice</Button>\r\n            <Button className=\"not-printable\" onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />}>Close</Button>\r\n          </>\r\n        }\r\n        {!props.confirmStore.invoiceNo &&\r\n          <>\r\n            <Button onClick={props.closeDialog} variant=\"contained\" color=\"secondary\" startIcon={<CancelIcon />} > Cancel</Button>\r\n            <Button onClick={props.saveDialog} variant=\"contained\" color=\"primary\" autoFocus startIcon={<SaveIcon />} > Save</Button>\r\n          </>\r\n        }\r\n      </DialogActions>\r\n    </Dialog>\r\n  </>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport { ERROR_CODE, formatter, INIT_STATUS } from '../../api/Utils'\r\n\r\nimport BillingHtmlComponent from './BillingHtmlComponent';\r\nimport SavePayablesConfimationHtml from './SavePayablesConfimationHtml';\r\n\r\nimport { getListBy, getStudentPayablesByPeriod, save } from '../../api/billing/BillingService'\r\nimport { optionsList, selectPageable, setPageable, updatePageable } from '../../api/billing/BillingSlice';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function BillingComponent() {\r\n  const alert = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    vertical: 'top',\r\n    horizontal: 'center'\r\n  })\r\n  const { message, open, vertical, horizontal } = snackbar\r\n\r\n\r\n  const [confirmStore, setConfirmStore] = useState({\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    entity: {\r\n      studentId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      level: {\r\n        id: '',\r\n        value: '',\r\n        description: ''\r\n      }\r\n    },\r\n    payables: [],\r\n    payablesByInvoiceNo: [],\r\n    open: false\r\n  })\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const doInitFormData = data => {\r\n    //data.optionsList = optionsList;\r\n\r\n    if (!data.currentPage) {\r\n      data.paging = {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0\r\n      };\r\n    }\r\n\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n\r\n    if (!data.studentPayables) {\r\n      data.studentPayables = {\r\n        invoiceNo: '',\r\n        payables: [],\r\n        payablesByInvoiceNo: []\r\n      };\r\n    }\r\n    if (!data.studentPayables.payables) {\r\n      data.studentPayables.payables = [];\r\n    }\r\n    if (!data.studentPayables.payablesByInvoiceNo) {\r\n      data.studentPayables.payablesByInvoiceNo = [];\r\n    }\r\n  }\r\n\r\n  const doRetrieve = (data) => {\r\n    console.log(`[BillingComponent.doRetrieve] data==>`, data)\r\n    getListBy(data.searchBy, data.searchValue, currPageable.paging.currentPage, currPageable.paging.rowsPerPage)\r\n      .then(response => {\r\n        console.log(`[BillingComponent.doRetrieve BillingService.getListBy] response==>`, response)\r\n        let formData = {\r\n          ...currPageable,\r\n          INIT_STATUS: INIT_STATUS.RESET,\r\n          searchValue: data.searchValue,\r\n          searchBy: data.searchBy,\r\n          searchFlag: true,\r\n          payablesFlag: false,\r\n          list: response.data.content,\r\n          optionsList: optionsList,\r\n          paging: {\r\n            rowsPerPage: response.data.size,\r\n            totalElements: response.data.totalElements,\r\n            currentPage: response.data.pageable.pageNumber,\r\n          }\r\n        }\r\n        doInitFormData(formData);\r\n        dispatch(setPageable(formData))\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doRetrieve', 'BillingService.getListBy'));\r\n  }\r\n\r\n  const onChangeRowsPerPage = (e) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    let data = {\r\n      paging: paging\r\n    }\r\n    doUpdateCurrPageable(data)\r\n\r\n    doRetrieve();\r\n  }\r\n  const onChangePage = (e, newPage) => {\r\n    let paging = {\r\n      ...currPageable.paging\r\n    }\r\n    paging.currentPage = newPage\r\n\r\n    let data = {\r\n      paging: paging\r\n    }\r\n    doUpdateCurrPageable(data)\r\n\r\n    doRetrieve({\r\n      searchBy: data.searchBy,\r\n      searchValue: data.searchValue,\r\n      currentPage: data.paging.currentPage,\r\n      rowsPerPage: data.paging.rowsPerPage\r\n    });\r\n  }\r\n\r\n  const doUpdateCurrPageable = (formData) => {\r\n    dispatch(updatePageable(formData))\r\n  }\r\n  const doPayables = (id, periodId) => {\r\n    console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] id=${id}, periodId=${periodId}`)\r\n    getStudentPayablesByPeriod(id, periodId).then(response => {\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] response==>`, response)\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayablesByPeriod] response.data.optionsList==>`, response.data.optionsList)\r\n      let payables = response.data.studentPayables.payables;\r\n      payables.map((row) => {\r\n        // let value = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n        row.payment = formatter.format(row.payment);\r\n        return row\r\n      });\r\n\r\n      let optionsListTemp = {\r\n        ...response.data.optionsList,\r\n        ...optionsList\r\n      }\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] optionsListTemp==>`, optionsListTemp)\r\n      let formData = {\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        entity: response.data.student,\r\n        periodId: periodId,\r\n        studentPayables: {\r\n          ...response.data.studentPayables,\r\n          payables: payables\r\n        },\r\n        billingByInvoice: {\r\n          ...response.data.billingByInvoice\r\n        },\r\n        searchFlag: false,\r\n        payablesFlag: true\r\n      }\r\n\r\n      doInitFormData(formData);\r\n      formData.optionsList = optionsListTemp\r\n\r\n      console.log(`[BillingComponent.doPayables BillingService.getStudentPayables] formData==>`, formData)\r\n      doUpdateCurrPageable(formData)\r\n\r\n\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doPayables', 'BillingService.getStudentPayables'));\r\n  }\r\n  const doShowSaveConfirmDialog = (data) => {\r\n    console.log(`[BillingComponent.doShowSaveConfirmDialog] data==>`, data);\r\n    let paymentTotal = 0;\r\n    let balanceTotal = 0;\r\n    data.payables.map((row) => {\r\n      let balance = row.balance ? row.balance.replaceAll(',', '') : 0;\r\n      let payment = row.payment ? row.payment.replaceAll(',', '') : 0;\r\n\r\n      row.balance = Number(balance);\r\n      row.payment = Number(payment);\r\n\r\n      balanceTotal += row.balance;\r\n      paymentTotal += row.payment;\r\n      return row\r\n    });\r\n\r\n    // doOpenSnackBar({\r\n    //   message: `Total amount is ${paymentTotal}`\r\n    // })\r\n\r\n    if (Number(paymentTotal) == 0) {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 1 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n\r\n      doOpenSnackBar({\r\n        message: `Total amount is ${paymentTotal}`\r\n      })\r\n    } else {\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] 2 totalBalance=${balanceTotal}, paymentTotal=${paymentTotal}`);\r\n      let confirmStoreTemp = {\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        open: true,\r\n        entity: currPageable.entity,\r\n        payables: data.payables,\r\n        payablesByInvoiceNo: [],\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: balanceTotal - paymentTotal,\r\n        invoiceNo: '',\r\n        periodId: currPageable.periodId\r\n      }\r\n      doInitConfirmStore(confirmStoreTemp);\r\n\r\n      console.log(`[BillingComponent.doShowSaveConfirmDialog] confirmStoreTemp==>`, confirmStoreTemp);\r\n      setConfirmStore(confirmStoreTemp);\r\n    }\r\n\r\n  }\r\n  const doConfirmSavePayables = () => {\r\n    console.log(`[BillingComponent.doConfirmSavePayables] confirmStore==>`, confirmStore);\r\n    doSavePayables(confirmStore);\r\n  }\r\n\r\n  const doSavePayables = (data) => {\r\n    console.log(`[BillingComponent.doSavePayables] data==>`, data);\r\n\r\n    save(data.payables, data.entity.id, data.periodId).then(response => {\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] response==>`, response)\r\n      let formData = {\r\n        INIT_STATUS: INIT_STATUS.PAYABLES_RESET,\r\n        entity: response.data.student,\r\n        studentPayables: response.data.studentPayables,\r\n        searchFlag: false,\r\n        payablesFlag: true,\r\n      }\r\n\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 1 formData==>`, formData)\r\n      doInitFormData(formData);\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 2 formData==>`, formData)\r\n      dispatch(updatePageable(formData));\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 3 formData==>`, formData)\r\n      let payablesByInvoiceNo = [\r\n        //...response.data.studentPayables.payablesByInvoiceNo\r\n      ]\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 0 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n      for (const row of response.data.studentPayables.payablesByInvoiceNo) {\r\n        let temp = {\r\n          ...row\r\n        }\r\n        payablesByInvoiceNo.push(temp)\r\n      }\r\n\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 1 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      let paymentTotal = 0;\r\n      payablesByInvoiceNo.map((row) => {\r\n        row.paid = Number(row.paid);\r\n        paymentTotal += row.paid;\r\n        return row\r\n      });\r\n      console.log(`[BillingComponent.doSavePayables BillingService.save] 2 payablesByInvoiceNo==>`, payablesByInvoiceNo)\r\n\r\n      setConfirmStore({\r\n        ...confirmStore,\r\n        INIT_STATUS: INIT_STATUS.RESET,\r\n        payables: [],\r\n        invoiceDate: moment(response.data.studentPayables.invoiceDate).format('lll'),\r\n        invoiceNo: response.data.studentPayables.invoiceNo,\r\n        payablesByInvoiceNo: payablesByInvoiceNo,\r\n        paymentTotal: paymentTotal,\r\n        balanceTotal: 0\r\n      });\r\n\r\n      doUpdateCurrPageable({\r\n        billingByInvoice: {\r\n          ...response.data.billingByInvoice\r\n        },\r\n      })\r\n\r\n      doOpenSnackBar({\r\n        message: 'Payables saved successfully!'\r\n      })\r\n    })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'BillingComponent.doSavePayables', 'BillingService.save'));\r\n  }\r\n\r\n  const doCloseSaveBillingDialog = () => {\r\n    let confirmStoreTemp = {\r\n      ...confirmStore,\r\n      open: false\r\n    }\r\n    setConfirmStore(confirmStoreTemp);\r\n  }\r\n\r\n  const doInitConfirmStore = data => {\r\n    if (!data.entity) {\r\n      data.entity = {\r\n        studentId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        level: {\r\n          id: '',\r\n          value: '',\r\n          description: ''\r\n        }\r\n      };\r\n    }\r\n    if (!data.payables) {\r\n      data.payables = [];\r\n    }\r\n  }\r\n\r\n  const doOpenSnackBar = (state) => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: true,\r\n      ...state\r\n    })\r\n  }\r\n  const doCloseSnackbar = () => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: false,\r\n      message: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BillingHtmlComponent\r\n        store={currPageable}\r\n        doRetrieve={doRetrieve}\r\n        doPayables={doPayables}\r\n        onChangePage={onChangePage}\r\n        onChangeRowsPerPage={onChangeRowsPerPage}\r\n        doShowSaveConfirmDialog={doShowSaveConfirmDialog}\r\n        doSavePayables={doSavePayables}\r\n        doUpdateCurrPageable={doUpdateCurrPageable}\r\n      />\r\n      <SavePayablesConfimationHtml\r\n        confirmStore={confirmStore}\r\n        title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        closeDialog={doCloseSaveBillingDialog}\r\n        saveDialog={doConfirmSavePayables} />\r\n      {/* <SaveBillingDialog title=\"Please click save button to confirm.\"\r\n        open={confirmStore.open}\r\n        <SavePayablesConfimationHtml confirmStore={confirmStore}/>\r\n      </SaveBillingDialog> */}\r\n\r\n\r\n      <Snackbar open={open}\r\n        autoHideDuration={6000}\r\n        onClose={doCloseSnackbar}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n      >\r\n        <Alert onClose={doCloseSnackbar} severity=\"success\">\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from \"../Utils\";\r\n\r\nexport const getListBy = (by, searchValue, page, pageSize) => axios.get(`${API_URL_BASE}billing/search/${by}?searchValue=${searchValue}&page=${page}&size=${pageSize}`)\r\n\r\nexport const getStudentPayables = (id) => axios.get(`${API_URL_BASE}billing/payables/${id}`)\r\nexport const getStudentPayablesByPeriod = (id, periodId) => axios.get(`${API_URL_BASE}billing/payables/${id}/period/${periodId}`)\r\n\r\nexport const save = (data, id, periodId) => axios.post(`${Utils.urlSavePattern('billing')}/${id}/period/${periodId}`, data)\r\n\r\nexport default function BillingService() {\r\n}","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE } from \"../Utils\";\r\n\r\n\r\nexport const ENTITY = \"accountPayablesSettings\";\r\nconst sort = \"priority,description,amount\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport const getActiveList = (period, searchValue, page, pageSize) => axios.get(`${API_URL_BASE + ENTITY + \"/active/\"}${period}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`)\r\nexport const getApplyToAllList = () => axios.get(`${API_URL_BASE + ENTITY + \"/applyToAllList\"}`)\r\n\r\nexport default function AccountPayablesSettingsService() {\r\n}\r\n\r\n// class AccountPayablesSettingsService {\r\n\r\n//  getList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description, amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  get = (id) => {\r\n//   const theurl = `${Utils.urlDetailsPattern(ENTITY)}/${id}`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  delete = (id) => {\r\n//   const theurl = `${Utils.urlDeletePattern(ENTITY)}/${id}`\r\n//   return axios.delete(theurl);\r\n//  }\r\n//  save = (data) => {\r\n//   const theurl = `${Utils.urlSavePattern(ENTITY)}`\r\n//   return axios.post(theurl, data);\r\n//  }\r\n//  getActiveList = (searchValue, page, pageSize) => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/active\"}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=priority,description,amount`\r\n//   return axios.get(theurl);\r\n//  }\r\n//  getApplyToAllList = () => {\r\n//   const theurl = `${API_URL_BASE + ENTITY + \"/applyToAllList\"}`\r\n//   return axios.get(theurl);\r\n//  }\r\n// }\r\n\r\n// export default new AccountPayablesSettingsService();\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\n\r\nimport { deleteItem, getList } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport { selectPageable, setPageable, setSelectedItem } from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function AccountPayablesSettingsListComponent(props) {\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n  const alert = useMessageAlert();\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const retrieve = ({ searchValue, paging }) => getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n    .then(({ data }) => dispatch(setPageable({\r\n      INIT_STATUS: INIT_STATUS.LOAD,\r\n      list: data.pagingList.content,\r\n      searchValue: searchValue,\r\n      paging: {\r\n        rowsPerPage: data.pagingList.size,\r\n        currentPage: data.pagingList.pageable.pageNumber,\r\n        totalElements: data.pagingList.totalElements,\r\n        totalPage: data.pagingList.totalPage\r\n      }\r\n    })))\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsListComponent.retrieve', 'AccountPayablesSettingsService.getList'));\r\n\r\n  const doRetrieve = () => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: currPageable.paging\r\n  })\r\n\r\n  const doEdit = (selected) => {\r\n    let data = {\r\n      ...selected\r\n    }\r\n    if (!data.period) {\r\n      data.period = { 'id': '' }\r\n    }\r\n    console.log(`[AccountPayablesSettingsListComponent.doEdit]  data=`, data)\r\n    dispatch(setSelectedItem(data))\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => deleteItem(id)\r\n    .then(doRetrieve)\r\n    .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsListComponent.doDelete', 'AccountPayablesSettingsService.deleteItem'));\r\n\r\n  const doHandleChangePage = (e, newPage) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      currentPage: newPage\r\n    }\r\n  })\r\n\r\n  const doHandleChangeRowsPerPage = (e) => retrieve({\r\n    searchValue: currPageable.searchValue,\r\n    paging: {\r\n      ...currPageable.paging,\r\n      rowsPerPage: e.target.value,\r\n      currentPage: 0\r\n    }\r\n  })\r\n\r\n  const doSearch = (searchValue) => retrieve({\r\n    searchValue: searchValue,\r\n    paging: {\r\n      ...currPageable.paging\r\n    }\r\n  })\r\n\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod.description;\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    },\r\n    {\r\n      field: 'applyToAll',\r\n      headerName: 'Apply To All',\r\n      render: function (row) {\r\n        return row.applyToAll ? 'Y' : 'N';\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N';\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Accounts Payables Settings List</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\n\r\nimport { selectSelectedItem, resetSelectedItem, setPageableEntity, setOptionsList } from '../../api/accountPayablesSettings/AccountPayablesSettingsSlice';\r\nimport { save, getOptions } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nlet renderCount = 0;\r\n\r\nexport default function AccountPayablesSettingsDetailComponent(props) {\r\n  const alert = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { control, register, handleSubmit } = useForm({\r\n    'id': '',\r\n    'label': '',\r\n    'description': 'test',\r\n    'paymentPeriod': { 'id': '' },\r\n    'amount': 0,\r\n    'priority': 1,\r\n    'applyToAll': true,\r\n    'active': false\r\n  });\r\n\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n      if (props.match.params.id == -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    }\r\n    if (status === INIT_STATUS.LOAD) {\r\n      onRetrieve()\r\n      setStatus(INIT_STATUS.DONE)\r\n    }\r\n  }, [selectedItem, status]);\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const onRetrieve = () => {\r\n    console.log(`[AccountPayablesSettingsDetailComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n    if (props.match.params.id == -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    setMessage(`Loading. Please wait...`);\r\n    getOptions()\r\n      .then(response => {\r\n        dispatch(setOptionsList(response.data.listService))\r\n        setMessage('')\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'AccountPayablesSettingsDetailComponent.onRetrieve', 'AccountPayablesSettingsService.getOptions'));\r\n  }\r\n\r\n\r\n  const doSave = data => {\r\n    setMessage(`Saving...`);\r\n    save(data)\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        setMessage('')\r\n        history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'CodeGroupsDetailComponent.save', 'CodeGroupsService.save'))\r\n  }\r\n\r\n  renderCount++;\r\n  return (\r\n    <>\r\n      {console.log(`[AccountPayablesSettingsDetailComponent.render] renderCount=${renderCount} selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Account Payables Settings Details</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n      <form onSubmit={handleSubmit(doSave)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField type=\"hidden\"\r\n          name=\"id\"\r\n          inputRef={register}\r\n          defaultValue={selectedItem.id}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-description\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.description}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              required\r\n              id=\"label\"\r\n              name=\"label\"\r\n              label=\"Label\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-label\"\r\n              autoFocus\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.label}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"period\"\r\n                  required\r\n                  select\r\n                  label=\"Period\"\r\n                  required={selectedItem.id ? false : true}\r\n                  disabled={selectedItem.id ? true : false}\r\n                  fullWidth\r\n                  autoComplete=\"period\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.periodList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              required\r\n              name=\"period.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.period.id}\r\n              options={selectedItem.optionsList.periodList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"paymentPeriod\"\r\n                  required\r\n                  select\r\n                  label=\"Payment Period\"\r\n                  fullWidth\r\n                  autoComplete=\"paymentPeriod\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  {selectedItem.optionsList.paymentPeriodList.map(row => (\r\n                    <MenuItem key={row.id} value={row.id}>{row.description}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              }\r\n              required\r\n              name=\"paymentPeriod.id\"\r\n              control={control}\r\n              defaultValue={selectedItem.paymentPeriod.id}\r\n              options={selectedItem.optionsList.paymentPeriodList}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"Priority\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-priority\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.priority}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              label=\"Amount\"\r\n              fullWidth\r\n              autoComplete=\"account-payables-settings-amount\"\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }}\r\n              inputRef={register}\r\n              defaultValue={selectedItem.amount}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"applyToAll\"\r\n                  required\r\n                  select\r\n                  label=\"Applicable to All\"\r\n                  fullWidth\r\n                  autoComplete=\"applyToAll\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\r\n                  <MenuItem key={2} value={false}>No</MenuItem>\r\n                </TextField>\r\n              }\r\n              name=\"applyToAll\"\r\n              control={control}\r\n              defaultValue={selectedItem.applyToAll}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Controller\r\n              as={\r\n                <TextField id=\"active\"\r\n                  required\r\n                  select\r\n                  label=\"Active\"\r\n                  fullWidth\r\n                  autoComplete=\"active\"\r\n                  variant=\"filled\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  inputRef={register}\r\n                // error={!!errors.name}\r\n                >\r\n                  <MenuItem key={1} value={true}>Yes</MenuItem>\r\n                  <MenuItem key={2} value={false}>No</MenuItem>\r\n                </TextField>\r\n              }\r\n              name=\"active\"\r\n              control={control}\r\n              defaultValue={selectedItem.active}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" href={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport Utils, { API_URL_BASE, URL_OPTIONS } from \"../Utils\";\r\n\r\n\r\nexport const ENTITY = \"gradeLevelPayables\";\r\nconst sort = \"priority,description\"\r\n\r\nexport const getList = (searchValue, page, pageSize) => axios.get(`${Utils.urlListPattern(ENTITY)}?searchValue=${searchValue}&page=${page}&size=${pageSize}&sort=${sort}`)\r\nexport const get = (id) => axios.get(`${Utils.urlListPattern(ENTITY)}/${id}`)\r\nexport const getOptions = () => axios.get(`${Utils.urlOptionsPattern(ENTITY)}`)\r\nexport const getOptionsByPeriod = (periodId) => axios.get(API_URL_BASE + ENTITY + URL_OPTIONS + `/period/${periodId}`)\r\nexport const deleteItem = (id) => axios.delete(`${Utils.urlDeletePattern(ENTITY)}/${id}`)\r\nexport const save = (data) => axios.post(`${Utils.urlSavePattern(ENTITY)}`, data)\r\n\r\nexport default function GradeLevelPayablesService() {\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { ERROR_CODE, INIT_STATUS, OPTIONS, PAGE_URL } from '../../api/Utils'\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { deleteItem, getList } from '../../api/gradeLevelPayables/GradeLevelPayablesService';\r\nimport { selectPageable, setPageable, setSelectedItem, resetSelectedItem } from '../../api/gradeLevelPayables/GradeLevelSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\nimport ConfirmMsgDialog from '../common/ConfirmMsgDialog';\r\n\r\nexport default function GradeLevelPayablesListComponent(props) {\r\n  const alert = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const currPageable = useSelector(selectPageable)\r\n\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n\r\n  const cols = [\r\n    {\r\n      headerName: 'Level',\r\n      render: function (row) {\r\n        return row.level.description\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      field: 'active',\r\n      headerName: 'Active',\r\n      render: function (row) {\r\n        return row.active ? 'Y' : 'N'\r\n      }\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedItem())\r\n  }, []);\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const retrieve = ({ searchValue, paging }) =>\r\n    getList(searchValue, paging.currentPage, paging.rowsPerPage)\r\n      .then(({ data }) => {\r\n        console.log(`[GradeLevelPayablesListComponent.retrieve] data=`, data)\r\n        dispatch(setPageable({\r\n          INIT_STATUS: INIT_STATUS.LOAD,\r\n          list: data.pagingList.content,\r\n          searchValue: searchValue,\r\n          paging: {\r\n            rowsPerPage: data.pagingList.size,\r\n            currentPage: data.pagingList.pageable.pageNumber,\r\n            totalElements: data.pagingList.totalElements,\r\n            totalPage: data.pagingList.totalPage\r\n          }\r\n        }))\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.retrieve', 'GradeLevelPayablesService.getList'))\r\n\r\n\r\n\r\n\r\n  const doRetrieve = () => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: currPageable.paging\r\n    })\r\n  }\r\n\r\n  const doEdit = (selected) => {\r\n    let aps = [...selected.accountPayablesSettings]\r\n    aps.sort((a, b) => {\r\n      return a.priority - b.priority;\r\n    })\r\n    dispatch(setSelectedItem({\r\n      ...selected,\r\n      accountPayablesSettings: [...aps]\r\n    }))\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}`);\r\n  }\r\n\r\n  const doNew = () => {\r\n    props.history.push(`${PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL}/-1`);\r\n  }\r\n\r\n  const doCloseConfirmDelete = () => {\r\n    setDeleteDialogOpen(false)\r\n  }\r\n  const doShowConfirmDelete = (id) => {\r\n    setDeleteId(id)\r\n    setDeleteDialogOpen(true)\r\n  }\r\n  const setDeleteDialogSelection = (value) => {\r\n    console.log(`[CodeGroupsListComponent.setDeleteDialogSelection] value=${value}`);\r\n    if (value === OPTIONS.YES) {\r\n      doDelete(deleteId)\r\n    }\r\n    setDeleteId(null)\r\n  }\r\n  const doDelete = (id) => {\r\n    deleteItem(id)\r\n      .then(doRetrieve)\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelPayablesListComponent.doDelete', 'GradeLevelPayablesService.deleteItem'))\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        currentPage: newPage\r\n      }\r\n    })\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    retrieve({\r\n      searchValue: currPageable.searchValue,\r\n      paging: {\r\n        ...currPageable.paging,\r\n        rowsPerPage: e.target.value,\r\n        currentPage: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    retrieve({\r\n      searchValue: searchValue,\r\n      paging: {\r\n        ...currPageable.paging\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TitleComponent>Grade Level Payables List</TitleComponent>\r\n\r\n      <CustomTableGrid\r\n        store={currPageable}\r\n        cols={cols}\r\n        // list={this.state.list}\r\n        // searchValue={this.state.searchValue}\r\n        // paging={this.state.paging}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doEdit={doEdit}\r\n        doNew={doNew}\r\n        doDelete={doShowConfirmDelete}\r\n        doSearch={doSearch}\r\n      />\r\n      <ConfirmMsgDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Confirm delete\"\r\n        msg=\"Are you sure you want to delete?\"\r\n        closeDialog={doCloseConfirmDelete}\r\n        setDialogSelection={setDeleteDialogSelection} />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { getActiveList } from '../../api/accountPayablesSettings/AccountPayablesSettingsService';\r\nimport CustomTableGrid from '../common/CustomTableGrid'\r\nimport { ERROR_CODE } from '../../api/Utils';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function GradeLevelAccountPayablesSettingsListComponent(props) {\r\n\r\n  const alert = useMessageAlert();\r\n  const [store, setStore] = useState({\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n      rowsPerPage: 25,\r\n      totalElements: 0,\r\n      currentPage: 0\r\n    }\r\n  });\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const doRetrieve = () => {\r\n    console.log(`[GradeLevelAccountPayablesSettingsListComponent.doRetrieve] props.selectedItem==>`, props.selectedItem)\r\n    if (!props.selectedItem.period || !props.selectedItem.period.id) {\r\n      alert({\r\n        type: 'error',\r\n        payload: 'Please select period'\r\n      })\r\n      return\r\n    }\r\n    getActiveList(props.selectedItem.period.id, store.searchValue, store.paging.currentPage, store.paging.rowsPerPage)\r\n      .then(response => {\r\n        let data = {\r\n          list: response.data.pagingList.content,\r\n          searchValue: store.searchValue,\r\n          paging: {\r\n            rowsPerPage: response.data.pagingList.size,\r\n            currentPage: response.data.pagingList.pageable.pageNumber,\r\n            totalElements: response.data.pagingList.totalElements,\r\n            totalPage: response.data.pagingList.totalPage\r\n          }\r\n        }\r\n        setStore(data);\r\n      }).catch(error => showErrorMsgAlert(error, ERROR_CODE.LIST_ERROR, 'GradeLevelAccountPayablesSettingsListComponent.retrieve', 'AccountPayablesSettingsService.getActiveList'))\r\n  }\r\n\r\n  const doHandleChangePage = (e, newPage) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.currentPage = newPage\r\n    setStore(data);\r\n\r\n    doRetrieve();\r\n  }\r\n\r\n  const doHandleChangeRowsPerPage = (e) => {\r\n    let data = {\r\n      ...store\r\n    }\r\n    let paging = data.paging;\r\n    paging.rowsPerPage = e.target.value\r\n    paging.currentPage = 0;\r\n\r\n    setStore(data)\r\n    doRetrieve();\r\n  }\r\n\r\n  const doSearch = (searchValue) => {\r\n    store.searchValue = searchValue\r\n    doRetrieve();\r\n  }\r\n  const doAddItem = (row) => {\r\n    props.setGradeLevelPayables(row);\r\n  }\r\n  const cols = [\r\n    {\r\n      field: 'description',\r\n      headerName: 'Add',\r\n      render: function (row) {\r\n        return (<IconButton aria-label=\"add\" onClick={() => doAddItem(row)}>\r\n          <AddIcon fontSize=\"large\" />\r\n        </IconButton>);\r\n      }\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n    },\r\n    {\r\n      headerName: 'Period',\r\n      render: function (row) {\r\n        return row.period ? row.period.description : ''\r\n      }\r\n    },\r\n    {\r\n      headerName: 'Payment Period',\r\n      render: function (row) {\r\n        return row.paymentPeriod.description;\r\n      }\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n    },\r\n    {\r\n      field: 'priority',\r\n      headerName: 'Priority',\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CustomTableGrid\r\n        store={store}\r\n        cols={cols}\r\n        showAction={false}\r\n        onChangePage={doHandleChangePage}\r\n        onChangeRowsPerPage={doHandleChangeRowsPerPage}\r\n        doRetrieve={doRetrieve}\r\n        doSearch={doSearch}\r\n      />\r\n    </ >\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Box, Button, Checkbox, FormControlLabel, FormGroup, Grid, IconButton } from '@material-ui/core';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nimport { ERROR_CODE, INIT_STATUS, PAGE_URL } from '../../api/Utils';\r\nimport GradeLevelAccountPayablesSettingsListComponent from './GradeLevelAccountPayablesSettingsListComponent'\r\nimport CustomTableGrid from '../common/CustomTableGrid';\r\nimport SelectGrid from '../common/SelectGrid';\r\nimport { save, getOptions, getOptionsByPeriod } from '../../api/gradeLevelPayables/GradeLevelPayablesService';\r\nimport { selectSelectedItem, setOptionsList, updateSelectedItem, resetSelectedItem, setPageableEntity } from '../../api/gradeLevelPayables/GradeLevelSlice';\r\nimport TitleComponent from '../common/TitleComponent';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nlet renderCount = 0;\r\n\r\nexport default function GradeLevelPayablesDetailsComponent(props) {\r\n  const alert = useMessageAlert();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [message, setMessage] = useState('Loading. Please wait...');\r\n\r\n  const selectedItem = useSelector(selectSelectedItem)\r\n  const [status, setStatus] = useState(INIT_STATUS.INIT);\r\n\r\n  useEffect(() => {\r\n    if (status === INIT_STATUS.INIT) {\r\n\r\n      if (props.match.params.id === -1) {\r\n        dispatch(resetSelectedItem())\r\n      }\r\n      setStatus(INIT_STATUS.LOAD)\r\n    } else if (status === INIT_STATUS.LOAD) {\r\n      onRetrieve()\r\n      setStatus(INIT_STATUS.RESET)\r\n    }\r\n\r\n  }, [selectedItem, status]);\r\n\r\n  const showErrorMsgAlert = (error, errorCode, formMethod, serviceName) => {\r\n    alert({\r\n      type: 'form-error',\r\n      payload: {\r\n        error: error,\r\n        errorCode: errorCode,\r\n        formMethod: formMethod,\r\n        serviceName: serviceName\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target\r\n\r\n    console.log(`[GradeLevelPayablesDetailsComponent.handleCheckboxChange] name=${name}, checked=${checked}`)\r\n    dispatch(updateSelectedItem({\r\n      [name]: checked\r\n    }))\r\n  };\r\n  const onRetrieve = () => {\r\n    doRetrieve(\"-1\")\r\n  }\r\n\r\n  const doRetrieve = (id) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.onRetrieve]  props.match.params.id==>${props.match.params.id}`)\r\n\r\n    if (props.match.params.id === -1) {\r\n      dispatch(resetSelectedItem())\r\n    }\r\n    // if (!selectedItem.period || !selectedItem.period.id) {\r\n    //   showErrorAlert('Please select period')\r\n    //   return\r\n    // }\r\n\r\n    setMessage(`Loading. Please wait...`);\r\n\r\n    getOptionsByPeriod(id).then(response => onRetrieveResponseAction(response))\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.RETRIEVE_ERROR, 'GradeLevelPayablesDetailsComponent.onRetrieve', 'GradeLevelPayablesService.getOptions'));\r\n  }\r\n\r\n  const onRetrieveResponseAction = (response) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.onRetrieveResponseAction]  response==>`, response)\r\n    dispatch(setOptionsList(response.data.listService))\r\n    setMessage(``);\r\n  }\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(``);\r\n    save({\r\n      id: selectedItem.id,\r\n      level: selectedItem.level,\r\n      period: selectedItem.period,\r\n      active: selectedItem.active,\r\n      accountPayablesSettings: selectedItem.list\r\n    })\r\n      .then(response => {\r\n        dispatch(setPageableEntity(response.data.entity))\r\n        history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)\r\n      })\r\n      .catch(error => showErrorMsgAlert(error, ERROR_CODE.SAVE_ERROR, 'GradeLevelPayablesDetailsComponent.onSubmitForm', 'GradeLevelPayablesService.save'));\r\n  }\r\n\r\n  const setGradeLevelPayables = (data) => {\r\n    console.log(`[GradeLevelPayablesDetailsComponent.setGradeLevelPayables] data==>`, data)\r\n\r\n    let list = [...selectedItem.list]\r\n    if (list.filter(row => row.id === data.id).length === 0) {\r\n      let temp = {\r\n        ...data,\r\n        status: 'NEW'\r\n      }\r\n      list.push(temp);\r\n      dispatch(updateSelectedItem({\r\n        list: list\r\n      }))\r\n    }\r\n  }\r\n\r\n  const doDeleteItem = (id) => dispatch(updateSelectedItem({\r\n    list: [...selectedItem.list.filter(item => item.id !== id)]\r\n  }))\r\n\r\n  const onChangePeriod = (e) => {\r\n    const { name, value } = e.target\r\n    changeSelectState(e)\r\n    doRetrieve(value)\r\n  }\r\n\r\n  const changeSelectState = (e) => {\r\n    const { name, value } = e.target\r\n    console.log(`[GradeLevelPayablesDetailsComponent.changeSelectState] name=${name}, value=${value}`)\r\n    dispatch(updateSelectedItem({\r\n      [name]: { id: value }\r\n    }))\r\n  }\r\n\r\n  const GridActionButtons = () => {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={9}>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" startIcon={<SaveIcon />}>Save</Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" href={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL + '/-1'} startIcon={<AddIcon />}>New</Button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Button variant=\"contained\" onClick={() => history.push(PAGE_URL.GRADE_LEVEL_PAYABLES_LIST)} startIcon={<CancelIcon />}>Cancel</Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const cols = [{\r\n    field: 'description',\r\n    headerName: 'Description',\r\n    render: function (row) {\r\n      return (<>\r\n        {row.status === 'NEW' && <>{row.description} <WarningIcon fontSize=\"small\" /></>}\r\n        {row.status !== 'NEW' && row.description}\r\n      </>);\r\n    }\r\n  },\r\n  {\r\n    headerName: 'Period',\r\n    render: function (row) {\r\n      // return row.period.description;\r\n      return (<>\r\n        {row.period.id !== selectedItem.period.id && <>{row.period.description} <WarningIcon fontSize=\"small\" /></>}\r\n        {row.period.id === selectedItem.period.id && row.period.description}\r\n      </>);\r\n    }\r\n  },\r\n  {\r\n    headerName: 'Payment Period',\r\n    render: function (row) {\r\n      return row.paymentPeriod.description;\r\n    }\r\n  },\r\n  {\r\n    field: 'amount',\r\n    headerName: 'Amount',\r\n  },\r\n  {\r\n    field: 'priority',\r\n    headerName: 'Priority',\r\n  },\r\n  {\r\n    headerName: 'Action',\r\n    render: function (row) {\r\n      return (<IconButton aria-label=\"add\" onClick={() => doDeleteItem(row.id)}>\r\n        <DeleteIcon fontSize=\"large\" />\r\n      </IconButton>);\r\n    }\r\n  }\r\n  ];\r\n  renderCount++;\r\n  return (\r\n    <>\r\n      {console.log(`[GradeLevelPayablesDetailsComponent.render] renderCount=${renderCount} selectedItem==>`, selectedItem)}\r\n      <TitleComponent>Grade Level Payables</TitleComponent>\r\n      {message && <Alert severity=\"info\">{message}</Alert>}\r\n\r\n\r\n      <form onSubmit={e => onSubmitForm(e)}>\r\n        <GridActionButtons />\r\n\r\n        <Box pb={3}>\r\n          <Grid container spacing={3}>\r\n            <SelectGrid sm={2} required name=\"level\" label=\"Level\" value={selectedItem.level.id} options={selectedItem.optionsList.levelList}\r\n              onChange={e => changeSelectState(e)} />\r\n\r\n            <SelectGrid sm={3} required={selectedItem.id ? false : true} disabled={selectedItem.id ? true : false} name=\"period\" label=\"Period\" value={selectedItem.period.id} options={selectedItem.optionsList.periodList}\r\n              onChange={e => onChangePeriod(e)} />\r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <FormGroup aria-label=\"position\" row>\r\n                <FormControlLabel\r\n                  value=\"true\"\r\n                  control={<Checkbox checked={selectedItem.active} onChange={e => handleCheckboxChange(e)} name=\"active\" />}\r\n                  label=\"Active\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </FormGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box py={3}>\r\n          <Box pb={3}>\r\n            <CustomTableGrid\r\n              store={selectedItem}\r\n              cols={cols}\r\n              showAction={false}\r\n              showPaging={false}\r\n              showSearch={false}\r\n            />\r\n          </Box>\r\n          <GridActionButtons />\r\n        </Box>\r\n\r\n        <GradeLevelAccountPayablesSettingsListComponent setGradeLevelPayables={setGradeLevelPayables} selectedItem={selectedItem} />\r\n\r\n      </form>\r\n\r\n    </ >\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useMessageAlert } from \"../../api/useMessageAlert\"\r\n\r\nexport default function GlobalAlertMsgDialog() {\r\n    const alert = useMessageAlert();\r\n\r\n    const closeDialog = () => {\r\n        alert({\r\n            type: 'close'\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth=\"md\"\r\n                open={alert().open}\r\n                onClose={closeDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\"><Alert severity={alert().severity} align=\"right\">\r\n                    <Typography variant=\"h6\">\r\n                        {alert().title}\r\n                    </Typography>\r\n                </Alert></DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {alert().msg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>{alert().label}</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nimport { PAGE_URL, THEME } from './api/Utils';\r\nimport { useAuth } from './providers/AuthenticationProvider';\r\n\r\nimport ErrorComponent from './api/ErrorComponent'\r\nimport FooterComponent from './forms/common/FooterComponent'\r\n\r\nimport EndUserListComponent from './forms/endUser/EndUserListComponent';\r\nimport EndUserDetailComponent from './forms/endUser/EndUserDetailComponent';\r\n\r\nimport AuthenticatedRoute from './security/AuthenticatedRoute'\r\nimport SignInComponent from './security/SignInComponent';\r\nimport LogoutComponent from './security/LogoutComponent'\r\nimport CodeGroupsListComponent from './forms/codeGroups/CodeGroupsListComponent';\r\nimport CodeGroupsDetailComponent from './forms/codeGroups/CodeGroupsDetailComponent';\r\nimport Dashboard from './forms/dashboard/Dashboard';\r\nimport AppBarComponent from './forms/common/AppBarComponent';\r\nimport StudentDetailComponent from './forms/student/StudentDetailComponent';\r\nimport StudentListComponent from './forms/student/StudentListComponent';\r\nimport SchoolDetailComponent from './forms/school/SchoolDetailComponent';\r\nimport SchoolListComponent from './forms/school/SchoolListComponent';\r\n\r\n// import AuthenticationService from './security/AuthenticationService';\r\nimport BillingComponent from './forms/billing/BillingComponent';\r\n\r\nimport AccountPayablesSettingsListComponent from './forms/accountPayables/AccountPayablesSettingsListComponent';\r\nimport AccountPayablesSettingsDetailComponent from './forms/accountPayables/AccountPayablesSettingsDetailComponent';\r\n\r\nimport GradeLevelPayablesListComponent from './forms/gradeLevelPayables/GradeLevelPayablesListComponent';\r\nimport GradeLevelPayablesDetailsComponent from './forms/gradeLevelPayables/GradeLevelPayablesDetailsComponent';\r\nimport GlobalAlertMsgDialog from './forms/common/GlobalAlertMsgDialog';\r\n\r\n\r\nimport { useAuthServices } from './security/useAuthServices'\r\n\r\nconst useStylesRouting = makeStyles((theme) => ({\r\n root: {\r\n  display: 'flex',\r\n },\r\n toolbar: {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n },\r\n content: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n },\r\n container: {\r\n  paddingTop: theme.spacing(4),\r\n  paddingBottom: theme.spacing(4),\r\n },\r\n // content: {\r\n //  backgroundColor:\r\n //   theme.palette.mode === 'light'\r\n //    ? theme.palette.grey[100]\r\n //    : theme.palette.grey[900],\r\n //  flexGrow: 1,\r\n //  height: '100vh',\r\n //  overflow: 'auto',\r\n // },\r\n}));\r\n\r\nconst AppRouting = () => {\r\n\r\n\r\n const [initialize,\r\n  ,\r\n  ,\r\n  getLoggedUserObj,\r\n ] = useAuthServices()\r\n\r\n\r\n const [userObj, setUserObj] = useAuth();\r\n\r\n useEffect(() => {\r\n  console.log(`[AppRouting.useEffect] 1 userObj=>`, userObj)\r\n  initTheme();\r\n\r\n  //initialize user\r\n  initialize()\r\n  let lu = getLoggedUserObj()\r\n  // console.log(`[AppRouting.useEffect] 2 lu=>`, lu)\r\n  setUserObj(lu);\r\n  // console.log(`[AppRouting.useEffect] 3 userObj=>`, userObj)\r\n }, []);\r\n\r\n const initTheme = () => {\r\n  const themeDarkMode = localStorage.getItem(THEME.THEME_STORAGE_NAME);\r\n  setDarkMode(themeDarkMode === 'Y' ? true : false);\r\n }\r\n\r\n const [darkMode, setDarkMode] = useState(false);\r\n\r\n const toggleDarkMode = () => {\r\n  setDarkMode(!darkMode);\r\n  localStorage.setItem(THEME.THEME_STORAGE_NAME, !darkMode ? 'Y' : 'N');\r\n }\r\n\r\n const theme = createMuiTheme({\r\n  palette: {\r\n   type: darkMode ? THEME.DARK_MODE : THEME.LIGHT_MODE,\r\n  },\r\n });\r\n\r\n // render = () => {\r\n const classes = useStylesRouting();\r\n\r\n return (\r\n  <div className=\"\">\r\n   <MuiThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <Router>\r\n     <div className={classes.root}>\r\n\r\n      <AppBarComponent darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\r\n\r\n      <main className={classes.content}>\r\n       <div className={classes.toolbar} />\r\n\r\n       <GlobalAlertMsgDialog />\r\n\r\n       {/* <Container component=\"main\" className={classes.container}> */}\r\n       <Switch>\r\n        <Route path={PAGE_URL.ROOT} exact component={Dashboard} />\r\n        <Route path={PAGE_URL.INDEX} exact component={Dashboard} />\r\n\r\n        <Route path={PAGE_URL.LOGOUT} component={LogoutComponent} />\r\n        <Route path={PAGE_URL.LOGIN} component={SignInComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.STUDENT_LIST} component={StudentListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL} component={StudentDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.STUDENT_DETAIL_URL} component={StudentDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING_PAYABLES} exact component={BillingComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.BILLING} exact component={BillingComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.USER_LIST} exact component={EndUserListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_DETAIL} exact component={EndUserDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.USER_DETAIL_URL} exact component={EndUserDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_LIST} exact component={CodeGroupsListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL} exact component={CodeGroupsDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.CODE_GROUPS_DETAIL_URL} exact component={CodeGroupsDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_LIST} exact component={SchoolListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL} exact component={SchoolDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.SCHOOL_DETAIL_URL} exact component={SchoolDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_LIST} exact component={AccountPayablesSettingsListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL} exact component={AccountPayablesSettingsDetailComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL} exact component={AccountPayablesSettingsDetailComponent} />\r\n\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_LIST} exact component={GradeLevelPayablesListComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL} exact component={GradeLevelPayablesDetailsComponent} />\r\n        <AuthenticatedRoute path={PAGE_URL.GRADE_LEVEL_PAYABLES_DETAIL_URL} exact component={GradeLevelPayablesDetailsComponent} />\r\n\r\n        <Route component={ErrorComponent} />\r\n       </Switch>\r\n       {/* </Container> */}\r\n       <FooterComponent />\r\n      </main>\r\n     </div>\r\n    </Router>\r\n   </MuiThemeProvider>\r\n  </div>\r\n );\r\n // }\r\n}\r\n\r\nexport default AppRouting;","import React from 'react';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { GlobalVariableProvider } from './providers/GlobalVariableProvider';\r\nimport { AuthenticationProvider } from './providers/AuthenticationProvider';\r\nimport store from './api/store';\r\n\r\nimport AppRouting from './AppRouting'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <GlobalVariableProvider>\r\n          <AuthenticationProvider>\r\n            <AppRouting />\r\n          </AuthenticationProvider>\r\n        </GlobalVariableProvider>\r\n      </Provider>\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","\r\nimport { TableCell, TableRow } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport const INIT_STATUS = {\r\n    INIT: 'INIT',\r\n    DONE: 'DONE',\r\n    LOAD: 'LOAD',\r\n    RESET: 'RESET',\r\n    PAYABLES: 'PAYABLES',\r\n    PAYABLES_RESET: 'PAYABLES_RESET'\r\n}\r\n\r\nexport const defaultPageable = {\r\n    INIT_STATUS: INIT_STATUS.INIT,\r\n    list: [],\r\n    searchValue: '',\r\n    paging: {\r\n        rowsPerPage: 25,\r\n        totalElements: 0,\r\n        currentPage: 0,\r\n        totalPage: 0\r\n    }\r\n}\r\n\r\n\r\nexport const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n});\r\n\r\nexport const USER_TEMP = {\r\n    userName: '',\r\n    userFullName: 'Guest',\r\n    schoolName: 'SARA PROJECT',\r\n    schoolAddress: '',\r\n    schoolLogo: '',\r\n    schoolId: '',\r\n}\r\n// export const URL_BASE = 'http://localhost:8081';\r\nexport const URL_BASE_DEV = 'http://localhost:5000';\r\nexport const URL_BASE = process.env.NODE_ENV === 'development' ? URL_BASE_DEV : '';\r\nexport const AUTH_URL_BASE = URL_BASE + '/auth';\r\nexport const API_URL_BASE = URL_BASE + '/api/';\r\n\r\nexport const URL_LIST = \"/l\";\r\nexport const URL_DELETE = \"/d\";\r\nexport const URL_DETAILS = \"/g\";\r\nexport const URL_OPTIONS = \"/o\";\r\nexport const URL_SAVE = \"/s\";\r\n\r\nexport const AUTH_USER = 'auth/setUser';\r\nexport const AUTH_USER_OBJ = 'auth/setUserObj';\r\nexport const JWT_TOKEN = 'auth/setToken';\r\n\r\nexport const UPDATE_ERROR = 'Error: Unable to update. Please contact system administrator.';\r\nexport const REQUIRED_DESCRIPTION = 'Description is required';\r\nexport const REQUIRED_5_DESCRIPTION = 'Description should be atleast 5 characters';\r\nexport const REQUIRED_TARGET_DATE = 'Target date is required';\r\n\r\n\r\nexport const OPTIONS = {\r\n    YES: 'YES',\r\n    NO: 'NO',\r\n}\r\nexport const THEME = {\r\n    DARK_MODE: 'dark',\r\n    LIGHT_MODE: 'light',\r\n    THEME_STORAGE_NAME: 'THEME_DARK_MODE'\r\n}\r\nexport const PAGE_URL = {\r\n    LOGO_URL: '/r/logo/',\r\n    ROOT: '/',\r\n    INDEX: '/index.html',\r\n    DASHBOARD: '/dashboard',\r\n    LOGOUT: '/logout',\r\n    LOGIN: '/login',\r\n    GRADE_LEVEL_PAYABLES_LIST: '/ui/grade-level-payables-list',\r\n    GRADE_LEVEL_PAYABLES_DETAIL: '/ui/grade-level-payables-detail/:id',\r\n    GRADE_LEVEL_PAYABLES_DETAIL_URL: '/ui/grade-level-payables-detail',\r\n    ACCOUNT_PAYABLES_SETTINGS_LIST: '/ui/account-payables-settings-list',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL: '/ui/account-payables-settings-detail/:id',\r\n    ACCOUNT_PAYABLES_SETTINGS_DETAIL_URL: '/ui/account-payables-settings-detail',\r\n    SCHOOL_LIST: '/ui/school-list',\r\n    SCHOOL_DETAIL: '/ui/school-detail/:id',\r\n    SCHOOL_DETAIL_URL: '/ui/school-detail',\r\n    STUDENT_LIST: '/ui/student-list',\r\n    STUDENT_DETAIL: '/ui/student-detail/:id',\r\n    STUDENT_DETAIL_URL: '/ui/student-detail',\r\n    BILLING: '/ui/billing',\r\n    BILLING_PAYABLES: '/ui/billing/:id',\r\n    BILLING_PAYABLES_URL: '/ui/billing',\r\n    USER_LIST: '/ui/user-list',\r\n    USER_DETAIL: '/ui/user-detail/:id',\r\n    USER_DETAIL_URL: '/ui/user-detail',\r\n    CODE_GROUPS_DETAIL: '/ui/code-groups-detail/:id',\r\n    CODE_GROUPS_DETAIL_URL: '/ui/code-groups-detail',\r\n    CODE_GROUPS_LIST: '/ui/code-groups-list',\r\n    ADDRESS_LIST: '/ui/address-list',\r\n    ADDRESS_DETAIL: '/ui/address-detail/:id',\r\n    USER_ADDRESS_DETAIL: '/ui/address-detail/:id/:refId/:typeId'\r\n}\r\nexport const ERROR_CODE = {\r\n    LOGIN_ERROR: '100000',\r\n    RETRIEVE_ERROR: '100001',\r\n    SAVE_ERROR: '100002',\r\n    DELETE_ERROR: '100003',\r\n    LIST_ERROR: '100004'\r\n}\r\n\r\nexport const ADDRESS_TYPE = {\r\n    USER: '1',\r\n    STUDENT: '2',\r\n    PARENT: '3'\r\n}\r\nexport const StyledTableHeadRow = withStyles((theme) => ({\r\n    root: {\r\n        fontWeight: \"bold\",\r\n        // '&:nth-of-type(odd)': {\r\n        //     backgroundColor: theme.palette.background,\r\n        // },\r\n    },\r\n    head: {\r\n        // backgroundColor: theme.palette.common.black,\r\n        // color: theme.palette.common.white,\r\n    },\r\n    // body: {\r\n    //     fontSize: 14,\r\n    //     fontWeight: \"bold\",\r\n    // },\r\n}))(TableRow);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        }\r\n    },\r\n}))(TableRow);\r\n\r\nexport const StyledTableHeadCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 16,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 12,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 14,\r\n        //     backgroundColor: theme.palette.common.black,\r\n        //     color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontWeight: \"bold\",\r\n        fontStyle: \"bold\",\r\n        fontSize: 20,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nclass Utils {\r\n\r\n    getFormatedErrorMessage = (error, errorCode, formMethod, serviceName) => {\r\n        let errMsg = `Error (${errorCode}): ${error.message} `;\r\n        console.error(`[${formMethod}] ${serviceName} error msg: ${errMsg}`, error);\r\n        console.error(`[${formMethod}] ${serviceName} error `, JSON.stringify(error));\r\n\r\n        if (error.message) {\r\n            errMsg = error.message\r\n        }\r\n\r\n        if (error.response) {\r\n            // Request made and server responded\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n            errMsg = `${error.response.data}`\r\n        }\r\n\r\n        return errMsg;\r\n    }\r\n    urlListPattern = (entity) => API_URL_BASE + entity + URL_LIST\r\n    urlDeletePattern = (entity) => API_URL_BASE + entity + URL_DELETE\r\n    urlDetailsPattern = (entity) => API_URL_BASE + entity + URL_DETAILS\r\n    urlOptionsPattern = (entity) => API_URL_BASE + entity + URL_OPTIONS\r\n    urlSavePattern = (entity) => API_URL_BASE + entity + URL_SAVE\r\n}\r\n\r\nexport default new Utils();"],"sourceRoot":""}